2024-04-12 23:33:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-12 23:33:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-12 23:33:03,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-12 23:33:03,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:40:40,818:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:40:40,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:40:40,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:40:40,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:41:03,886:INFO:PyCaret ClassificationExperiment
2024-04-14 11:41:03,886:INFO:Logging name: clf-default-name
2024-04-14 11:41:03,887:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:41:03,887:INFO:version 3.3.0
2024-04-14 11:41:03,887:INFO:Initializing setup()
2024-04-14 11:41:03,887:INFO:self.USI: ec1e
2024-04-14 11:41:03,887:INFO:self._variable_keys: {'is_multiclass', 'X', 'pipeline', 'y', 'y_test', 'html_param', 'n_jobs_param', 'fold_shuffle_param', 'X_train', '_ml_usecase', 'X_test', 'fold_generator', 'idx', 'y_train', 'USI', 'seed', 'gpu_param', 'target_param', 'memory', 'fold_groups_param', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'exp_name_log', 'data', 'log_plots_param', 'fix_imbalance', 'logging_param'}
2024-04-14 11:41:03,887:INFO:Checking environment
2024-04-14 11:41:03,887:INFO:python_version: 3.9.5
2024-04-14 11:41:03,887:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 11:41:03,887:INFO:machine: AMD64
2024-04-14 11:41:03,887:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 11:41:03,899:INFO:Memory: svmem(total=6312697856, available=68784128, percent=98.9, used=6243913728, free=68784128)
2024-04-14 11:41:03,900:INFO:Physical Core: 4
2024-04-14 11:41:03,901:INFO:Logical Core: 8
2024-04-14 11:41:03,901:INFO:Checking libraries
2024-04-14 11:41:03,901:INFO:System:
2024-04-14 11:41:03,901:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 11:41:03,901:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 11:41:03,901:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 11:41:03,901:INFO:PyCaret required dependencies:
2024-04-14 11:41:04,438:INFO:                 pip: 24.0
2024-04-14 11:41:04,438:INFO:          setuptools: 56.0.0
2024-04-14 11:41:04,438:INFO:             pycaret: 3.3.0
2024-04-14 11:41:04,438:INFO:             IPython: 8.6.0
2024-04-14 11:41:04,438:INFO:          ipywidgets: 8.1.2
2024-04-14 11:41:04,438:INFO:                tqdm: 4.66.2
2024-04-14 11:41:04,438:INFO:               numpy: 1.24.4
2024-04-14 11:41:04,438:INFO:              pandas: 2.1.4
2024-04-14 11:41:04,438:INFO:              jinja2: 3.1.2
2024-04-14 11:41:04,438:INFO:               scipy: 1.9.0
2024-04-14 11:41:04,438:INFO:              joblib: 1.3.2
2024-04-14 11:41:04,438:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:41:04,438:INFO:                pyod: 1.1.3
2024-04-14 11:41:04,438:INFO:            imblearn: 0.12.2
2024-04-14 11:41:04,438:INFO:   category_encoders: 2.6.3
2024-04-14 11:41:04,438:INFO:            lightgbm: 4.3.0
2024-04-14 11:41:04,438:INFO:               numba: 0.59.1
2024-04-14 11:41:04,438:INFO:            requests: 2.31.0
2024-04-14 11:41:04,438:INFO:          matplotlib: 3.5.3
2024-04-14 11:41:04,438:INFO:          scikitplot: 0.3.7
2024-04-14 11:41:04,438:INFO:         yellowbrick: 1.5
2024-04-14 11:41:04,438:INFO:              plotly: 5.15.0
2024-04-14 11:41:04,438:INFO:    plotly-resampler: Not installed
2024-04-14 11:41:04,438:INFO:             kaleido: 0.2.1
2024-04-14 11:41:04,438:INFO:           schemdraw: 0.15
2024-04-14 11:41:04,438:INFO:         statsmodels: 0.14.1
2024-04-14 11:41:04,438:INFO:              sktime: 0.28.0
2024-04-14 11:41:04,438:INFO:               tbats: 1.1.3
2024-04-14 11:41:04,438:INFO:            pmdarima: 2.0.4
2024-04-14 11:41:04,438:INFO:              psutil: 5.9.4
2024-04-14 11:41:04,438:INFO:          markupsafe: 2.1.1
2024-04-14 11:41:04,438:INFO:             pickle5: Not installed
2024-04-14 11:41:04,438:INFO:         cloudpickle: 3.0.0
2024-04-14 11:41:04,438:INFO:         deprecation: 2.1.0
2024-04-14 11:41:04,438:INFO:              xxhash: 3.4.1
2024-04-14 11:41:04,438:INFO:           wurlitzer: Not installed
2024-04-14 11:41:04,438:INFO:PyCaret optional dependencies:
2024-04-14 11:41:04,458:INFO:                shap: 0.45.0
2024-04-14 11:41:04,458:INFO:           interpret: 0.6.0
2024-04-14 11:41:04,458:INFO:                umap: 0.5.6
2024-04-14 11:41:04,458:INFO:     ydata_profiling: 4.7.0
2024-04-14 11:41:04,458:INFO:  explainerdashboard: 0.4.7
2024-04-14 11:41:04,458:INFO:             autoviz: Not installed
2024-04-14 11:41:04,458:INFO:           fairlearn: 0.7.0
2024-04-14 11:41:04,458:INFO:          deepchecks: Not installed
2024-04-14 11:41:04,458:INFO:             xgboost: Not installed
2024-04-14 11:41:04,458:INFO:            catboost: Not installed
2024-04-14 11:41:04,458:INFO:              kmodes: Not installed
2024-04-14 11:41:04,458:INFO:             mlxtend: Not installed
2024-04-14 11:41:04,458:INFO:       statsforecast: Not installed
2024-04-14 11:41:04,458:INFO:        tune_sklearn: Not installed
2024-04-14 11:41:04,458:INFO:                 ray: Not installed
2024-04-14 11:41:04,458:INFO:            hyperopt: Not installed
2024-04-14 11:41:04,458:INFO:              optuna: Not installed
2024-04-14 11:41:04,458:INFO:               skopt: Not installed
2024-04-14 11:41:04,458:INFO:              mlflow: 2.11.3
2024-04-14 11:41:04,458:INFO:              gradio: Not installed
2024-04-14 11:41:04,458:INFO:             fastapi: Not installed
2024-04-14 11:41:04,458:INFO:             uvicorn: Not installed
2024-04-14 11:41:04,467:INFO:              m2cgen: Not installed
2024-04-14 11:41:04,467:INFO:           evidently: Not installed
2024-04-14 11:41:04,467:INFO:               fugue: Not installed
2024-04-14 11:41:04,467:INFO:           streamlit: 1.23.1
2024-04-14 11:41:04,467:INFO:             prophet: Not installed
2024-04-14 11:41:04,467:INFO:None
2024-04-14 11:41:04,467:INFO:Set up data.
2024-04-14 11:41:04,487:INFO:Set up folding strategy.
2024-04-14 11:41:04,487:INFO:Set up train/test split.
2024-04-14 11:41:04,487:INFO:Set up data.
2024-04-14 11:41:04,497:INFO:Set up index.
2024-04-14 11:41:04,497:INFO:Assigning column types.
2024-04-14 11:41:04,511:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:41:04,597:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:41:04,607:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:41:04,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:04,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:04,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:41:04,797:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:41:04,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:04,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:04,857:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:41:04,948:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:41:05,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:41:05,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,161:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:41:05,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:05,477:INFO:Preparing preprocessing pipeline...
2024-04-14 11:41:05,487:INFO:Set up simple imputation.
2024-04-14 11:41:05,487:INFO:Set up feature normalization.
2024-04-14 11:41:05,642:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:41:05,660:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:41:05,660:INFO:Creating final display dataframe.
2024-04-14 11:41:05,947:INFO:Setup _display_container:                     Description             Value
0                    Session id              4765
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ec1e
2024-04-14 11:41:06,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:06,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:06,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:06,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:41:06,377:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 11:41:06,377:INFO:setup() successfully completed in 2.52s...............
2024-04-14 11:41:06,377:INFO:Initializing create_model()
2024-04-14 11:41:06,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2A8340>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:41:06,377:INFO:Checking exceptions
2024-04-14 11:41:06,467:INFO:Importing libraries
2024-04-14 11:41:06,467:INFO:Copying training dataset
2024-04-14 11:41:06,487:INFO:Defining folds
2024-04-14 11:41:06,492:INFO:Declaring metric variables
2024-04-14 11:41:06,507:INFO:Importing untrained model
2024-04-14 11:41:06,518:INFO:Logistic Regression Imported successfully
2024-04-14 11:41:06,547:INFO:Starting cross validation
2024-04-14 11:41:06,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:41:26,950:INFO:Calculating mean and std
2024-04-14 11:41:26,950:INFO:Creating metrics dataframe
2024-04-14 11:41:26,988:INFO:Finalizing model
2024-04-14 11:41:27,158:INFO:Uploading results into container
2024-04-14 11:41:27,158:INFO:Uploading model into container now
2024-04-14 11:41:27,168:INFO:_master_model_container: 1
2024-04-14 11:41:27,168:INFO:_display_container: 2
2024-04-14 11:41:27,168:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4765, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:41:27,168:INFO:create_model() successfully completed......................................
2024-04-14 11:41:27,296:INFO:Initializing create_model()
2024-04-14 11:41:27,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2A8340>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:41:27,296:INFO:Checking exceptions
2024-04-14 11:41:27,353:INFO:Importing libraries
2024-04-14 11:41:27,353:INFO:Copying training dataset
2024-04-14 11:41:27,368:INFO:Defining folds
2024-04-14 11:41:27,368:INFO:Declaring metric variables
2024-04-14 11:41:27,376:INFO:Importing untrained model
2024-04-14 11:41:27,385:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:41:27,399:INFO:Starting cross validation
2024-04-14 11:41:27,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:41:28,615:INFO:Calculating mean and std
2024-04-14 11:41:28,618:INFO:Creating metrics dataframe
2024-04-14 11:41:28,634:INFO:Finalizing model
2024-04-14 11:41:28,798:INFO:Uploading results into container
2024-04-14 11:41:28,803:INFO:Uploading model into container now
2024-04-14 11:41:28,833:INFO:_master_model_container: 2
2024-04-14 11:41:28,833:INFO:_display_container: 3
2024-04-14 11:41:28,833:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4765, splitter='best')
2024-04-14 11:41:28,833:INFO:create_model() successfully completed......................................
2024-04-14 11:41:29,006:INFO:Initializing predict_model()
2024-04-14 11:41:29,007:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2A8340>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4765, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3F755700>)
2024-04-14 11:41:29,007:INFO:Checking exceptions
2024-04-14 11:41:29,007:INFO:Preloading libraries
2024-04-14 11:41:29,009:INFO:Set up data.
2024-04-14 11:41:29,025:INFO:Set up index.
2024-04-14 11:41:29,268:INFO:Initializing predict_model()
2024-04-14 11:41:29,268:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2A8340>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4765, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3F755700>)
2024-04-14 11:41:29,268:INFO:Checking exceptions
2024-04-14 11:41:29,268:INFO:Preloading libraries
2024-04-14 11:41:29,273:INFO:Set up data.
2024-04-14 11:41:29,285:INFO:Set up index.
2024-04-14 11:43:36,431:INFO:PyCaret ClassificationExperiment
2024-04-14 11:43:36,435:INFO:Logging name: clf-default-name
2024-04-14 11:43:36,436:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:43:36,436:INFO:version 3.3.0
2024-04-14 11:43:36,436:INFO:Initializing setup()
2024-04-14 11:43:36,437:INFO:self.USI: e20b
2024-04-14 11:43:36,437:INFO:self._variable_keys: {'is_multiclass', 'X', 'pipeline', 'y', 'y_test', 'html_param', 'n_jobs_param', 'fold_shuffle_param', 'X_train', '_ml_usecase', 'X_test', 'fold_generator', 'idx', 'y_train', 'USI', 'seed', 'gpu_param', 'target_param', 'memory', 'fold_groups_param', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'exp_name_log', 'data', 'log_plots_param', 'fix_imbalance', 'logging_param'}
2024-04-14 11:43:36,437:INFO:Checking environment
2024-04-14 11:43:36,438:INFO:python_version: 3.9.5
2024-04-14 11:43:36,438:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 11:43:36,438:INFO:machine: AMD64
2024-04-14 11:43:36,438:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 11:43:36,450:INFO:Memory: svmem(total=6312697856, available=262811648, percent=95.8, used=6049886208, free=262811648)
2024-04-14 11:43:36,450:INFO:Physical Core: 4
2024-04-14 11:43:36,451:INFO:Logical Core: 8
2024-04-14 11:43:36,451:INFO:Checking libraries
2024-04-14 11:43:36,452:INFO:System:
2024-04-14 11:43:36,452:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 11:43:36,452:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 11:43:36,452:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 11:43:36,453:INFO:PyCaret required dependencies:
2024-04-14 11:43:36,453:INFO:                 pip: 24.0
2024-04-14 11:43:36,454:INFO:          setuptools: 56.0.0
2024-04-14 11:43:36,454:INFO:             pycaret: 3.3.0
2024-04-14 11:43:36,454:INFO:             IPython: 8.6.0
2024-04-14 11:43:36,454:INFO:          ipywidgets: 8.1.2
2024-04-14 11:43:36,454:INFO:                tqdm: 4.66.2
2024-04-14 11:43:36,454:INFO:               numpy: 1.24.4
2024-04-14 11:43:36,455:INFO:              pandas: 2.1.4
2024-04-14 11:43:36,455:INFO:              jinja2: 3.1.2
2024-04-14 11:43:36,456:INFO:               scipy: 1.9.0
2024-04-14 11:43:36,456:INFO:              joblib: 1.3.2
2024-04-14 11:43:36,457:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:43:36,457:INFO:                pyod: 1.1.3
2024-04-14 11:43:36,457:INFO:            imblearn: 0.12.2
2024-04-14 11:43:36,457:INFO:   category_encoders: 2.6.3
2024-04-14 11:43:36,458:INFO:            lightgbm: 4.3.0
2024-04-14 11:43:36,458:INFO:               numba: 0.59.1
2024-04-14 11:43:36,458:INFO:            requests: 2.31.0
2024-04-14 11:43:36,458:INFO:          matplotlib: 3.5.3
2024-04-14 11:43:36,458:INFO:          scikitplot: 0.3.7
2024-04-14 11:43:36,459:INFO:         yellowbrick: 1.5
2024-04-14 11:43:36,459:INFO:              plotly: 5.15.0
2024-04-14 11:43:36,459:INFO:    plotly-resampler: Not installed
2024-04-14 11:43:36,459:INFO:             kaleido: 0.2.1
2024-04-14 11:43:36,459:INFO:           schemdraw: 0.15
2024-04-14 11:43:36,459:INFO:         statsmodels: 0.14.1
2024-04-14 11:43:36,459:INFO:              sktime: 0.28.0
2024-04-14 11:43:36,459:INFO:               tbats: 1.1.3
2024-04-14 11:43:36,459:INFO:            pmdarima: 2.0.4
2024-04-14 11:43:36,460:INFO:              psutil: 5.9.4
2024-04-14 11:43:36,460:INFO:          markupsafe: 2.1.1
2024-04-14 11:43:36,460:INFO:             pickle5: Not installed
2024-04-14 11:43:36,460:INFO:         cloudpickle: 3.0.0
2024-04-14 11:43:36,460:INFO:         deprecation: 2.1.0
2024-04-14 11:43:36,460:INFO:              xxhash: 3.4.1
2024-04-14 11:43:36,460:INFO:           wurlitzer: Not installed
2024-04-14 11:43:36,460:INFO:PyCaret optional dependencies:
2024-04-14 11:43:36,460:INFO:                shap: 0.45.0
2024-04-14 11:43:36,460:INFO:           interpret: 0.6.0
2024-04-14 11:43:36,460:INFO:                umap: 0.5.6
2024-04-14 11:43:36,460:INFO:     ydata_profiling: 4.7.0
2024-04-14 11:43:36,460:INFO:  explainerdashboard: 0.4.7
2024-04-14 11:43:36,460:INFO:             autoviz: Not installed
2024-04-14 11:43:36,460:INFO:           fairlearn: 0.7.0
2024-04-14 11:43:36,460:INFO:          deepchecks: Not installed
2024-04-14 11:43:36,460:INFO:             xgboost: Not installed
2024-04-14 11:43:36,461:INFO:            catboost: Not installed
2024-04-14 11:43:36,461:INFO:              kmodes: Not installed
2024-04-14 11:43:36,461:INFO:             mlxtend: Not installed
2024-04-14 11:43:36,461:INFO:       statsforecast: Not installed
2024-04-14 11:43:36,461:INFO:        tune_sklearn: Not installed
2024-04-14 11:43:36,461:INFO:                 ray: Not installed
2024-04-14 11:43:36,461:INFO:            hyperopt: Not installed
2024-04-14 11:43:36,461:INFO:              optuna: Not installed
2024-04-14 11:43:36,461:INFO:               skopt: Not installed
2024-04-14 11:43:36,461:INFO:              mlflow: 2.11.3
2024-04-14 11:43:36,461:INFO:              gradio: Not installed
2024-04-14 11:43:36,461:INFO:             fastapi: Not installed
2024-04-14 11:43:36,461:INFO:             uvicorn: Not installed
2024-04-14 11:43:36,461:INFO:              m2cgen: Not installed
2024-04-14 11:43:36,461:INFO:           evidently: Not installed
2024-04-14 11:43:36,461:INFO:               fugue: Not installed
2024-04-14 11:43:36,462:INFO:           streamlit: 1.23.1
2024-04-14 11:43:36,462:INFO:             prophet: Not installed
2024-04-14 11:43:36,462:INFO:None
2024-04-14 11:43:36,462:INFO:Set up data.
2024-04-14 11:43:36,495:INFO:Set up folding strategy.
2024-04-14 11:43:36,495:INFO:Set up train/test split.
2024-04-14 11:43:36,495:INFO:Set up data.
2024-04-14 11:43:36,504:INFO:Set up index.
2024-04-14 11:43:36,505:INFO:Assigning column types.
2024-04-14 11:43:36,517:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:43:36,608:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:43:36,608:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:36,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:36,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:36,737:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:43:36,739:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:36,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:36,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:36,800:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:43:36,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:36,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:36,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:43:37,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,100:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:43:37,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,447:INFO:Preparing preprocessing pipeline...
2024-04-14 11:43:37,453:INFO:Set up simple imputation.
2024-04-14 11:43:37,453:INFO:Set up feature normalization.
2024-04-14 11:43:37,559:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:43:37,566:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:43:37,566:INFO:Creating final display dataframe.
2024-04-14 11:43:37,729:INFO:Setup _display_container:                     Description             Value
0                    Session id              5563
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e20b
2024-04-14 11:43:37,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:37,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:38,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:38,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:43:38,044:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 11:43:38,044:INFO:setup() successfully completed in 1.64s...............
2024-04-14 11:43:38,054:INFO:Initializing create_model()
2024-04-14 11:43:38,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2B6CA0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:38,054:INFO:Checking exceptions
2024-04-14 11:43:38,117:INFO:Importing libraries
2024-04-14 11:43:38,117:INFO:Copying training dataset
2024-04-14 11:43:38,139:INFO:Defining folds
2024-04-14 11:43:38,139:INFO:Declaring metric variables
2024-04-14 11:43:38,151:INFO:Importing untrained model
2024-04-14 11:43:38,163:INFO:Logistic Regression Imported successfully
2024-04-14 11:43:38,186:INFO:Starting cross validation
2024-04-14 11:43:38,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:43:38,984:INFO:Calculating mean and std
2024-04-14 11:43:38,992:INFO:Creating metrics dataframe
2024-04-14 11:43:39,059:INFO:Finalizing model
2024-04-14 11:43:39,270:INFO:Uploading results into container
2024-04-14 11:43:39,274:INFO:Uploading model into container now
2024-04-14 11:43:39,304:INFO:_master_model_container: 1
2024-04-14 11:43:39,304:INFO:_display_container: 2
2024-04-14 11:43:39,304:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5563, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:43:39,304:INFO:create_model() successfully completed......................................
2024-04-14 11:43:39,854:INFO:Initializing create_model()
2024-04-14 11:43:39,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2B6CA0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:43:39,854:INFO:Checking exceptions
2024-04-14 11:43:39,910:INFO:Importing libraries
2024-04-14 11:43:39,911:INFO:Copying training dataset
2024-04-14 11:43:39,930:INFO:Defining folds
2024-04-14 11:43:39,930:INFO:Declaring metric variables
2024-04-14 11:43:39,943:INFO:Importing untrained model
2024-04-14 11:43:39,957:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:43:39,977:INFO:Starting cross validation
2024-04-14 11:43:39,981:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:43:40,467:INFO:Calculating mean and std
2024-04-14 11:43:40,469:INFO:Creating metrics dataframe
2024-04-14 11:43:40,479:INFO:Finalizing model
2024-04-14 11:43:40,593:INFO:Uploading results into container
2024-04-14 11:43:40,594:INFO:Uploading model into container now
2024-04-14 11:43:40,616:INFO:_master_model_container: 2
2024-04-14 11:43:40,617:INFO:_display_container: 3
2024-04-14 11:43:40,619:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5563, splitter='best')
2024-04-14 11:43:40,619:INFO:create_model() successfully completed......................................
2024-04-14 11:43:40,810:INFO:Initializing predict_model()
2024-04-14 11:43:40,810:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2B6CA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5563, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A1903F160>)
2024-04-14 11:43:40,810:INFO:Checking exceptions
2024-04-14 11:43:40,810:INFO:Preloading libraries
2024-04-14 11:43:40,813:INFO:Set up data.
2024-04-14 11:43:40,820:INFO:Set up index.
2024-04-14 11:43:41,097:INFO:Initializing predict_model()
2024-04-14 11:43:41,097:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021A3E2B6CA0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5563, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A1903F160>)
2024-04-14 11:43:41,097:INFO:Checking exceptions
2024-04-14 11:43:41,097:INFO:Preloading libraries
2024-04-14 11:43:41,104:INFO:Set up data.
2024-04-14 11:43:41,109:INFO:Set up index.
2024-04-14 11:48:37,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:48:37,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:48:37,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:48:37,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 11:48:42,443:INFO:PyCaret ClassificationExperiment
2024-04-14 11:48:42,444:INFO:Logging name: clf-default-name
2024-04-14 11:48:42,446:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:48:42,446:INFO:version 3.3.0
2024-04-14 11:48:42,446:INFO:Initializing setup()
2024-04-14 11:48:42,446:INFO:self.USI: f7db
2024-04-14 11:48:42,448:INFO:self._variable_keys: {'seed', 'gpu_param', 'X_test', 'fold_shuffle_param', '_ml_usecase', 'memory', 'fold_groups_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'data', '_available_plots', 'fix_imbalance', 'idx', 'y_test', 'pipeline', 'exp_name_log', 'y', 'log_plots_param', 'target_param', 'fold_generator', 'logging_param', 'X_train', 'html_param', 'y_train', 'X', 'exp_id', 'is_multiclass'}
2024-04-14 11:48:42,448:INFO:Checking environment
2024-04-14 11:48:42,449:INFO:python_version: 3.9.5
2024-04-14 11:48:42,449:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 11:48:42,449:INFO:machine: AMD64
2024-04-14 11:48:42,449:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 11:48:42,458:INFO:Memory: svmem(total=6312697856, available=633008128, percent=90.0, used=5679689728, free=633008128)
2024-04-14 11:48:42,458:INFO:Physical Core: 4
2024-04-14 11:48:42,458:INFO:Logical Core: 8
2024-04-14 11:48:42,458:INFO:Checking libraries
2024-04-14 11:48:42,458:INFO:System:
2024-04-14 11:48:42,458:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 11:48:42,458:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 11:48:42,458:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 11:48:42,458:INFO:PyCaret required dependencies:
2024-04-14 11:48:42,821:INFO:                 pip: 24.0
2024-04-14 11:48:42,821:INFO:          setuptools: 56.0.0
2024-04-14 11:48:42,821:INFO:             pycaret: 3.3.0
2024-04-14 11:48:42,821:INFO:             IPython: 8.6.0
2024-04-14 11:48:42,821:INFO:          ipywidgets: 8.1.2
2024-04-14 11:48:42,828:INFO:                tqdm: 4.66.2
2024-04-14 11:48:42,828:INFO:               numpy: 1.24.4
2024-04-14 11:48:42,828:INFO:              pandas: 2.1.4
2024-04-14 11:48:42,833:INFO:              jinja2: 3.1.2
2024-04-14 11:48:42,833:INFO:               scipy: 1.9.0
2024-04-14 11:48:42,833:INFO:              joblib: 1.3.2
2024-04-14 11:48:42,838:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:48:42,838:INFO:                pyod: 1.1.3
2024-04-14 11:48:42,843:INFO:            imblearn: 0.12.2
2024-04-14 11:48:42,843:INFO:   category_encoders: 2.6.3
2024-04-14 11:48:42,843:INFO:            lightgbm: 4.3.0
2024-04-14 11:48:42,843:INFO:               numba: 0.59.1
2024-04-14 11:48:42,843:INFO:            requests: 2.31.0
2024-04-14 11:48:42,843:INFO:          matplotlib: 3.5.3
2024-04-14 11:48:42,843:INFO:          scikitplot: 0.3.7
2024-04-14 11:48:42,843:INFO:         yellowbrick: 1.5
2024-04-14 11:48:42,843:INFO:              plotly: 5.15.0
2024-04-14 11:48:42,843:INFO:    plotly-resampler: Not installed
2024-04-14 11:48:42,843:INFO:             kaleido: 0.2.1
2024-04-14 11:48:42,843:INFO:           schemdraw: 0.15
2024-04-14 11:48:42,843:INFO:         statsmodels: 0.14.1
2024-04-14 11:48:42,843:INFO:              sktime: 0.28.0
2024-04-14 11:48:42,843:INFO:               tbats: 1.1.3
2024-04-14 11:48:42,843:INFO:            pmdarima: 2.0.4
2024-04-14 11:48:42,843:INFO:              psutil: 5.9.4
2024-04-14 11:48:42,843:INFO:          markupsafe: 2.1.1
2024-04-14 11:48:42,843:INFO:             pickle5: Not installed
2024-04-14 11:48:42,843:INFO:         cloudpickle: 3.0.0
2024-04-14 11:48:42,843:INFO:         deprecation: 2.1.0
2024-04-14 11:48:42,843:INFO:              xxhash: 3.4.1
2024-04-14 11:48:42,843:INFO:           wurlitzer: Not installed
2024-04-14 11:48:42,843:INFO:PyCaret optional dependencies:
2024-04-14 11:48:42,908:INFO:                shap: 0.45.0
2024-04-14 11:48:42,908:INFO:           interpret: 0.6.0
2024-04-14 11:48:42,908:INFO:                umap: 0.5.6
2024-04-14 11:48:42,908:INFO:     ydata_profiling: 4.7.0
2024-04-14 11:48:42,909:INFO:  explainerdashboard: 0.4.7
2024-04-14 11:48:42,909:INFO:             autoviz: Not installed
2024-04-14 11:48:42,909:INFO:           fairlearn: 0.7.0
2024-04-14 11:48:42,909:INFO:          deepchecks: Not installed
2024-04-14 11:48:42,909:INFO:             xgboost: Not installed
2024-04-14 11:48:42,909:INFO:            catboost: Not installed
2024-04-14 11:48:42,909:INFO:              kmodes: Not installed
2024-04-14 11:48:42,909:INFO:             mlxtend: Not installed
2024-04-14 11:48:42,909:INFO:       statsforecast: Not installed
2024-04-14 11:48:42,910:INFO:        tune_sklearn: Not installed
2024-04-14 11:48:42,910:INFO:                 ray: Not installed
2024-04-14 11:48:42,910:INFO:            hyperopt: Not installed
2024-04-14 11:48:42,910:INFO:              optuna: Not installed
2024-04-14 11:48:42,911:INFO:               skopt: Not installed
2024-04-14 11:48:42,911:INFO:              mlflow: 2.11.3
2024-04-14 11:48:42,911:INFO:              gradio: Not installed
2024-04-14 11:48:42,911:INFO:             fastapi: Not installed
2024-04-14 11:48:42,911:INFO:             uvicorn: Not installed
2024-04-14 11:48:42,911:INFO:              m2cgen: Not installed
2024-04-14 11:48:42,911:INFO:           evidently: Not installed
2024-04-14 11:48:42,911:INFO:               fugue: Not installed
2024-04-14 11:48:42,911:INFO:           streamlit: 1.23.1
2024-04-14 11:48:42,912:INFO:             prophet: Not installed
2024-04-14 11:48:42,912:INFO:None
2024-04-14 11:48:42,912:INFO:Set up data.
2024-04-14 11:48:42,943:INFO:Set up folding strategy.
2024-04-14 11:48:42,944:INFO:Set up train/test split.
2024-04-14 11:48:42,944:INFO:Set up data.
2024-04-14 11:48:42,958:INFO:Set up index.
2024-04-14 11:48:42,958:INFO:Assigning column types.
2024-04-14 11:48:42,983:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:48:43,098:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:48:43,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:48:43,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:48:43,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:48:43,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,460:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:48:43,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:48:43,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,738:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:48:43,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:43,799:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:48:44,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,268:INFO:Preparing preprocessing pipeline...
2024-04-14 11:48:44,273:INFO:Set up simple imputation.
2024-04-14 11:48:44,273:INFO:Set up feature normalization.
2024-04-14 11:48:44,332:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:48:44,346:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:48:44,347:INFO:Creating final display dataframe.
2024-04-14 11:48:44,513:INFO:Setup _display_container:                     Description             Value
0                    Session id              6473
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f7db
2024-04-14 11:48:44,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:48:44,900:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 11:48:44,900:INFO:setup() successfully completed in 2.47s...............
2024-04-14 11:48:44,900:INFO:Initializing create_model()
2024-04-14 11:48:44,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8C4749D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:48:44,900:INFO:Checking exceptions
2024-04-14 11:48:44,994:INFO:Importing libraries
2024-04-14 11:48:44,995:INFO:Copying training dataset
2024-04-14 11:48:45,025:INFO:Defining folds
2024-04-14 11:48:45,025:INFO:Declaring metric variables
2024-04-14 11:48:45,043:INFO:Importing untrained model
2024-04-14 11:48:45,059:INFO:Logistic Regression Imported successfully
2024-04-14 11:48:45,078:INFO:Starting cross validation
2024-04-14 11:48:45,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:49:00,249:INFO:Calculating mean and std
2024-04-14 11:49:00,253:INFO:Creating metrics dataframe
2024-04-14 11:49:00,271:INFO:Finalizing model
2024-04-14 11:49:00,438:INFO:Uploading results into container
2024-04-14 11:49:00,439:INFO:Uploading model into container now
2024-04-14 11:49:00,469:INFO:_master_model_container: 1
2024-04-14 11:49:00,469:INFO:_display_container: 2
2024-04-14 11:49:00,470:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6473, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:49:00,470:INFO:create_model() successfully completed......................................
2024-04-14 11:49:00,619:INFO:Initializing create_model()
2024-04-14 11:49:00,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8C4749D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:49:00,619:INFO:Checking exceptions
2024-04-14 11:49:00,690:INFO:Importing libraries
2024-04-14 11:49:00,690:INFO:Copying training dataset
2024-04-14 11:49:00,714:INFO:Defining folds
2024-04-14 11:49:00,714:INFO:Declaring metric variables
2024-04-14 11:49:00,727:INFO:Importing untrained model
2024-04-14 11:49:00,740:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:49:00,761:INFO:Starting cross validation
2024-04-14 11:49:00,766:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:49:01,843:INFO:Calculating mean and std
2024-04-14 11:49:01,870:INFO:Creating metrics dataframe
2024-04-14 11:49:01,882:INFO:Finalizing model
2024-04-14 11:49:02,036:INFO:Uploading results into container
2024-04-14 11:49:02,037:INFO:Uploading model into container now
2024-04-14 11:49:02,062:INFO:_master_model_container: 2
2024-04-14 11:49:02,063:INFO:_display_container: 3
2024-04-14 11:49:02,064:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6473, splitter='best')
2024-04-14 11:49:02,064:INFO:create_model() successfully completed......................................
2024-04-14 11:49:02,255:INFO:Initializing predict_model()
2024-04-14 11:49:02,256:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8C4749D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6473, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8BBA6310>)
2024-04-14 11:49:02,256:INFO:Checking exceptions
2024-04-14 11:49:02,256:INFO:Preloading libraries
2024-04-14 11:49:02,260:INFO:Set up data.
2024-04-14 11:49:02,274:INFO:Set up index.
2024-04-14 11:49:02,552:INFO:Initializing predict_model()
2024-04-14 11:49:02,552:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8C4749D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6473, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8BBA6310>)
2024-04-14 11:49:02,553:INFO:Checking exceptions
2024-04-14 11:49:02,553:INFO:Preloading libraries
2024-04-14 11:49:02,557:INFO:Set up data.
2024-04-14 11:49:02,567:INFO:Set up index.
2024-04-14 11:51:33,708:INFO:PyCaret ClassificationExperiment
2024-04-14 11:51:33,710:INFO:Logging name: clf-default-name
2024-04-14 11:51:33,710:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:51:33,710:INFO:version 3.3.0
2024-04-14 11:51:33,711:INFO:Initializing setup()
2024-04-14 11:51:33,711:INFO:self.USI: e488
2024-04-14 11:51:33,711:INFO:self._variable_keys: {'seed', 'gpu_param', 'X_test', 'fold_shuffle_param', '_ml_usecase', 'memory', 'fold_groups_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'data', '_available_plots', 'fix_imbalance', 'idx', 'y_test', 'pipeline', 'exp_name_log', 'y', 'log_plots_param', 'target_param', 'fold_generator', 'logging_param', 'X_train', 'html_param', 'y_train', 'X', 'exp_id', 'is_multiclass'}
2024-04-14 11:51:33,711:INFO:Checking environment
2024-04-14 11:51:33,712:INFO:python_version: 3.9.5
2024-04-14 11:51:33,712:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 11:51:33,712:INFO:machine: AMD64
2024-04-14 11:51:33,712:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 11:51:33,720:INFO:Memory: svmem(total=6312697856, available=291667968, percent=95.4, used=6021029888, free=291667968)
2024-04-14 11:51:33,720:INFO:Physical Core: 4
2024-04-14 11:51:33,720:INFO:Logical Core: 8
2024-04-14 11:51:33,721:INFO:Checking libraries
2024-04-14 11:51:33,721:INFO:System:
2024-04-14 11:51:33,721:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 11:51:33,721:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 11:51:33,721:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 11:51:33,722:INFO:PyCaret required dependencies:
2024-04-14 11:51:33,722:INFO:                 pip: 24.0
2024-04-14 11:51:33,722:INFO:          setuptools: 56.0.0
2024-04-14 11:51:33,722:INFO:             pycaret: 3.3.0
2024-04-14 11:51:33,723:INFO:             IPython: 8.6.0
2024-04-14 11:51:33,723:INFO:          ipywidgets: 8.1.2
2024-04-14 11:51:33,723:INFO:                tqdm: 4.66.2
2024-04-14 11:51:33,723:INFO:               numpy: 1.24.4
2024-04-14 11:51:33,723:INFO:              pandas: 2.1.4
2024-04-14 11:51:33,724:INFO:              jinja2: 3.1.2
2024-04-14 11:51:33,724:INFO:               scipy: 1.9.0
2024-04-14 11:51:33,724:INFO:              joblib: 1.3.2
2024-04-14 11:51:33,726:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:51:33,727:INFO:                pyod: 1.1.3
2024-04-14 11:51:33,728:INFO:            imblearn: 0.12.2
2024-04-14 11:51:33,728:INFO:   category_encoders: 2.6.3
2024-04-14 11:51:33,728:INFO:            lightgbm: 4.3.0
2024-04-14 11:51:33,729:INFO:               numba: 0.59.1
2024-04-14 11:51:33,729:INFO:            requests: 2.31.0
2024-04-14 11:51:33,729:INFO:          matplotlib: 3.5.3
2024-04-14 11:51:33,729:INFO:          scikitplot: 0.3.7
2024-04-14 11:51:33,729:INFO:         yellowbrick: 1.5
2024-04-14 11:51:33,729:INFO:              plotly: 5.15.0
2024-04-14 11:51:33,729:INFO:    plotly-resampler: Not installed
2024-04-14 11:51:33,729:INFO:             kaleido: 0.2.1
2024-04-14 11:51:33,729:INFO:           schemdraw: 0.15
2024-04-14 11:51:33,730:INFO:         statsmodels: 0.14.1
2024-04-14 11:51:33,730:INFO:              sktime: 0.28.0
2024-04-14 11:51:33,730:INFO:               tbats: 1.1.3
2024-04-14 11:51:33,730:INFO:            pmdarima: 2.0.4
2024-04-14 11:51:33,730:INFO:              psutil: 5.9.4
2024-04-14 11:51:33,730:INFO:          markupsafe: 2.1.1
2024-04-14 11:51:33,730:INFO:             pickle5: Not installed
2024-04-14 11:51:33,730:INFO:         cloudpickle: 3.0.0
2024-04-14 11:51:33,730:INFO:         deprecation: 2.1.0
2024-04-14 11:51:33,730:INFO:              xxhash: 3.4.1
2024-04-14 11:51:33,730:INFO:           wurlitzer: Not installed
2024-04-14 11:51:33,730:INFO:PyCaret optional dependencies:
2024-04-14 11:51:33,731:INFO:                shap: 0.45.0
2024-04-14 11:51:33,731:INFO:           interpret: 0.6.0
2024-04-14 11:51:33,731:INFO:                umap: 0.5.6
2024-04-14 11:51:33,731:INFO:     ydata_profiling: 4.7.0
2024-04-14 11:51:33,731:INFO:  explainerdashboard: 0.4.7
2024-04-14 11:51:33,731:INFO:             autoviz: Not installed
2024-04-14 11:51:33,731:INFO:           fairlearn: 0.7.0
2024-04-14 11:51:33,731:INFO:          deepchecks: Not installed
2024-04-14 11:51:33,731:INFO:             xgboost: Not installed
2024-04-14 11:51:33,731:INFO:            catboost: Not installed
2024-04-14 11:51:33,731:INFO:              kmodes: Not installed
2024-04-14 11:51:33,732:INFO:             mlxtend: Not installed
2024-04-14 11:51:33,732:INFO:       statsforecast: Not installed
2024-04-14 11:51:33,732:INFO:        tune_sklearn: Not installed
2024-04-14 11:51:33,732:INFO:                 ray: Not installed
2024-04-14 11:51:33,732:INFO:            hyperopt: Not installed
2024-04-14 11:51:33,732:INFO:              optuna: Not installed
2024-04-14 11:51:33,732:INFO:               skopt: Not installed
2024-04-14 11:51:33,732:INFO:              mlflow: 2.11.3
2024-04-14 11:51:33,732:INFO:              gradio: Not installed
2024-04-14 11:51:33,732:INFO:             fastapi: Not installed
2024-04-14 11:51:33,732:INFO:             uvicorn: Not installed
2024-04-14 11:51:33,732:INFO:              m2cgen: Not installed
2024-04-14 11:51:33,733:INFO:           evidently: Not installed
2024-04-14 11:51:33,733:INFO:               fugue: Not installed
2024-04-14 11:51:33,733:INFO:           streamlit: 1.23.1
2024-04-14 11:51:33,733:INFO:             prophet: Not installed
2024-04-14 11:51:33,733:INFO:None
2024-04-14 11:51:33,733:INFO:Set up data.
2024-04-14 11:51:33,749:INFO:Set up folding strategy.
2024-04-14 11:51:33,749:INFO:Set up train/test split.
2024-04-14 11:51:33,750:INFO:Set up data.
2024-04-14 11:51:33,756:INFO:Set up index.
2024-04-14 11:51:33,757:INFO:Assigning column types.
2024-04-14 11:51:33,766:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:51:33,844:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:51:33,846:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:51:33,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:33,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:33,978:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:51:33,979:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:51:34,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,034:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:51:34,123:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:51:34,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,265:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:51:34,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,361:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:51:34,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:34,690:INFO:Preparing preprocessing pipeline...
2024-04-14 11:51:34,694:INFO:Set up simple imputation.
2024-04-14 11:51:34,694:INFO:Set up feature normalization.
2024-04-14 11:51:34,750:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:51:34,757:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:51:34,757:INFO:Creating final display dataframe.
2024-04-14 11:51:34,939:INFO:Setup _display_container:                     Description             Value
0                    Session id              1898
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e488
2024-04-14 11:51:35,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:35,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:35,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:35,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:51:35,236:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 11:51:35,238:INFO:setup() successfully completed in 1.54s...............
2024-04-14 11:51:35,249:INFO:Initializing create_model()
2024-04-14 11:51:35,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DCA8DF0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:51:35,250:INFO:Checking exceptions
2024-04-14 11:51:35,362:INFO:Importing libraries
2024-04-14 11:51:35,362:INFO:Copying training dataset
2024-04-14 11:51:35,389:INFO:Defining folds
2024-04-14 11:51:35,389:INFO:Declaring metric variables
2024-04-14 11:51:35,403:INFO:Importing untrained model
2024-04-14 11:51:35,420:INFO:Logistic Regression Imported successfully
2024-04-14 11:51:35,454:INFO:Starting cross validation
2024-04-14 11:51:35,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:51:36,129:INFO:Calculating mean and std
2024-04-14 11:51:36,130:INFO:Creating metrics dataframe
2024-04-14 11:51:36,139:INFO:Finalizing model
2024-04-14 11:51:36,202:INFO:Uploading results into container
2024-04-14 11:51:36,204:INFO:Uploading model into container now
2024-04-14 11:51:36,231:INFO:_master_model_container: 1
2024-04-14 11:51:36,231:INFO:_display_container: 2
2024-04-14 11:51:36,233:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1898, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:51:36,233:INFO:create_model() successfully completed......................................
2024-04-14 11:51:36,622:INFO:Initializing create_model()
2024-04-14 11:51:36,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DCA8DF0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:51:36,622:INFO:Checking exceptions
2024-04-14 11:51:36,757:INFO:Importing libraries
2024-04-14 11:51:36,757:INFO:Copying training dataset
2024-04-14 11:51:36,787:INFO:Defining folds
2024-04-14 11:51:36,787:INFO:Declaring metric variables
2024-04-14 11:51:36,804:INFO:Importing untrained model
2024-04-14 11:51:36,820:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:51:36,845:INFO:Starting cross validation
2024-04-14 11:51:36,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:51:37,444:INFO:Calculating mean and std
2024-04-14 11:51:37,446:INFO:Creating metrics dataframe
2024-04-14 11:51:37,453:INFO:Finalizing model
2024-04-14 11:51:37,558:INFO:Uploading results into container
2024-04-14 11:51:37,561:INFO:Uploading model into container now
2024-04-14 11:51:37,582:INFO:_master_model_container: 2
2024-04-14 11:51:37,582:INFO:_display_container: 3
2024-04-14 11:51:37,583:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1898, splitter='best')
2024-04-14 11:51:37,583:INFO:create_model() successfully completed......................................
2024-04-14 11:51:37,766:INFO:Initializing predict_model()
2024-04-14 11:51:37,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DCA8DF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1898, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8DAE6550>)
2024-04-14 11:51:37,766:INFO:Checking exceptions
2024-04-14 11:51:37,766:INFO:Preloading libraries
2024-04-14 11:51:37,770:INFO:Set up data.
2024-04-14 11:51:37,775:INFO:Set up index.
2024-04-14 11:51:38,008:INFO:Initializing predict_model()
2024-04-14 11:51:38,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DCA8DF0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1898, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8DAE6550>)
2024-04-14 11:51:38,009:INFO:Checking exceptions
2024-04-14 11:51:38,009:INFO:Preloading libraries
2024-04-14 11:51:38,013:INFO:Set up data.
2024-04-14 11:51:38,018:INFO:Set up index.
2024-04-14 11:58:01,344:INFO:PyCaret ClassificationExperiment
2024-04-14 11:58:01,346:INFO:Logging name: clf-default-name
2024-04-14 11:58:01,347:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:58:01,347:INFO:version 3.3.0
2024-04-14 11:58:01,348:INFO:Initializing setup()
2024-04-14 11:58:01,348:INFO:self.USI: 73fa
2024-04-14 11:58:01,349:INFO:self._variable_keys: {'seed', 'gpu_param', 'X_test', 'fold_shuffle_param', '_ml_usecase', 'memory', 'fold_groups_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'data', '_available_plots', 'fix_imbalance', 'idx', 'y_test', 'pipeline', 'exp_name_log', 'y', 'log_plots_param', 'target_param', 'fold_generator', 'logging_param', 'X_train', 'html_param', 'y_train', 'X', 'exp_id', 'is_multiclass'}
2024-04-14 11:58:01,351:INFO:Checking environment
2024-04-14 11:58:01,352:INFO:python_version: 3.9.5
2024-04-14 11:58:01,353:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 11:58:01,354:INFO:machine: AMD64
2024-04-14 11:58:01,355:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 11:58:01,368:INFO:Memory: svmem(total=6312697856, available=705306624, percent=88.8, used=5607391232, free=705306624)
2024-04-14 11:58:01,368:INFO:Physical Core: 4
2024-04-14 11:58:01,369:INFO:Logical Core: 8
2024-04-14 11:58:01,369:INFO:Checking libraries
2024-04-14 11:58:01,370:INFO:System:
2024-04-14 11:58:01,370:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 11:58:01,370:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 11:58:01,371:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 11:58:01,371:INFO:PyCaret required dependencies:
2024-04-14 11:58:01,373:INFO:                 pip: 24.0
2024-04-14 11:58:01,374:INFO:          setuptools: 56.0.0
2024-04-14 11:58:01,374:INFO:             pycaret: 3.3.0
2024-04-14 11:58:01,375:INFO:             IPython: 8.6.0
2024-04-14 11:58:01,375:INFO:          ipywidgets: 8.1.2
2024-04-14 11:58:01,375:INFO:                tqdm: 4.66.2
2024-04-14 11:58:01,375:INFO:               numpy: 1.24.4
2024-04-14 11:58:01,376:INFO:              pandas: 2.1.4
2024-04-14 11:58:01,376:INFO:              jinja2: 3.1.2
2024-04-14 11:58:01,376:INFO:               scipy: 1.9.0
2024-04-14 11:58:01,376:INFO:              joblib: 1.3.2
2024-04-14 11:58:01,376:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:58:01,377:INFO:                pyod: 1.1.3
2024-04-14 11:58:01,377:INFO:            imblearn: 0.12.2
2024-04-14 11:58:01,377:INFO:   category_encoders: 2.6.3
2024-04-14 11:58:01,377:INFO:            lightgbm: 4.3.0
2024-04-14 11:58:01,377:INFO:               numba: 0.59.1
2024-04-14 11:58:01,378:INFO:            requests: 2.31.0
2024-04-14 11:58:01,378:INFO:          matplotlib: 3.5.3
2024-04-14 11:58:01,378:INFO:          scikitplot: 0.3.7
2024-04-14 11:58:01,378:INFO:         yellowbrick: 1.5
2024-04-14 11:58:01,378:INFO:              plotly: 5.15.0
2024-04-14 11:58:01,378:INFO:    plotly-resampler: Not installed
2024-04-14 11:58:01,378:INFO:             kaleido: 0.2.1
2024-04-14 11:58:01,378:INFO:           schemdraw: 0.15
2024-04-14 11:58:01,378:INFO:         statsmodels: 0.14.1
2024-04-14 11:58:01,378:INFO:              sktime: 0.28.0
2024-04-14 11:58:01,378:INFO:               tbats: 1.1.3
2024-04-14 11:58:01,378:INFO:            pmdarima: 2.0.4
2024-04-14 11:58:01,379:INFO:              psutil: 5.9.4
2024-04-14 11:58:01,379:INFO:          markupsafe: 2.1.1
2024-04-14 11:58:01,379:INFO:             pickle5: Not installed
2024-04-14 11:58:01,379:INFO:         cloudpickle: 3.0.0
2024-04-14 11:58:01,379:INFO:         deprecation: 2.1.0
2024-04-14 11:58:01,379:INFO:              xxhash: 3.4.1
2024-04-14 11:58:01,379:INFO:           wurlitzer: Not installed
2024-04-14 11:58:01,379:INFO:PyCaret optional dependencies:
2024-04-14 11:58:01,379:INFO:                shap: 0.45.0
2024-04-14 11:58:01,379:INFO:           interpret: 0.6.0
2024-04-14 11:58:01,379:INFO:                umap: 0.5.6
2024-04-14 11:58:01,379:INFO:     ydata_profiling: 4.7.0
2024-04-14 11:58:01,379:INFO:  explainerdashboard: 0.4.7
2024-04-14 11:58:01,379:INFO:             autoviz: Not installed
2024-04-14 11:58:01,379:INFO:           fairlearn: 0.7.0
2024-04-14 11:58:01,379:INFO:          deepchecks: Not installed
2024-04-14 11:58:01,380:INFO:             xgboost: Not installed
2024-04-14 11:58:01,380:INFO:            catboost: Not installed
2024-04-14 11:58:01,380:INFO:              kmodes: Not installed
2024-04-14 11:58:01,380:INFO:             mlxtend: Not installed
2024-04-14 11:58:01,380:INFO:       statsforecast: Not installed
2024-04-14 11:58:01,380:INFO:        tune_sklearn: Not installed
2024-04-14 11:58:01,380:INFO:                 ray: Not installed
2024-04-14 11:58:01,380:INFO:            hyperopt: Not installed
2024-04-14 11:58:01,380:INFO:              optuna: Not installed
2024-04-14 11:58:01,380:INFO:               skopt: Not installed
2024-04-14 11:58:01,380:INFO:              mlflow: 2.11.3
2024-04-14 11:58:01,380:INFO:              gradio: Not installed
2024-04-14 11:58:01,380:INFO:             fastapi: Not installed
2024-04-14 11:58:01,380:INFO:             uvicorn: Not installed
2024-04-14 11:58:01,380:INFO:              m2cgen: Not installed
2024-04-14 11:58:01,380:INFO:           evidently: Not installed
2024-04-14 11:58:01,380:INFO:               fugue: Not installed
2024-04-14 11:58:01,380:INFO:           streamlit: 1.23.1
2024-04-14 11:58:01,380:INFO:             prophet: Not installed
2024-04-14 11:58:01,381:INFO:None
2024-04-14 11:58:01,384:INFO:Set up data.
2024-04-14 11:58:01,426:INFO:Set up folding strategy.
2024-04-14 11:58:01,428:INFO:Set up train/test split.
2024-04-14 11:58:01,428:INFO:Set up data.
2024-04-14 11:58:01,440:INFO:Set up index.
2024-04-14 11:58:01,441:INFO:Assigning column types.
2024-04-14 11:58:01,455:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:58:01,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:58:01,566:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:58:01,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:01,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:01,733:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:58:01,736:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:58:01,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:01,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:01,802:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:58:01,900:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:58:01,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:01,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:02,045:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:58:02,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:02,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:02,102:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:58:02,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:02,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:02,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:02,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:02,536:INFO:Preparing preprocessing pipeline...
2024-04-14 11:58:02,538:INFO:Set up simple imputation.
2024-04-14 11:58:02,540:INFO:Set up feature normalization.
2024-04-14 11:58:02,628:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:58:02,640:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:58:02,641:INFO:Creating final display dataframe.
2024-04-14 11:58:02,844:INFO:Setup _display_container:                     Description             Value
0                    Session id              2312
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              73fa
2024-04-14 11:58:03,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:03,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:03,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:03,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:58:03,197:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 11:58:03,200:INFO:setup() successfully completed in 1.9s...............
2024-04-14 11:58:03,221:INFO:Initializing create_model()
2024-04-14 11:58:03,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DAB0CA0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:58:03,221:INFO:Checking exceptions
2024-04-14 11:58:03,312:INFO:Importing libraries
2024-04-14 11:58:03,312:INFO:Copying training dataset
2024-04-14 11:58:03,362:INFO:Defining folds
2024-04-14 11:58:03,362:INFO:Declaring metric variables
2024-04-14 11:58:03,377:INFO:Importing untrained model
2024-04-14 11:58:03,390:INFO:Logistic Regression Imported successfully
2024-04-14 11:58:03,406:INFO:Starting cross validation
2024-04-14 11:58:03,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:58:17,224:INFO:Calculating mean and std
2024-04-14 11:58:17,233:INFO:Creating metrics dataframe
2024-04-14 11:58:17,258:INFO:Finalizing model
2024-04-14 11:58:17,371:INFO:Uploading results into container
2024-04-14 11:58:17,373:INFO:Uploading model into container now
2024-04-14 11:58:17,407:INFO:_master_model_container: 1
2024-04-14 11:58:17,408:INFO:_display_container: 2
2024-04-14 11:58:17,408:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2312, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:58:17,409:INFO:create_model() successfully completed......................................
2024-04-14 11:58:22,034:INFO:Initializing create_model()
2024-04-14 11:58:22,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DAB0CA0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:58:22,035:INFO:Checking exceptions
2024-04-14 11:58:22,081:INFO:Importing libraries
2024-04-14 11:58:22,082:INFO:Copying training dataset
2024-04-14 11:58:22,106:INFO:Defining folds
2024-04-14 11:58:22,107:INFO:Declaring metric variables
2024-04-14 11:58:22,117:INFO:Importing untrained model
2024-04-14 11:58:22,128:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:58:22,149:INFO:Starting cross validation
2024-04-14 11:58:22,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:58:22,728:INFO:Calculating mean and std
2024-04-14 11:58:22,729:INFO:Creating metrics dataframe
2024-04-14 11:58:22,740:INFO:Finalizing model
2024-04-14 11:58:22,888:INFO:Uploading results into container
2024-04-14 11:58:22,891:INFO:Uploading model into container now
2024-04-14 11:58:22,915:INFO:_master_model_container: 2
2024-04-14 11:58:22,916:INFO:_display_container: 3
2024-04-14 11:58:22,917:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2312, splitter='best')
2024-04-14 11:58:22,917:INFO:create_model() successfully completed......................................
2024-04-14 11:58:23,161:INFO:Initializing predict_model()
2024-04-14 11:58:23,161:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DAB0CA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2312, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA9242BCA0>)
2024-04-14 11:58:23,161:INFO:Checking exceptions
2024-04-14 11:58:23,161:INFO:Preloading libraries
2024-04-14 11:58:23,166:INFO:Set up data.
2024-04-14 11:58:23,172:INFO:Set up index.
2024-04-14 11:58:23,426:INFO:Initializing predict_model()
2024-04-14 11:58:23,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8DAB0CA0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2312, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA9242BCA0>)
2024-04-14 11:58:23,426:INFO:Checking exceptions
2024-04-14 11:58:23,426:INFO:Preloading libraries
2024-04-14 11:58:23,431:INFO:Set up data.
2024-04-14 11:58:23,438:INFO:Set up index.
2024-04-14 11:59:42,187:INFO:PyCaret ClassificationExperiment
2024-04-14 11:59:42,187:INFO:Logging name: clf-default-name
2024-04-14 11:59:42,188:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 11:59:42,189:INFO:version 3.3.0
2024-04-14 11:59:42,191:INFO:Initializing setup()
2024-04-14 11:59:42,191:INFO:self.USI: a3d9
2024-04-14 11:59:42,191:INFO:self._variable_keys: {'seed', 'gpu_param', 'X_test', 'fold_shuffle_param', '_ml_usecase', 'memory', 'fold_groups_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'data', '_available_plots', 'fix_imbalance', 'idx', 'y_test', 'pipeline', 'exp_name_log', 'y', 'log_plots_param', 'target_param', 'fold_generator', 'logging_param', 'X_train', 'html_param', 'y_train', 'X', 'exp_id', 'is_multiclass'}
2024-04-14 11:59:42,192:INFO:Checking environment
2024-04-14 11:59:42,192:INFO:python_version: 3.9.5
2024-04-14 11:59:42,194:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 11:59:42,195:INFO:machine: AMD64
2024-04-14 11:59:42,196:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 11:59:42,206:INFO:Memory: svmem(total=6312697856, available=189489152, percent=97.0, used=6123208704, free=189489152)
2024-04-14 11:59:42,206:INFO:Physical Core: 4
2024-04-14 11:59:42,208:INFO:Logical Core: 8
2024-04-14 11:59:42,209:INFO:Checking libraries
2024-04-14 11:59:42,209:INFO:System:
2024-04-14 11:59:42,210:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 11:59:42,211:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 11:59:42,211:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 11:59:42,212:INFO:PyCaret required dependencies:
2024-04-14 11:59:42,213:INFO:                 pip: 24.0
2024-04-14 11:59:42,213:INFO:          setuptools: 56.0.0
2024-04-14 11:59:42,214:INFO:             pycaret: 3.3.0
2024-04-14 11:59:42,214:INFO:             IPython: 8.6.0
2024-04-14 11:59:42,215:INFO:          ipywidgets: 8.1.2
2024-04-14 11:59:42,215:INFO:                tqdm: 4.66.2
2024-04-14 11:59:42,216:INFO:               numpy: 1.24.4
2024-04-14 11:59:42,216:INFO:              pandas: 2.1.4
2024-04-14 11:59:42,216:INFO:              jinja2: 3.1.2
2024-04-14 11:59:42,217:INFO:               scipy: 1.9.0
2024-04-14 11:59:42,218:INFO:              joblib: 1.3.2
2024-04-14 11:59:42,218:INFO:             sklearn: 1.4.1.post1
2024-04-14 11:59:42,219:INFO:                pyod: 1.1.3
2024-04-14 11:59:42,220:INFO:            imblearn: 0.12.2
2024-04-14 11:59:42,220:INFO:   category_encoders: 2.6.3
2024-04-14 11:59:42,221:INFO:            lightgbm: 4.3.0
2024-04-14 11:59:42,222:INFO:               numba: 0.59.1
2024-04-14 11:59:42,223:INFO:            requests: 2.31.0
2024-04-14 11:59:42,224:INFO:          matplotlib: 3.5.3
2024-04-14 11:59:42,225:INFO:          scikitplot: 0.3.7
2024-04-14 11:59:42,226:INFO:         yellowbrick: 1.5
2024-04-14 11:59:42,226:INFO:              plotly: 5.15.0
2024-04-14 11:59:42,226:INFO:    plotly-resampler: Not installed
2024-04-14 11:59:42,226:INFO:             kaleido: 0.2.1
2024-04-14 11:59:42,226:INFO:           schemdraw: 0.15
2024-04-14 11:59:42,226:INFO:         statsmodels: 0.14.1
2024-04-14 11:59:42,226:INFO:              sktime: 0.28.0
2024-04-14 11:59:42,226:INFO:               tbats: 1.1.3
2024-04-14 11:59:42,226:INFO:            pmdarima: 2.0.4
2024-04-14 11:59:42,226:INFO:              psutil: 5.9.4
2024-04-14 11:59:42,226:INFO:          markupsafe: 2.1.1
2024-04-14 11:59:42,228:INFO:             pickle5: Not installed
2024-04-14 11:59:42,228:INFO:         cloudpickle: 3.0.0
2024-04-14 11:59:42,228:INFO:         deprecation: 2.1.0
2024-04-14 11:59:42,228:INFO:              xxhash: 3.4.1
2024-04-14 11:59:42,228:INFO:           wurlitzer: Not installed
2024-04-14 11:59:42,228:INFO:PyCaret optional dependencies:
2024-04-14 11:59:42,228:INFO:                shap: 0.45.0
2024-04-14 11:59:42,228:INFO:           interpret: 0.6.0
2024-04-14 11:59:42,229:INFO:                umap: 0.5.6
2024-04-14 11:59:42,229:INFO:     ydata_profiling: 4.7.0
2024-04-14 11:59:42,229:INFO:  explainerdashboard: 0.4.7
2024-04-14 11:59:42,229:INFO:             autoviz: Not installed
2024-04-14 11:59:42,229:INFO:           fairlearn: 0.7.0
2024-04-14 11:59:42,229:INFO:          deepchecks: Not installed
2024-04-14 11:59:42,229:INFO:             xgboost: Not installed
2024-04-14 11:59:42,229:INFO:            catboost: Not installed
2024-04-14 11:59:42,229:INFO:              kmodes: Not installed
2024-04-14 11:59:42,229:INFO:             mlxtend: Not installed
2024-04-14 11:59:42,229:INFO:       statsforecast: Not installed
2024-04-14 11:59:42,230:INFO:        tune_sklearn: Not installed
2024-04-14 11:59:42,230:INFO:                 ray: Not installed
2024-04-14 11:59:42,230:INFO:            hyperopt: Not installed
2024-04-14 11:59:42,230:INFO:              optuna: Not installed
2024-04-14 11:59:42,230:INFO:               skopt: Not installed
2024-04-14 11:59:42,230:INFO:              mlflow: 2.11.3
2024-04-14 11:59:42,230:INFO:              gradio: Not installed
2024-04-14 11:59:42,230:INFO:             fastapi: Not installed
2024-04-14 11:59:42,230:INFO:             uvicorn: Not installed
2024-04-14 11:59:42,231:INFO:              m2cgen: Not installed
2024-04-14 11:59:42,231:INFO:           evidently: Not installed
2024-04-14 11:59:42,231:INFO:               fugue: Not installed
2024-04-14 11:59:42,231:INFO:           streamlit: 1.23.1
2024-04-14 11:59:42,231:INFO:             prophet: Not installed
2024-04-14 11:59:42,231:INFO:None
2024-04-14 11:59:42,231:INFO:Set up data.
2024-04-14 11:59:42,249:INFO:Set up folding strategy.
2024-04-14 11:59:42,249:INFO:Set up train/test split.
2024-04-14 11:59:42,249:INFO:Set up data.
2024-04-14 11:59:42,260:INFO:Set up index.
2024-04-14 11:59:42,261:INFO:Assigning column types.
2024-04-14 11:59:42,273:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 11:59:42,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:59:42,358:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:59:42,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 11:59:42,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:59:42,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,599:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 11:59:42,683:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:59:42,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,830:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 11:59:42,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:42,891:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 11:59:43,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:43,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:43,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:43,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:43,366:INFO:Preparing preprocessing pipeline...
2024-04-14 11:59:43,369:INFO:Set up simple imputation.
2024-04-14 11:59:43,369:INFO:Set up feature normalization.
2024-04-14 11:59:43,438:INFO:Finished creating preprocessing pipeline.
2024-04-14 11:59:43,448:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 11:59:43,449:INFO:Creating final display dataframe.
2024-04-14 11:59:43,679:INFO:Setup _display_container:                     Description             Value
0                    Session id              7045
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a3d9
2024-04-14 11:59:43,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:43,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:44,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:44,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 11:59:44,033:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 11:59:44,035:INFO:setup() successfully completed in 1.86s...............
2024-04-14 11:59:44,040:INFO:Initializing create_model()
2024-04-14 11:59:44,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92C4A5E0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:59:44,040:INFO:Checking exceptions
2024-04-14 11:59:44,111:INFO:Importing libraries
2024-04-14 11:59:44,111:INFO:Copying training dataset
2024-04-14 11:59:44,159:INFO:Defining folds
2024-04-14 11:59:44,159:INFO:Declaring metric variables
2024-04-14 11:59:44,166:INFO:Importing untrained model
2024-04-14 11:59:44,176:INFO:Logistic Regression Imported successfully
2024-04-14 11:59:44,195:INFO:Starting cross validation
2024-04-14 11:59:44,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:59:44,794:INFO:Calculating mean and std
2024-04-14 11:59:44,796:INFO:Creating metrics dataframe
2024-04-14 11:59:44,834:INFO:Finalizing model
2024-04-14 11:59:44,931:INFO:Uploading results into container
2024-04-14 11:59:44,934:INFO:Uploading model into container now
2024-04-14 11:59:44,993:INFO:_master_model_container: 1
2024-04-14 11:59:44,993:INFO:_display_container: 2
2024-04-14 11:59:44,994:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7045, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 11:59:44,995:INFO:create_model() successfully completed......................................
2024-04-14 11:59:45,395:INFO:Initializing create_model()
2024-04-14 11:59:45,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92C4A5E0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 11:59:45,395:INFO:Checking exceptions
2024-04-14 11:59:45,474:INFO:Importing libraries
2024-04-14 11:59:45,475:INFO:Copying training dataset
2024-04-14 11:59:45,502:INFO:Defining folds
2024-04-14 11:59:45,502:INFO:Declaring metric variables
2024-04-14 11:59:45,514:INFO:Importing untrained model
2024-04-14 11:59:45,522:INFO:Decision Tree Classifier Imported successfully
2024-04-14 11:59:45,542:INFO:Starting cross validation
2024-04-14 11:59:45,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 11:59:45,945:INFO:Calculating mean and std
2024-04-14 11:59:45,946:INFO:Creating metrics dataframe
2024-04-14 11:59:45,956:INFO:Finalizing model
2024-04-14 11:59:46,070:INFO:Uploading results into container
2024-04-14 11:59:46,073:INFO:Uploading model into container now
2024-04-14 11:59:46,092:INFO:_master_model_container: 2
2024-04-14 11:59:46,093:INFO:_display_container: 3
2024-04-14 11:59:46,093:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7045, splitter='best')
2024-04-14 11:59:46,094:INFO:create_model() successfully completed......................................
2024-04-14 11:59:46,284:INFO:Initializing predict_model()
2024-04-14 11:59:46,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92C4A5E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7045, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA92D88C10>)
2024-04-14 11:59:46,284:INFO:Checking exceptions
2024-04-14 11:59:46,284:INFO:Preloading libraries
2024-04-14 11:59:46,288:INFO:Set up data.
2024-04-14 11:59:46,296:INFO:Set up index.
2024-04-14 11:59:46,596:INFO:Initializing predict_model()
2024-04-14 11:59:46,596:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92C4A5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7045, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA9117E790>)
2024-04-14 11:59:46,596:INFO:Checking exceptions
2024-04-14 11:59:46,596:INFO:Preloading libraries
2024-04-14 11:59:46,602:INFO:Set up data.
2024-04-14 11:59:46,608:INFO:Set up index.
2024-04-14 12:01:10,969:INFO:PyCaret ClassificationExperiment
2024-04-14 12:01:10,969:INFO:Logging name: clf-default-name
2024-04-14 12:01:10,970:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 12:01:10,970:INFO:version 3.3.0
2024-04-14 12:01:10,972:INFO:Initializing setup()
2024-04-14 12:01:10,972:INFO:self.USI: e939
2024-04-14 12:01:10,972:INFO:self._variable_keys: {'seed', 'gpu_param', 'X_test', 'fold_shuffle_param', '_ml_usecase', 'memory', 'fold_groups_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'data', '_available_plots', 'fix_imbalance', 'idx', 'y_test', 'pipeline', 'exp_name_log', 'y', 'log_plots_param', 'target_param', 'fold_generator', 'logging_param', 'X_train', 'html_param', 'y_train', 'X', 'exp_id', 'is_multiclass'}
2024-04-14 12:01:10,972:INFO:Checking environment
2024-04-14 12:01:10,973:INFO:python_version: 3.9.5
2024-04-14 12:01:10,973:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 12:01:10,973:INFO:machine: AMD64
2024-04-14 12:01:10,974:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 12:01:10,982:INFO:Memory: svmem(total=6312697856, available=541564928, percent=91.4, used=5771132928, free=541564928)
2024-04-14 12:01:10,983:INFO:Physical Core: 4
2024-04-14 12:01:10,984:INFO:Logical Core: 8
2024-04-14 12:01:10,984:INFO:Checking libraries
2024-04-14 12:01:10,984:INFO:System:
2024-04-14 12:01:10,985:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 12:01:10,985:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 12:01:10,986:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 12:01:10,986:INFO:PyCaret required dependencies:
2024-04-14 12:01:10,986:INFO:                 pip: 24.0
2024-04-14 12:01:10,987:INFO:          setuptools: 56.0.0
2024-04-14 12:01:10,987:INFO:             pycaret: 3.3.0
2024-04-14 12:01:10,987:INFO:             IPython: 8.6.0
2024-04-14 12:01:10,988:INFO:          ipywidgets: 8.1.2
2024-04-14 12:01:10,988:INFO:                tqdm: 4.66.2
2024-04-14 12:01:10,988:INFO:               numpy: 1.24.4
2024-04-14 12:01:10,988:INFO:              pandas: 2.1.4
2024-04-14 12:01:10,989:INFO:              jinja2: 3.1.2
2024-04-14 12:01:10,989:INFO:               scipy: 1.9.0
2024-04-14 12:01:10,989:INFO:              joblib: 1.3.2
2024-04-14 12:01:10,989:INFO:             sklearn: 1.4.1.post1
2024-04-14 12:01:10,990:INFO:                pyod: 1.1.3
2024-04-14 12:01:10,990:INFO:            imblearn: 0.12.2
2024-04-14 12:01:10,990:INFO:   category_encoders: 2.6.3
2024-04-14 12:01:10,990:INFO:            lightgbm: 4.3.0
2024-04-14 12:01:10,990:INFO:               numba: 0.59.1
2024-04-14 12:01:10,992:INFO:            requests: 2.31.0
2024-04-14 12:01:10,992:INFO:          matplotlib: 3.5.3
2024-04-14 12:01:10,993:INFO:          scikitplot: 0.3.7
2024-04-14 12:01:10,994:INFO:         yellowbrick: 1.5
2024-04-14 12:01:10,994:INFO:              plotly: 5.15.0
2024-04-14 12:01:10,995:INFO:    plotly-resampler: Not installed
2024-04-14 12:01:10,995:INFO:             kaleido: 0.2.1
2024-04-14 12:01:10,995:INFO:           schemdraw: 0.15
2024-04-14 12:01:10,995:INFO:         statsmodels: 0.14.1
2024-04-14 12:01:10,995:INFO:              sktime: 0.28.0
2024-04-14 12:01:10,995:INFO:               tbats: 1.1.3
2024-04-14 12:01:10,995:INFO:            pmdarima: 2.0.4
2024-04-14 12:01:10,995:INFO:              psutil: 5.9.4
2024-04-14 12:01:10,995:INFO:          markupsafe: 2.1.1
2024-04-14 12:01:10,996:INFO:             pickle5: Not installed
2024-04-14 12:01:10,996:INFO:         cloudpickle: 3.0.0
2024-04-14 12:01:10,996:INFO:         deprecation: 2.1.0
2024-04-14 12:01:10,996:INFO:              xxhash: 3.4.1
2024-04-14 12:01:10,996:INFO:           wurlitzer: Not installed
2024-04-14 12:01:10,996:INFO:PyCaret optional dependencies:
2024-04-14 12:01:10,996:INFO:                shap: 0.45.0
2024-04-14 12:01:10,996:INFO:           interpret: 0.6.0
2024-04-14 12:01:10,996:INFO:                umap: 0.5.6
2024-04-14 12:01:10,996:INFO:     ydata_profiling: 4.7.0
2024-04-14 12:01:10,996:INFO:  explainerdashboard: 0.4.7
2024-04-14 12:01:10,996:INFO:             autoviz: Not installed
2024-04-14 12:01:10,996:INFO:           fairlearn: 0.7.0
2024-04-14 12:01:10,996:INFO:          deepchecks: Not installed
2024-04-14 12:01:10,997:INFO:             xgboost: Not installed
2024-04-14 12:01:10,997:INFO:            catboost: Not installed
2024-04-14 12:01:10,997:INFO:              kmodes: Not installed
2024-04-14 12:01:10,997:INFO:             mlxtend: Not installed
2024-04-14 12:01:10,997:INFO:       statsforecast: Not installed
2024-04-14 12:01:10,997:INFO:        tune_sklearn: Not installed
2024-04-14 12:01:10,997:INFO:                 ray: Not installed
2024-04-14 12:01:10,997:INFO:            hyperopt: Not installed
2024-04-14 12:01:10,997:INFO:              optuna: Not installed
2024-04-14 12:01:10,997:INFO:               skopt: Not installed
2024-04-14 12:01:10,997:INFO:              mlflow: 2.11.3
2024-04-14 12:01:10,997:INFO:              gradio: Not installed
2024-04-14 12:01:10,997:INFO:             fastapi: Not installed
2024-04-14 12:01:10,997:INFO:             uvicorn: Not installed
2024-04-14 12:01:10,997:INFO:              m2cgen: Not installed
2024-04-14 12:01:10,997:INFO:           evidently: Not installed
2024-04-14 12:01:10,998:INFO:               fugue: Not installed
2024-04-14 12:01:10,998:INFO:           streamlit: 1.23.1
2024-04-14 12:01:10,998:INFO:             prophet: Not installed
2024-04-14 12:01:10,998:INFO:None
2024-04-14 12:01:10,998:INFO:Set up data.
2024-04-14 12:01:11,007:INFO:Set up folding strategy.
2024-04-14 12:01:11,007:INFO:Set up train/test split.
2024-04-14 12:01:11,007:INFO:Set up data.
2024-04-14 12:01:11,015:INFO:Set up index.
2024-04-14 12:01:11,015:INFO:Assigning column types.
2024-04-14 12:01:11,022:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 12:01:11,107:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:01:11,109:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:01:11,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:01:11,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:01:11,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,345:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 12:01:11,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:01:11,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:01:11,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,627:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 12:01:11,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:11,980:INFO:Preparing preprocessing pipeline...
2024-04-14 12:01:11,982:INFO:Set up simple imputation.
2024-04-14 12:01:11,982:INFO:Set up feature normalization.
2024-04-14 12:01:12,035:INFO:Finished creating preprocessing pipeline.
2024-04-14 12:01:12,044:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 12:01:12,045:INFO:Creating final display dataframe.
2024-04-14 12:01:12,240:INFO:Setup _display_container:                     Description             Value
0                    Session id              8926
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e939
2024-04-14 12:01:12,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:12,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:12,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:12,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:01:12,616:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 12:01:12,617:INFO:setup() successfully completed in 1.65s...............
2024-04-14 12:01:12,622:INFO:Initializing create_model()
2024-04-14 12:01:12,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:01:12,622:INFO:Checking exceptions
2024-04-14 12:01:12,678:INFO:Importing libraries
2024-04-14 12:01:12,678:INFO:Copying training dataset
2024-04-14 12:01:12,696:INFO:Defining folds
2024-04-14 12:01:12,696:INFO:Declaring metric variables
2024-04-14 12:01:12,702:INFO:Importing untrained model
2024-04-14 12:01:12,709:INFO:Logistic Regression Imported successfully
2024-04-14 12:01:12,726:INFO:Starting cross validation
2024-04-14 12:01:12,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:01:13,120:INFO:Calculating mean and std
2024-04-14 12:01:13,122:INFO:Creating metrics dataframe
2024-04-14 12:01:13,134:INFO:Finalizing model
2024-04-14 12:01:13,202:INFO:Uploading results into container
2024-04-14 12:01:13,204:INFO:Uploading model into container now
2024-04-14 12:01:13,231:INFO:_master_model_container: 1
2024-04-14 12:01:13,231:INFO:_display_container: 2
2024-04-14 12:01:13,233:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:01:13,234:INFO:create_model() successfully completed......................................
2024-04-14 12:01:13,443:INFO:Initializing create_model()
2024-04-14 12:01:13,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:01:13,443:INFO:Checking exceptions
2024-04-14 12:01:13,495:INFO:Importing libraries
2024-04-14 12:01:13,496:INFO:Copying training dataset
2024-04-14 12:01:13,530:INFO:Defining folds
2024-04-14 12:01:13,531:INFO:Declaring metric variables
2024-04-14 12:01:13,538:INFO:Importing untrained model
2024-04-14 12:01:13,547:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:01:13,562:INFO:Starting cross validation
2024-04-14 12:01:13,565:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:01:14,048:INFO:Calculating mean and std
2024-04-14 12:01:14,051:INFO:Creating metrics dataframe
2024-04-14 12:01:14,063:INFO:Finalizing model
2024-04-14 12:01:14,182:INFO:Uploading results into container
2024-04-14 12:01:14,183:INFO:Uploading model into container now
2024-04-14 12:01:14,204:INFO:_master_model_container: 2
2024-04-14 12:01:14,204:INFO:_display_container: 3
2024-04-14 12:01:14,205:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8926, splitter='best')
2024-04-14 12:01:14,205:INFO:create_model() successfully completed......................................
2024-04-14 12:01:14,414:INFO:Initializing predict_model()
2024-04-14 12:01:14,415:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA92A0DA60>)
2024-04-14 12:01:14,415:INFO:Checking exceptions
2024-04-14 12:01:14,415:INFO:Preloading libraries
2024-04-14 12:01:14,417:INFO:Set up data.
2024-04-14 12:01:14,422:INFO:Set up index.
2024-04-14 12:01:14,648:INFO:Initializing predict_model()
2024-04-14 12:01:14,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8926, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA92A0DA60>)
2024-04-14 12:01:14,648:INFO:Checking exceptions
2024-04-14 12:01:14,648:INFO:Preloading libraries
2024-04-14 12:01:14,651:INFO:Set up data.
2024-04-14 12:01:14,657:INFO:Set up index.
2024-04-14 12:01:28,315:INFO:Initializing predict_model()
2024-04-14 12:01:28,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8926, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA92936DC0>)
2024-04-14 12:01:28,316:INFO:Checking exceptions
2024-04-14 12:01:28,316:INFO:Preloading libraries
2024-04-14 12:01:28,324:INFO:Set up data.
2024-04-14 12:01:28,332:INFO:Set up index.
2024-04-14 12:01:28,687:INFO:Initializing predict_model()
2024-04-14 12:01:28,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA92A72040>)
2024-04-14 12:01:28,687:INFO:Checking exceptions
2024-04-14 12:01:28,687:INFO:Preloading libraries
2024-04-14 12:01:28,691:INFO:Set up data.
2024-04-14 12:01:28,699:INFO:Set up index.
2024-04-14 12:01:29,200:INFO:Initializing plot_model()
2024-04-14 12:01:29,200:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, system=True)
2024-04-14 12:01:29,200:INFO:Checking exceptions
2024-04-14 12:01:29,224:INFO:Preloading libraries
2024-04-14 12:01:29,225:INFO:Copying training dataset
2024-04-14 12:01:29,225:INFO:Plot type: auc
2024-04-14 12:01:29,521:INFO:Fitting Model
2024-04-14 12:01:29,563:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-14 12:01:29,563:INFO:Scoring test/hold-out set
2024-04-14 12:01:29,609:INFO:Saving 'AUC.png'
2024-04-14 12:01:29,989:INFO:Visual Rendered Successfully
2024-04-14 12:01:30,154:INFO:plot_model() successfully completed......................................
2024-04-14 12:01:30,156:INFO:Initializing plot_model()
2024-04-14 12:01:30,156:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8926, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, system=True)
2024-04-14 12:01:30,156:INFO:Checking exceptions
2024-04-14 12:01:30,168:INFO:Preloading libraries
2024-04-14 12:01:30,171:INFO:Copying training dataset
2024-04-14 12:01:30,171:INFO:Plot type: auc
2024-04-14 12:01:30,382:INFO:Fitting Model
2024-04-14 12:01:30,384:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 12:01:30,386:INFO:Scoring test/hold-out set
2024-04-14 12:01:30,447:INFO:Saving 'AUC.png'
2024-04-14 12:01:30,841:INFO:Visual Rendered Successfully
2024-04-14 12:01:30,993:INFO:plot_model() successfully completed......................................
2024-04-14 12:01:30,995:INFO:Initializing compare_models()
2024-04-14 12:01:30,996:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 12:01:30,996:INFO:Checking exceptions
2024-04-14 12:01:31,003:INFO:Preparing display monitor
2024-04-14 12:01:31,075:INFO:Initializing Logistic Regression
2024-04-14 12:01:31,075:INFO:Total runtime is 0.0 minutes
2024-04-14 12:01:31,081:INFO:SubProcess create_model() called ==================================
2024-04-14 12:01:31,082:INFO:Initializing create_model()
2024-04-14 12:01:31,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BAE5916280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:01:31,083:INFO:Checking exceptions
2024-04-14 12:01:31,083:INFO:Importing libraries
2024-04-14 12:01:31,083:INFO:Copying training dataset
2024-04-14 12:01:31,098:INFO:Defining folds
2024-04-14 12:01:31,099:INFO:Declaring metric variables
2024-04-14 12:01:31,106:INFO:Importing untrained model
2024-04-14 12:01:31,117:INFO:Logistic Regression Imported successfully
2024-04-14 12:01:31,138:INFO:Starting cross validation
2024-04-14 12:01:31,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:01:31,477:INFO:Calculating mean and std
2024-04-14 12:01:31,478:INFO:Creating metrics dataframe
2024-04-14 12:01:31,481:INFO:Uploading results into container
2024-04-14 12:01:31,481:INFO:Uploading model into container now
2024-04-14 12:01:31,483:INFO:_master_model_container: 3
2024-04-14 12:01:31,483:INFO:_display_container: 4
2024-04-14 12:01:31,484:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:01:31,484:INFO:create_model() successfully completed......................................
2024-04-14 12:01:31,637:INFO:SubProcess create_model() end ==================================
2024-04-14 12:01:31,637:INFO:Creating metrics dataframe
2024-04-14 12:01:31,650:INFO:Initializing Decision Tree Classifier
2024-04-14 12:01:31,651:INFO:Total runtime is 0.009598751862843832 minutes
2024-04-14 12:01:31,656:INFO:SubProcess create_model() called ==================================
2024-04-14 12:01:31,657:INFO:Initializing create_model()
2024-04-14 12:01:31,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BAE5916280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:01:31,658:INFO:Checking exceptions
2024-04-14 12:01:31,658:INFO:Importing libraries
2024-04-14 12:01:31,658:INFO:Copying training dataset
2024-04-14 12:01:31,670:INFO:Defining folds
2024-04-14 12:01:31,670:INFO:Declaring metric variables
2024-04-14 12:01:31,674:INFO:Importing untrained model
2024-04-14 12:01:31,680:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:01:31,693:INFO:Starting cross validation
2024-04-14 12:01:31,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:01:32,109:INFO:Calculating mean and std
2024-04-14 12:01:32,114:INFO:Creating metrics dataframe
2024-04-14 12:01:32,118:INFO:Uploading results into container
2024-04-14 12:01:32,119:INFO:Uploading model into container now
2024-04-14 12:01:32,120:INFO:_master_model_container: 4
2024-04-14 12:01:32,120:INFO:_display_container: 4
2024-04-14 12:01:32,121:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8926, splitter='best')
2024-04-14 12:01:32,122:INFO:create_model() successfully completed......................................
2024-04-14 12:01:32,336:INFO:SubProcess create_model() end ==================================
2024-04-14 12:01:32,336:INFO:Creating metrics dataframe
2024-04-14 12:01:32,363:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-14 12:01:32,388:INFO:Initializing create_model()
2024-04-14 12:01:32,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:01:32,388:INFO:Checking exceptions
2024-04-14 12:01:32,394:INFO:Importing libraries
2024-04-14 12:01:32,394:INFO:Copying training dataset
2024-04-14 12:01:32,411:INFO:Defining folds
2024-04-14 12:01:32,411:INFO:Declaring metric variables
2024-04-14 12:01:32,413:INFO:Importing untrained model
2024-04-14 12:01:32,413:INFO:Declaring custom model
2024-04-14 12:01:32,414:INFO:Logistic Regression Imported successfully
2024-04-14 12:01:32,415:INFO:Cross validation set to False
2024-04-14 12:01:32,416:INFO:Fitting Model
2024-04-14 12:01:32,457:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:01:32,457:INFO:create_model() successfully completed......................................
2024-04-14 12:01:32,726:INFO:_master_model_container: 4
2024-04-14 12:01:32,727:INFO:_display_container: 4
2024-04-14 12:01:32,728:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:01:32,729:INFO:compare_models() successfully completed......................................
2024-04-14 12:01:45,578:INFO:Initializing tune_model()
2024-04-14 12:01:45,578:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>)
2024-04-14 12:01:45,578:INFO:Checking exceptions
2024-04-14 12:01:45,645:INFO:Copying training dataset
2024-04-14 12:01:45,659:INFO:Checking base model
2024-04-14 12:01:45,659:INFO:Base model : Logistic Regression
2024-04-14 12:01:45,670:INFO:Declaring metric variables
2024-04-14 12:01:45,681:INFO:Defining Hyperparameters
2024-04-14 12:01:45,983:INFO:Tuning with n_jobs=-1
2024-04-14 12:01:45,983:INFO:Initializing RandomizedSearchCV
2024-04-14 12:01:47,936:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 2.246}
2024-04-14 12:01:47,939:INFO:Hyperparameter search completed
2024-04-14 12:01:47,939:INFO:SubProcess create_model() called ==================================
2024-04-14 12:01:47,941:INFO:Initializing create_model()
2024-04-14 12:01:47,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BA96803880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 2.246})
2024-04-14 12:01:47,941:INFO:Checking exceptions
2024-04-14 12:01:47,942:INFO:Importing libraries
2024-04-14 12:01:47,942:INFO:Copying training dataset
2024-04-14 12:01:47,960:INFO:Defining folds
2024-04-14 12:01:47,960:INFO:Declaring metric variables
2024-04-14 12:01:47,967:INFO:Importing untrained model
2024-04-14 12:01:47,967:INFO:Declaring custom model
2024-04-14 12:01:47,978:INFO:Logistic Regression Imported successfully
2024-04-14 12:01:48,000:INFO:Starting cross validation
2024-04-14 12:01:48,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:01:48,346:INFO:Calculating mean and std
2024-04-14 12:01:48,355:INFO:Creating metrics dataframe
2024-04-14 12:01:48,374:INFO:Finalizing model
2024-04-14 12:01:48,464:INFO:Uploading results into container
2024-04-14 12:01:48,465:INFO:Uploading model into container now
2024-04-14 12:01:48,466:INFO:_master_model_container: 5
2024-04-14 12:01:48,467:INFO:_display_container: 5
2024-04-14 12:01:48,468:INFO:LogisticRegression(C=2.246, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:01:48,468:INFO:create_model() successfully completed......................................
2024-04-14 12:01:48,766:INFO:SubProcess create_model() end ==================================
2024-04-14 12:01:48,767:INFO:choose_better activated
2024-04-14 12:01:48,775:INFO:SubProcess create_model() called ==================================
2024-04-14 12:01:48,777:INFO:Initializing create_model()
2024-04-14 12:01:48,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA8D97EEE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:01:48,777:INFO:Checking exceptions
2024-04-14 12:01:48,782:INFO:Importing libraries
2024-04-14 12:01:48,783:INFO:Copying training dataset
2024-04-14 12:01:48,797:INFO:Defining folds
2024-04-14 12:01:48,798:INFO:Declaring metric variables
2024-04-14 12:01:48,798:INFO:Importing untrained model
2024-04-14 12:01:48,798:INFO:Declaring custom model
2024-04-14 12:01:48,799:INFO:Logistic Regression Imported successfully
2024-04-14 12:01:48,800:INFO:Starting cross validation
2024-04-14 12:01:48,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:01:49,109:INFO:Calculating mean and std
2024-04-14 12:01:49,110:INFO:Creating metrics dataframe
2024-04-14 12:01:49,112:INFO:Finalizing model
2024-04-14 12:01:49,148:INFO:Uploading results into container
2024-04-14 12:01:49,149:INFO:Uploading model into container now
2024-04-14 12:01:49,150:INFO:_master_model_container: 6
2024-04-14 12:01:49,150:INFO:_display_container: 6
2024-04-14 12:01:49,151:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:01:49,151:INFO:create_model() successfully completed......................................
2024-04-14 12:01:49,374:INFO:SubProcess create_model() end ==================================
2024-04-14 12:01:49,376:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5206
2024-04-14 12:01:49,378:INFO:LogisticRegression(C=2.246, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.545
2024-04-14 12:01:49,378:INFO:LogisticRegression(C=2.246, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-14 12:01:49,378:INFO:choose_better completed
2024-04-14 12:01:49,397:INFO:_master_model_container: 6
2024-04-14 12:01:49,397:INFO:_display_container: 5
2024-04-14 12:01:49,398:INFO:LogisticRegression(C=2.246, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:01:49,398:INFO:tune_model() successfully completed......................................
2024-04-14 12:01:49,696:INFO:Initializing load_model()
2024-04-14 12:01:49,696:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-14 12:05:51,687:INFO:PyCaret ClassificationExperiment
2024-04-14 12:05:51,691:INFO:Logging name: clf-default-name
2024-04-14 12:05:51,693:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 12:05:51,693:INFO:version 3.3.0
2024-04-14 12:05:51,693:INFO:Initializing setup()
2024-04-14 12:05:51,693:INFO:self.USI: 6df4
2024-04-14 12:05:51,694:INFO:self._variable_keys: {'seed', 'gpu_param', 'X_test', 'fold_shuffle_param', '_ml_usecase', 'memory', 'fold_groups_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'data', '_available_plots', 'fix_imbalance', 'idx', 'y_test', 'pipeline', 'exp_name_log', 'y', 'log_plots_param', 'target_param', 'fold_generator', 'logging_param', 'X_train', 'html_param', 'y_train', 'X', 'exp_id', 'is_multiclass'}
2024-04-14 12:05:51,694:INFO:Checking environment
2024-04-14 12:05:51,696:INFO:python_version: 3.9.5
2024-04-14 12:05:51,696:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 12:05:51,698:INFO:machine: AMD64
2024-04-14 12:05:51,699:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 12:05:51,716:INFO:Memory: svmem(total=6312697856, available=478068736, percent=92.4, used=5834629120, free=478068736)
2024-04-14 12:05:51,719:INFO:Physical Core: 4
2024-04-14 12:05:51,719:INFO:Logical Core: 8
2024-04-14 12:05:51,719:INFO:Checking libraries
2024-04-14 12:05:51,720:INFO:System:
2024-04-14 12:05:51,720:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 12:05:51,720:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 12:05:51,720:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 12:05:51,720:INFO:PyCaret required dependencies:
2024-04-14 12:05:51,726:INFO:                 pip: 24.0
2024-04-14 12:05:51,726:INFO:          setuptools: 56.0.0
2024-04-14 12:05:51,727:INFO:             pycaret: 3.3.0
2024-04-14 12:05:51,727:INFO:             IPython: 8.6.0
2024-04-14 12:05:51,727:INFO:          ipywidgets: 8.1.2
2024-04-14 12:05:51,727:INFO:                tqdm: 4.66.2
2024-04-14 12:05:51,727:INFO:               numpy: 1.24.4
2024-04-14 12:05:51,727:INFO:              pandas: 2.1.4
2024-04-14 12:05:51,727:INFO:              jinja2: 3.1.2
2024-04-14 12:05:51,727:INFO:               scipy: 1.9.0
2024-04-14 12:05:51,727:INFO:              joblib: 1.3.2
2024-04-14 12:05:51,727:INFO:             sklearn: 1.4.1.post1
2024-04-14 12:05:51,727:INFO:                pyod: 1.1.3
2024-04-14 12:05:51,727:INFO:            imblearn: 0.12.2
2024-04-14 12:05:51,727:INFO:   category_encoders: 2.6.3
2024-04-14 12:05:51,728:INFO:            lightgbm: 4.3.0
2024-04-14 12:05:51,728:INFO:               numba: 0.59.1
2024-04-14 12:05:51,728:INFO:            requests: 2.31.0
2024-04-14 12:05:51,728:INFO:          matplotlib: 3.5.3
2024-04-14 12:05:51,728:INFO:          scikitplot: 0.3.7
2024-04-14 12:05:51,728:INFO:         yellowbrick: 1.5
2024-04-14 12:05:51,728:INFO:              plotly: 5.15.0
2024-04-14 12:05:51,728:INFO:    plotly-resampler: Not installed
2024-04-14 12:05:51,728:INFO:             kaleido: 0.2.1
2024-04-14 12:05:51,728:INFO:           schemdraw: 0.15
2024-04-14 12:05:51,728:INFO:         statsmodels: 0.14.1
2024-04-14 12:05:51,728:INFO:              sktime: 0.28.0
2024-04-14 12:05:51,728:INFO:               tbats: 1.1.3
2024-04-14 12:05:51,728:INFO:            pmdarima: 2.0.4
2024-04-14 12:05:51,729:INFO:              psutil: 5.9.4
2024-04-14 12:05:51,729:INFO:          markupsafe: 2.1.1
2024-04-14 12:05:51,729:INFO:             pickle5: Not installed
2024-04-14 12:05:51,729:INFO:         cloudpickle: 3.0.0
2024-04-14 12:05:51,729:INFO:         deprecation: 2.1.0
2024-04-14 12:05:51,729:INFO:              xxhash: 3.4.1
2024-04-14 12:05:51,729:INFO:           wurlitzer: Not installed
2024-04-14 12:05:51,729:INFO:PyCaret optional dependencies:
2024-04-14 12:05:51,729:INFO:                shap: 0.45.0
2024-04-14 12:05:51,729:INFO:           interpret: 0.6.0
2024-04-14 12:05:51,729:INFO:                umap: 0.5.6
2024-04-14 12:05:51,730:INFO:     ydata_profiling: 4.7.0
2024-04-14 12:05:51,730:INFO:  explainerdashboard: 0.4.7
2024-04-14 12:05:51,730:INFO:             autoviz: Not installed
2024-04-14 12:05:51,730:INFO:           fairlearn: 0.7.0
2024-04-14 12:05:51,730:INFO:          deepchecks: Not installed
2024-04-14 12:05:51,730:INFO:             xgboost: Not installed
2024-04-14 12:05:51,730:INFO:            catboost: Not installed
2024-04-14 12:05:51,730:INFO:              kmodes: Not installed
2024-04-14 12:05:51,730:INFO:             mlxtend: Not installed
2024-04-14 12:05:51,730:INFO:       statsforecast: Not installed
2024-04-14 12:05:51,730:INFO:        tune_sklearn: Not installed
2024-04-14 12:05:51,730:INFO:                 ray: Not installed
2024-04-14 12:05:51,730:INFO:            hyperopt: Not installed
2024-04-14 12:05:51,730:INFO:              optuna: Not installed
2024-04-14 12:05:51,730:INFO:               skopt: Not installed
2024-04-14 12:05:51,730:INFO:              mlflow: 2.11.3
2024-04-14 12:05:51,730:INFO:              gradio: Not installed
2024-04-14 12:05:51,731:INFO:             fastapi: Not installed
2024-04-14 12:05:51,731:INFO:             uvicorn: Not installed
2024-04-14 12:05:51,731:INFO:              m2cgen: Not installed
2024-04-14 12:05:51,731:INFO:           evidently: Not installed
2024-04-14 12:05:51,731:INFO:               fugue: Not installed
2024-04-14 12:05:51,731:INFO:           streamlit: 1.23.1
2024-04-14 12:05:51,731:INFO:             prophet: Not installed
2024-04-14 12:05:51,731:INFO:None
2024-04-14 12:05:51,732:INFO:Set up data.
2024-04-14 12:05:51,816:INFO:Set up folding strategy.
2024-04-14 12:05:51,817:INFO:Set up train/test split.
2024-04-14 12:05:51,818:INFO:Set up data.
2024-04-14 12:05:51,833:INFO:Set up index.
2024-04-14 12:05:51,834:INFO:Assigning column types.
2024-04-14 12:05:51,859:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 12:05:51,955:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:05:51,973:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:05:52,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,152:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:05:52,153:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:05:52,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,261:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 12:05:52,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:05:52,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:05:52,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,581:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 12:05:52,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:52,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:53,002:INFO:Preparing preprocessing pipeline...
2024-04-14 12:05:53,009:INFO:Set up simple imputation.
2024-04-14 12:05:53,012:INFO:Set up feature normalization.
2024-04-14 12:05:53,147:INFO:Finished creating preprocessing pipeline.
2024-04-14 12:05:53,157:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 12:05:53,158:INFO:Creating final display dataframe.
2024-04-14 12:05:53,356:INFO:Setup _display_container:                     Description             Value
0                    Session id              8901
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6df4
2024-04-14 12:05:53,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:53,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:53,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:53,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:05:53,794:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 12:05:53,800:INFO:setup() successfully completed in 2.18s...............
2024-04-14 12:05:53,801:INFO:Initializing create_model()
2024-04-14 12:05:53,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:05:53,802:INFO:Checking exceptions
2024-04-14 12:05:53,916:INFO:Importing libraries
2024-04-14 12:05:53,916:INFO:Copying training dataset
2024-04-14 12:05:53,939:INFO:Defining folds
2024-04-14 12:05:53,940:INFO:Declaring metric variables
2024-04-14 12:05:53,949:INFO:Importing untrained model
2024-04-14 12:05:53,961:INFO:Logistic Regression Imported successfully
2024-04-14 12:05:53,993:INFO:Starting cross validation
2024-04-14 12:05:53,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:05:55,062:INFO:Calculating mean and std
2024-04-14 12:05:55,071:INFO:Creating metrics dataframe
2024-04-14 12:05:55,101:INFO:Finalizing model
2024-04-14 12:05:55,225:INFO:Uploading results into container
2024-04-14 12:05:55,228:INFO:Uploading model into container now
2024-04-14 12:05:55,251:INFO:_master_model_container: 1
2024-04-14 12:05:55,251:INFO:_display_container: 2
2024-04-14 12:05:55,252:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:05:55,253:INFO:create_model() successfully completed......................................
2024-04-14 12:05:58,000:INFO:Initializing create_model()
2024-04-14 12:05:58,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:05:58,001:INFO:Checking exceptions
2024-04-14 12:05:58,069:INFO:Importing libraries
2024-04-14 12:05:58,070:INFO:Copying training dataset
2024-04-14 12:05:58,111:INFO:Defining folds
2024-04-14 12:05:58,111:INFO:Declaring metric variables
2024-04-14 12:05:58,117:INFO:Importing untrained model
2024-04-14 12:05:58,127:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:05:58,143:INFO:Starting cross validation
2024-04-14 12:05:58,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:05:58,647:INFO:Calculating mean and std
2024-04-14 12:05:58,648:INFO:Creating metrics dataframe
2024-04-14 12:05:58,656:INFO:Finalizing model
2024-04-14 12:05:58,791:INFO:Uploading results into container
2024-04-14 12:05:58,793:INFO:Uploading model into container now
2024-04-14 12:05:58,817:INFO:_master_model_container: 2
2024-04-14 12:05:58,818:INFO:_display_container: 3
2024-04-14 12:05:58,819:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8901, splitter='best')
2024-04-14 12:05:58,819:INFO:create_model() successfully completed......................................
2024-04-14 12:05:59,127:INFO:Initializing predict_model()
2024-04-14 12:05:59,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA94151040>)
2024-04-14 12:05:59,127:INFO:Checking exceptions
2024-04-14 12:05:59,128:INFO:Preloading libraries
2024-04-14 12:05:59,131:INFO:Set up data.
2024-04-14 12:05:59,138:INFO:Set up index.
2024-04-14 12:05:59,552:INFO:Initializing predict_model()
2024-04-14 12:05:59,553:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8901, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA94151040>)
2024-04-14 12:05:59,553:INFO:Checking exceptions
2024-04-14 12:05:59,553:INFO:Preloading libraries
2024-04-14 12:05:59,556:INFO:Set up data.
2024-04-14 12:05:59,566:INFO:Set up index.
2024-04-14 12:06:15,719:INFO:Initializing predict_model()
2024-04-14 12:06:15,720:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8901, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8C5BFCA0>)
2024-04-14 12:06:15,720:INFO:Checking exceptions
2024-04-14 12:06:15,720:INFO:Preloading libraries
2024-04-14 12:06:15,726:INFO:Set up data.
2024-04-14 12:06:15,734:INFO:Set up index.
2024-04-14 12:06:16,164:INFO:Initializing predict_model()
2024-04-14 12:06:16,164:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA91205430>)
2024-04-14 12:06:16,165:INFO:Checking exceptions
2024-04-14 12:06:16,165:INFO:Preloading libraries
2024-04-14 12:06:16,170:INFO:Set up data.
2024-04-14 12:06:16,177:INFO:Set up index.
2024-04-14 12:06:16,824:INFO:Initializing plot_model()
2024-04-14 12:06:16,824:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, system=True)
2024-04-14 12:06:16,824:INFO:Checking exceptions
2024-04-14 12:06:16,844:INFO:Preloading libraries
2024-04-14 12:06:16,845:INFO:Copying training dataset
2024-04-14 12:06:16,845:INFO:Plot type: auc
2024-04-14 12:06:17,046:INFO:Fitting Model
2024-04-14 12:06:17,048:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-14 12:06:17,050:INFO:Scoring test/hold-out set
2024-04-14 12:06:17,093:INFO:Saving 'AUC.png'
2024-04-14 12:06:17,545:INFO:Visual Rendered Successfully
2024-04-14 12:06:17,870:INFO:plot_model() successfully completed......................................
2024-04-14 12:06:17,873:INFO:Initializing plot_model()
2024-04-14 12:06:17,873:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8901, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, system=True)
2024-04-14 12:06:17,873:INFO:Checking exceptions
2024-04-14 12:06:17,889:INFO:Preloading libraries
2024-04-14 12:06:17,894:INFO:Copying training dataset
2024-04-14 12:06:17,894:INFO:Plot type: auc
2024-04-14 12:06:18,075:INFO:Fitting Model
2024-04-14 12:06:18,076:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 12:06:18,076:INFO:Scoring test/hold-out set
2024-04-14 12:06:18,107:INFO:Saving 'AUC.png'
2024-04-14 12:06:18,504:INFO:Visual Rendered Successfully
2024-04-14 12:06:18,743:INFO:plot_model() successfully completed......................................
2024-04-14 12:06:18,744:INFO:Initializing compare_models()
2024-04-14 12:06:18,744:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 12:06:18,744:INFO:Checking exceptions
2024-04-14 12:06:18,752:INFO:Preparing display monitor
2024-04-14 12:06:18,847:INFO:Initializing Logistic Regression
2024-04-14 12:06:18,848:INFO:Total runtime is 1.692374547322591e-05 minutes
2024-04-14 12:06:18,858:INFO:SubProcess create_model() called ==================================
2024-04-14 12:06:18,858:INFO:Initializing create_model()
2024-04-14 12:06:18,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BA92DCC160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:06:18,859:INFO:Checking exceptions
2024-04-14 12:06:18,860:INFO:Importing libraries
2024-04-14 12:06:18,860:INFO:Copying training dataset
2024-04-14 12:06:18,881:INFO:Defining folds
2024-04-14 12:06:18,882:INFO:Declaring metric variables
2024-04-14 12:06:18,892:INFO:Importing untrained model
2024-04-14 12:06:18,901:INFO:Logistic Regression Imported successfully
2024-04-14 12:06:18,922:INFO:Starting cross validation
2024-04-14 12:06:18,925:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:06:19,288:INFO:Calculating mean and std
2024-04-14 12:06:19,289:INFO:Creating metrics dataframe
2024-04-14 12:06:19,293:INFO:Uploading results into container
2024-04-14 12:06:19,294:INFO:Uploading model into container now
2024-04-14 12:06:19,294:INFO:_master_model_container: 3
2024-04-14 12:06:19,294:INFO:_display_container: 4
2024-04-14 12:06:19,296:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:06:19,296:INFO:create_model() successfully completed......................................
2024-04-14 12:06:19,560:INFO:SubProcess create_model() end ==================================
2024-04-14 12:06:19,560:INFO:Creating metrics dataframe
2024-04-14 12:06:19,730:INFO:Initializing Decision Tree Classifier
2024-04-14 12:06:19,730:INFO:Total runtime is 0.014717813332875569 minutes
2024-04-14 12:06:19,736:INFO:SubProcess create_model() called ==================================
2024-04-14 12:06:19,737:INFO:Initializing create_model()
2024-04-14 12:06:19,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BA92DCC160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:06:19,737:INFO:Checking exceptions
2024-04-14 12:06:19,737:INFO:Importing libraries
2024-04-14 12:06:19,737:INFO:Copying training dataset
2024-04-14 12:06:19,752:INFO:Defining folds
2024-04-14 12:06:19,752:INFO:Declaring metric variables
2024-04-14 12:06:19,758:INFO:Importing untrained model
2024-04-14 12:06:19,766:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:06:19,779:INFO:Starting cross validation
2024-04-14 12:06:19,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:06:20,640:INFO:Calculating mean and std
2024-04-14 12:06:20,643:INFO:Creating metrics dataframe
2024-04-14 12:06:20,647:INFO:Uploading results into container
2024-04-14 12:06:20,648:INFO:Uploading model into container now
2024-04-14 12:06:20,649:INFO:_master_model_container: 4
2024-04-14 12:06:20,649:INFO:_display_container: 4
2024-04-14 12:06:20,650:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8901, splitter='best')
2024-04-14 12:06:20,650:INFO:create_model() successfully completed......................................
2024-04-14 12:06:20,887:INFO:SubProcess create_model() end ==================================
2024-04-14 12:06:20,887:INFO:Creating metrics dataframe
2024-04-14 12:06:20,962:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-14 12:06:20,993:INFO:Initializing create_model()
2024-04-14 12:06:20,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:06:20,993:INFO:Checking exceptions
2024-04-14 12:06:20,998:INFO:Importing libraries
2024-04-14 12:06:20,998:INFO:Copying training dataset
2024-04-14 12:06:21,020:INFO:Defining folds
2024-04-14 12:06:21,021:INFO:Declaring metric variables
2024-04-14 12:06:21,021:INFO:Importing untrained model
2024-04-14 12:06:21,021:INFO:Declaring custom model
2024-04-14 12:06:21,022:INFO:Logistic Regression Imported successfully
2024-04-14 12:06:21,024:INFO:Cross validation set to False
2024-04-14 12:06:21,024:INFO:Fitting Model
2024-04-14 12:06:21,073:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:06:21,074:INFO:create_model() successfully completed......................................
2024-04-14 12:06:21,365:INFO:_master_model_container: 4
2024-04-14 12:06:21,366:INFO:_display_container: 4
2024-04-14 12:06:21,368:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:06:21,368:INFO:compare_models() successfully completed......................................
2024-04-14 12:06:28,135:INFO:Initializing tune_model()
2024-04-14 12:06:28,135:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>)
2024-04-14 12:06:28,136:INFO:Checking exceptions
2024-04-14 12:06:28,195:INFO:Copying training dataset
2024-04-14 12:06:28,205:INFO:Checking base model
2024-04-14 12:06:28,206:INFO:Base model : Logistic Regression
2024-04-14 12:06:28,215:INFO:Declaring metric variables
2024-04-14 12:06:28,223:INFO:Defining Hyperparameters
2024-04-14 12:06:28,568:INFO:Tuning with n_jobs=-1
2024-04-14 12:06:28,569:INFO:Initializing RandomizedSearchCV
2024-04-14 12:06:30,798:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 1.968}
2024-04-14 12:06:30,807:INFO:Hyperparameter search completed
2024-04-14 12:06:30,809:INFO:SubProcess create_model() called ==================================
2024-04-14 12:06:30,811:INFO:Initializing create_model()
2024-04-14 12:06:30,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BA92C04D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 1.968})
2024-04-14 12:06:30,812:INFO:Checking exceptions
2024-04-14 12:06:30,812:INFO:Importing libraries
2024-04-14 12:06:30,813:INFO:Copying training dataset
2024-04-14 12:06:30,837:INFO:Defining folds
2024-04-14 12:06:30,837:INFO:Declaring metric variables
2024-04-14 12:06:30,849:INFO:Importing untrained model
2024-04-14 12:06:30,850:INFO:Declaring custom model
2024-04-14 12:06:30,868:INFO:Logistic Regression Imported successfully
2024-04-14 12:06:30,903:INFO:Starting cross validation
2024-04-14 12:06:30,905:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:06:31,373:INFO:Calculating mean and std
2024-04-14 12:06:31,379:INFO:Creating metrics dataframe
2024-04-14 12:06:31,396:INFO:Finalizing model
2024-04-14 12:06:31,489:INFO:Uploading results into container
2024-04-14 12:06:31,491:INFO:Uploading model into container now
2024-04-14 12:06:31,493:INFO:_master_model_container: 5
2024-04-14 12:06:31,493:INFO:_display_container: 5
2024-04-14 12:06:31,494:INFO:LogisticRegression(C=1.968, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:06:31,495:INFO:create_model() successfully completed......................................
2024-04-14 12:06:31,831:INFO:SubProcess create_model() end ==================================
2024-04-14 12:06:31,831:INFO:choose_better activated
2024-04-14 12:06:31,837:INFO:SubProcess create_model() called ==================================
2024-04-14 12:06:31,839:INFO:Initializing create_model()
2024-04-14 12:06:31,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA92BE49D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:06:31,839:INFO:Checking exceptions
2024-04-14 12:06:31,844:INFO:Importing libraries
2024-04-14 12:06:31,844:INFO:Copying training dataset
2024-04-14 12:06:31,863:INFO:Defining folds
2024-04-14 12:06:31,863:INFO:Declaring metric variables
2024-04-14 12:06:31,863:INFO:Importing untrained model
2024-04-14 12:06:31,864:INFO:Declaring custom model
2024-04-14 12:06:31,865:INFO:Logistic Regression Imported successfully
2024-04-14 12:06:31,865:INFO:Starting cross validation
2024-04-14 12:06:31,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:06:32,204:INFO:Calculating mean and std
2024-04-14 12:06:32,205:INFO:Creating metrics dataframe
2024-04-14 12:06:32,211:INFO:Finalizing model
2024-04-14 12:06:32,253:INFO:Uploading results into container
2024-04-14 12:06:32,254:INFO:Uploading model into container now
2024-04-14 12:06:32,255:INFO:_master_model_container: 6
2024-04-14 12:06:32,255:INFO:_display_container: 6
2024-04-14 12:06:32,257:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:06:32,257:INFO:create_model() successfully completed......................................
2024-04-14 12:06:32,529:INFO:SubProcess create_model() end ==================================
2024-04-14 12:06:32,531:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5188
2024-04-14 12:06:32,532:INFO:LogisticRegression(C=1.968, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5429
2024-04-14 12:06:32,533:INFO:LogisticRegression(C=1.968, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-14 12:06:32,533:INFO:choose_better completed
2024-04-14 12:06:32,555:INFO:_master_model_container: 6
2024-04-14 12:06:32,556:INFO:_display_container: 5
2024-04-14 12:06:32,557:INFO:LogisticRegression(C=1.968, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8901, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:06:32,557:INFO:tune_model() successfully completed......................................
2024-04-14 12:06:32,864:INFO:Initializing load_model()
2024-04-14 12:06:32,864:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-14 12:18:25,388:INFO:PyCaret ClassificationExperiment
2024-04-14 12:18:25,401:INFO:Logging name: clf-default-name
2024-04-14 12:18:25,406:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 12:18:25,406:INFO:version 3.3.0
2024-04-14 12:18:25,406:INFO:Initializing setup()
2024-04-14 12:18:25,406:INFO:self.USI: 7cad
2024-04-14 12:18:25,411:INFO:self._variable_keys: {'seed', 'gpu_param', 'X_test', 'fold_shuffle_param', '_ml_usecase', 'memory', 'fold_groups_param', 'n_jobs_param', 'USI', 'gpu_n_jobs_param', 'data', '_available_plots', 'fix_imbalance', 'idx', 'y_test', 'pipeline', 'exp_name_log', 'y', 'log_plots_param', 'target_param', 'fold_generator', 'logging_param', 'X_train', 'html_param', 'y_train', 'X', 'exp_id', 'is_multiclass'}
2024-04-14 12:18:25,420:INFO:Checking environment
2024-04-14 12:18:25,434:INFO:python_version: 3.9.5
2024-04-14 12:18:25,435:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 12:18:25,437:INFO:machine: AMD64
2024-04-14 12:18:25,440:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 12:18:25,459:INFO:Memory: svmem(total=6312697856, available=684310528, percent=89.2, used=5628387328, free=684310528)
2024-04-14 12:18:25,460:INFO:Physical Core: 4
2024-04-14 12:18:25,460:INFO:Logical Core: 8
2024-04-14 12:18:25,461:INFO:Checking libraries
2024-04-14 12:18:25,462:INFO:System:
2024-04-14 12:18:25,463:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 12:18:25,463:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 12:18:25,463:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 12:18:25,464:INFO:PyCaret required dependencies:
2024-04-14 12:18:25,472:INFO:                 pip: 24.0
2024-04-14 12:18:25,473:INFO:          setuptools: 56.0.0
2024-04-14 12:18:25,473:INFO:             pycaret: 3.3.0
2024-04-14 12:18:25,473:INFO:             IPython: 8.6.0
2024-04-14 12:18:25,473:INFO:          ipywidgets: 8.1.2
2024-04-14 12:18:25,474:INFO:                tqdm: 4.66.2
2024-04-14 12:18:25,474:INFO:               numpy: 1.24.4
2024-04-14 12:18:25,474:INFO:              pandas: 2.1.4
2024-04-14 12:18:25,474:INFO:              jinja2: 3.1.2
2024-04-14 12:18:25,475:INFO:               scipy: 1.9.0
2024-04-14 12:18:25,475:INFO:              joblib: 1.3.2
2024-04-14 12:18:25,475:INFO:             sklearn: 1.4.1.post1
2024-04-14 12:18:25,475:INFO:                pyod: 1.1.3
2024-04-14 12:18:25,476:INFO:            imblearn: 0.12.2
2024-04-14 12:18:25,476:INFO:   category_encoders: 2.6.3
2024-04-14 12:18:25,476:INFO:            lightgbm: 4.3.0
2024-04-14 12:18:25,476:INFO:               numba: 0.59.1
2024-04-14 12:18:25,476:INFO:            requests: 2.31.0
2024-04-14 12:18:25,477:INFO:          matplotlib: 3.5.3
2024-04-14 12:18:25,477:INFO:          scikitplot: 0.3.7
2024-04-14 12:18:25,477:INFO:         yellowbrick: 1.5
2024-04-14 12:18:25,478:INFO:              plotly: 5.15.0
2024-04-14 12:18:25,479:INFO:    plotly-resampler: Not installed
2024-04-14 12:18:25,479:INFO:             kaleido: 0.2.1
2024-04-14 12:18:25,479:INFO:           schemdraw: 0.15
2024-04-14 12:18:25,480:INFO:         statsmodels: 0.14.1
2024-04-14 12:18:25,480:INFO:              sktime: 0.28.0
2024-04-14 12:18:25,480:INFO:               tbats: 1.1.3
2024-04-14 12:18:25,480:INFO:            pmdarima: 2.0.4
2024-04-14 12:18:25,481:INFO:              psutil: 5.9.4
2024-04-14 12:18:25,481:INFO:          markupsafe: 2.1.1
2024-04-14 12:18:25,481:INFO:             pickle5: Not installed
2024-04-14 12:18:25,481:INFO:         cloudpickle: 3.0.0
2024-04-14 12:18:25,481:INFO:         deprecation: 2.1.0
2024-04-14 12:18:25,481:INFO:              xxhash: 3.4.1
2024-04-14 12:18:25,481:INFO:           wurlitzer: Not installed
2024-04-14 12:18:25,481:INFO:PyCaret optional dependencies:
2024-04-14 12:18:25,482:INFO:                shap: 0.45.0
2024-04-14 12:18:25,482:INFO:           interpret: 0.6.0
2024-04-14 12:18:25,482:INFO:                umap: 0.5.6
2024-04-14 12:18:25,482:INFO:     ydata_profiling: 4.7.0
2024-04-14 12:18:25,483:INFO:  explainerdashboard: 0.4.7
2024-04-14 12:18:25,483:INFO:             autoviz: Not installed
2024-04-14 12:18:25,483:INFO:           fairlearn: 0.7.0
2024-04-14 12:18:25,483:INFO:          deepchecks: Not installed
2024-04-14 12:18:25,483:INFO:             xgboost: Not installed
2024-04-14 12:18:25,483:INFO:            catboost: Not installed
2024-04-14 12:18:25,483:INFO:              kmodes: Not installed
2024-04-14 12:18:25,483:INFO:             mlxtend: Not installed
2024-04-14 12:18:25,483:INFO:       statsforecast: Not installed
2024-04-14 12:18:25,483:INFO:        tune_sklearn: Not installed
2024-04-14 12:18:25,483:INFO:                 ray: Not installed
2024-04-14 12:18:25,483:INFO:            hyperopt: Not installed
2024-04-14 12:18:25,483:INFO:              optuna: Not installed
2024-04-14 12:18:25,483:INFO:               skopt: Not installed
2024-04-14 12:18:25,483:INFO:              mlflow: 2.11.3
2024-04-14 12:18:25,484:INFO:              gradio: Not installed
2024-04-14 12:18:25,484:INFO:             fastapi: Not installed
2024-04-14 12:18:25,484:INFO:             uvicorn: Not installed
2024-04-14 12:18:25,484:INFO:              m2cgen: Not installed
2024-04-14 12:18:25,484:INFO:           evidently: Not installed
2024-04-14 12:18:25,484:INFO:               fugue: Not installed
2024-04-14 12:18:25,484:INFO:           streamlit: 1.23.1
2024-04-14 12:18:25,484:INFO:             prophet: Not installed
2024-04-14 12:18:25,484:INFO:None
2024-04-14 12:18:25,486:INFO:Set up data.
2024-04-14 12:18:25,624:INFO:Set up folding strategy.
2024-04-14 12:18:25,635:INFO:Set up train/test split.
2024-04-14 12:18:25,635:INFO:Set up data.
2024-04-14 12:18:25,657:INFO:Set up index.
2024-04-14 12:18:25,661:INFO:Assigning column types.
2024-04-14 12:18:25,690:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 12:18:25,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:18:25,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:18:25,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:25,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,098:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:18:26,100:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:18:26,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,157:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 12:18:26,247:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:18:26,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,441:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:18:26,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,519:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 12:18:26,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:26,890:INFO:Preparing preprocessing pipeline...
2024-04-14 12:18:26,898:INFO:Set up simple imputation.
2024-04-14 12:18:26,904:INFO:Set up feature normalization.
2024-04-14 12:18:27,080:INFO:Finished creating preprocessing pipeline.
2024-04-14 12:18:27,114:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 12:18:27,114:INFO:Creating final display dataframe.
2024-04-14 12:18:27,330:INFO:Setup _display_container:                     Description             Value
0                    Session id              3447
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7cad
2024-04-14 12:18:27,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:27,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:27,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:27,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:18:27,903:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 12:18:27,908:INFO:setup() successfully completed in 2.66s...............
2024-04-14 12:18:27,909:INFO:Initializing create_model()
2024-04-14 12:18:27,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:18:27,909:INFO:Checking exceptions
2024-04-14 12:18:28,017:INFO:Importing libraries
2024-04-14 12:18:28,018:INFO:Copying training dataset
2024-04-14 12:18:28,036:INFO:Defining folds
2024-04-14 12:18:28,037:INFO:Declaring metric variables
2024-04-14 12:18:28,048:INFO:Importing untrained model
2024-04-14 12:18:28,057:INFO:Logistic Regression Imported successfully
2024-04-14 12:18:28,074:INFO:Starting cross validation
2024-04-14 12:18:28,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:18:43,051:INFO:Calculating mean and std
2024-04-14 12:18:43,061:INFO:Creating metrics dataframe
2024-04-14 12:18:43,082:INFO:Finalizing model
2024-04-14 12:18:43,217:INFO:Uploading results into container
2024-04-14 12:18:43,219:INFO:Uploading model into container now
2024-04-14 12:18:43,262:INFO:_master_model_container: 1
2024-04-14 12:18:43,262:INFO:_display_container: 2
2024-04-14 12:18:43,263:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:18:43,264:INFO:create_model() successfully completed......................................
2024-04-14 12:18:51,762:INFO:Initializing create_model()
2024-04-14 12:18:51,762:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:18:51,762:INFO:Checking exceptions
2024-04-14 12:18:51,845:INFO:Importing libraries
2024-04-14 12:18:51,846:INFO:Copying training dataset
2024-04-14 12:18:51,951:INFO:Defining folds
2024-04-14 12:18:51,952:INFO:Declaring metric variables
2024-04-14 12:18:51,963:INFO:Importing untrained model
2024-04-14 12:18:51,978:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:18:52,003:INFO:Starting cross validation
2024-04-14 12:18:52,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:18:52,715:INFO:Calculating mean and std
2024-04-14 12:18:52,716:INFO:Creating metrics dataframe
2024-04-14 12:18:52,731:INFO:Finalizing model
2024-04-14 12:18:52,860:INFO:Uploading results into container
2024-04-14 12:18:52,863:INFO:Uploading model into container now
2024-04-14 12:18:52,882:INFO:_master_model_container: 2
2024-04-14 12:18:52,882:INFO:_display_container: 3
2024-04-14 12:18:52,883:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3447, splitter='best')
2024-04-14 12:18:52,884:INFO:create_model() successfully completed......................................
2024-04-14 12:18:53,158:INFO:Initializing predict_model()
2024-04-14 12:18:53,158:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA9681E280>)
2024-04-14 12:18:53,159:INFO:Checking exceptions
2024-04-14 12:18:53,159:INFO:Preloading libraries
2024-04-14 12:18:53,162:INFO:Set up data.
2024-04-14 12:18:53,168:INFO:Set up index.
2024-04-14 12:18:53,543:INFO:Initializing predict_model()
2024-04-14 12:18:53,543:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3447, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA9681E280>)
2024-04-14 12:18:53,543:INFO:Checking exceptions
2024-04-14 12:18:53,543:INFO:Preloading libraries
2024-04-14 12:18:53,546:INFO:Set up data.
2024-04-14 12:18:53,551:INFO:Set up index.
2024-04-14 12:19:08,212:INFO:Initializing predict_model()
2024-04-14 12:19:08,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3447, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8C571E50>)
2024-04-14 12:19:08,213:INFO:Checking exceptions
2024-04-14 12:19:08,213:INFO:Preloading libraries
2024-04-14 12:19:08,219:INFO:Set up data.
2024-04-14 12:19:08,226:INFO:Set up index.
2024-04-14 12:19:08,691:INFO:Initializing predict_model()
2024-04-14 12:19:08,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA933A9820>)
2024-04-14 12:19:08,691:INFO:Checking exceptions
2024-04-14 12:19:08,691:INFO:Preloading libraries
2024-04-14 12:19:08,696:INFO:Set up data.
2024-04-14 12:19:08,704:INFO:Set up index.
2024-04-14 12:19:09,364:INFO:Initializing plot_model()
2024-04-14 12:19:09,364:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, system=True)
2024-04-14 12:19:09,364:INFO:Checking exceptions
2024-04-14 12:19:09,384:INFO:Preloading libraries
2024-04-14 12:19:09,385:INFO:Copying training dataset
2024-04-14 12:19:09,385:INFO:Plot type: auc
2024-04-14 12:19:09,594:INFO:Fitting Model
2024-04-14 12:19:09,597:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-14 12:19:09,599:INFO:Scoring test/hold-out set
2024-04-14 12:19:09,664:INFO:Saving 'AUC.png'
2024-04-14 12:19:10,175:INFO:Visual Rendered Successfully
2024-04-14 12:19:10,448:INFO:plot_model() successfully completed......................................
2024-04-14 12:19:10,451:INFO:Initializing plot_model()
2024-04-14 12:19:10,451:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3447, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, system=True)
2024-04-14 12:19:10,451:INFO:Checking exceptions
2024-04-14 12:19:10,459:INFO:Preloading libraries
2024-04-14 12:19:10,461:INFO:Copying training dataset
2024-04-14 12:19:10,462:INFO:Plot type: auc
2024-04-14 12:19:10,695:INFO:Fitting Model
2024-04-14 12:19:10,697:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 12:19:10,699:INFO:Scoring test/hold-out set
2024-04-14 12:19:10,774:INFO:Saving 'AUC.png'
2024-04-14 12:19:11,258:INFO:Visual Rendered Successfully
2024-04-14 12:19:11,550:INFO:plot_model() successfully completed......................................
2024-04-14 12:19:11,552:INFO:Initializing compare_models()
2024-04-14 12:19:11,552:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 12:19:11,552:INFO:Checking exceptions
2024-04-14 12:19:11,560:INFO:Preparing display monitor
2024-04-14 12:19:11,633:INFO:Initializing Logistic Regression
2024-04-14 12:19:11,634:INFO:Total runtime is 1.6836325327555337e-05 minutes
2024-04-14 12:19:11,644:INFO:SubProcess create_model() called ==================================
2024-04-14 12:19:11,644:INFO:Initializing create_model()
2024-04-14 12:19:11,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BA92E1ECA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:19:11,646:INFO:Checking exceptions
2024-04-14 12:19:11,646:INFO:Importing libraries
2024-04-14 12:19:11,646:INFO:Copying training dataset
2024-04-14 12:19:11,666:INFO:Defining folds
2024-04-14 12:19:11,666:INFO:Declaring metric variables
2024-04-14 12:19:11,679:INFO:Importing untrained model
2024-04-14 12:19:11,689:INFO:Logistic Regression Imported successfully
2024-04-14 12:19:11,708:INFO:Starting cross validation
2024-04-14 12:19:11,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:19:12,249:INFO:Calculating mean and std
2024-04-14 12:19:12,250:INFO:Creating metrics dataframe
2024-04-14 12:19:12,255:INFO:Uploading results into container
2024-04-14 12:19:12,256:INFO:Uploading model into container now
2024-04-14 12:19:12,256:INFO:_master_model_container: 3
2024-04-14 12:19:12,256:INFO:_display_container: 4
2024-04-14 12:19:12,257:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:19:12,257:INFO:create_model() successfully completed......................................
2024-04-14 12:19:12,556:INFO:SubProcess create_model() end ==================================
2024-04-14 12:19:12,556:INFO:Creating metrics dataframe
2024-04-14 12:19:12,581:INFO:Initializing Decision Tree Classifier
2024-04-14 12:19:12,581:INFO:Total runtime is 0.0158031702041626 minutes
2024-04-14 12:19:12,594:INFO:SubProcess create_model() called ==================================
2024-04-14 12:19:12,595:INFO:Initializing create_model()
2024-04-14 12:19:12,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BA92E1ECA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:19:12,596:INFO:Checking exceptions
2024-04-14 12:19:12,596:INFO:Importing libraries
2024-04-14 12:19:12,597:INFO:Copying training dataset
2024-04-14 12:19:12,624:INFO:Defining folds
2024-04-14 12:19:12,625:INFO:Declaring metric variables
2024-04-14 12:19:12,636:INFO:Importing untrained model
2024-04-14 12:19:12,652:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:19:12,671:INFO:Starting cross validation
2024-04-14 12:19:12,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:19:13,192:INFO:Calculating mean and std
2024-04-14 12:19:13,195:INFO:Creating metrics dataframe
2024-04-14 12:19:13,199:INFO:Uploading results into container
2024-04-14 12:19:13,200:INFO:Uploading model into container now
2024-04-14 12:19:13,200:INFO:_master_model_container: 4
2024-04-14 12:19:13,200:INFO:_display_container: 4
2024-04-14 12:19:13,201:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3447, splitter='best')
2024-04-14 12:19:13,202:INFO:create_model() successfully completed......................................
2024-04-14 12:19:13,440:INFO:SubProcess create_model() end ==================================
2024-04-14 12:19:13,441:INFO:Creating metrics dataframe
2024-04-14 12:19:13,467:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-14 12:19:13,490:INFO:Initializing create_model()
2024-04-14 12:19:13,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:19:13,491:INFO:Checking exceptions
2024-04-14 12:19:13,496:INFO:Importing libraries
2024-04-14 12:19:13,497:INFO:Copying training dataset
2024-04-14 12:19:13,516:INFO:Defining folds
2024-04-14 12:19:13,516:INFO:Declaring metric variables
2024-04-14 12:19:13,516:INFO:Importing untrained model
2024-04-14 12:19:13,517:INFO:Declaring custom model
2024-04-14 12:19:13,518:INFO:Logistic Regression Imported successfully
2024-04-14 12:19:13,519:INFO:Cross validation set to False
2024-04-14 12:19:13,520:INFO:Fitting Model
2024-04-14 12:19:13,560:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:19:13,560:INFO:create_model() successfully completed......................................
2024-04-14 12:19:13,842:INFO:_master_model_container: 4
2024-04-14 12:19:13,843:INFO:_display_container: 4
2024-04-14 12:19:13,844:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:19:13,844:INFO:compare_models() successfully completed......................................
2024-04-14 12:19:13,845:INFO:Initializing tune_model()
2024-04-14 12:19:13,846:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>)
2024-04-14 12:19:13,846:INFO:Checking exceptions
2024-04-14 12:19:13,903:INFO:Copying training dataset
2024-04-14 12:19:13,918:INFO:Checking base model
2024-04-14 12:19:13,918:INFO:Base model : Logistic Regression
2024-04-14 12:19:13,929:INFO:Declaring metric variables
2024-04-14 12:19:13,942:INFO:Defining Hyperparameters
2024-04-14 12:19:14,343:INFO:Tuning with n_jobs=-1
2024-04-14 12:19:14,343:INFO:Initializing RandomizedSearchCV
2024-04-14 12:19:16,149:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 2.29}
2024-04-14 12:19:16,152:INFO:Hyperparameter search completed
2024-04-14 12:19:16,153:INFO:SubProcess create_model() called ==================================
2024-04-14 12:19:16,154:INFO:Initializing create_model()
2024-04-14 12:19:16,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BA8DBA2850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 2.29})
2024-04-14 12:19:16,155:INFO:Checking exceptions
2024-04-14 12:19:16,155:INFO:Importing libraries
2024-04-14 12:19:16,156:INFO:Copying training dataset
2024-04-14 12:19:16,176:INFO:Defining folds
2024-04-14 12:19:16,177:INFO:Declaring metric variables
2024-04-14 12:19:16,187:INFO:Importing untrained model
2024-04-14 12:19:16,187:INFO:Declaring custom model
2024-04-14 12:19:16,198:INFO:Logistic Regression Imported successfully
2024-04-14 12:19:16,218:INFO:Starting cross validation
2024-04-14 12:19:16,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:19:16,544:INFO:Calculating mean and std
2024-04-14 12:19:16,547:INFO:Creating metrics dataframe
2024-04-14 12:19:16,559:INFO:Finalizing model
2024-04-14 12:19:16,620:INFO:Uploading results into container
2024-04-14 12:19:16,621:INFO:Uploading model into container now
2024-04-14 12:19:16,622:INFO:_master_model_container: 5
2024-04-14 12:19:16,623:INFO:_display_container: 5
2024-04-14 12:19:16,624:INFO:LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:19:16,625:INFO:create_model() successfully completed......................................
2024-04-14 12:19:16,867:INFO:SubProcess create_model() end ==================================
2024-04-14 12:19:16,867:INFO:choose_better activated
2024-04-14 12:19:16,876:INFO:SubProcess create_model() called ==================================
2024-04-14 12:19:16,877:INFO:Initializing create_model()
2024-04-14 12:19:16,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:19:16,878:INFO:Checking exceptions
2024-04-14 12:19:16,882:INFO:Importing libraries
2024-04-14 12:19:16,882:INFO:Copying training dataset
2024-04-14 12:19:16,894:INFO:Defining folds
2024-04-14 12:19:16,895:INFO:Declaring metric variables
2024-04-14 12:19:16,895:INFO:Importing untrained model
2024-04-14 12:19:16,895:INFO:Declaring custom model
2024-04-14 12:19:16,896:INFO:Logistic Regression Imported successfully
2024-04-14 12:19:16,896:INFO:Starting cross validation
2024-04-14 12:19:16,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:19:17,192:INFO:Calculating mean and std
2024-04-14 12:19:17,194:INFO:Creating metrics dataframe
2024-04-14 12:19:17,198:INFO:Finalizing model
2024-04-14 12:19:17,236:INFO:Uploading results into container
2024-04-14 12:19:17,237:INFO:Uploading model into container now
2024-04-14 12:19:17,238:INFO:_master_model_container: 6
2024-04-14 12:19:17,238:INFO:_display_container: 6
2024-04-14 12:19:17,239:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:19:17,239:INFO:create_model() successfully completed......................................
2024-04-14 12:19:17,494:INFO:SubProcess create_model() end ==================================
2024-04-14 12:19:17,495:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5188
2024-04-14 12:19:17,496:INFO:LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5429
2024-04-14 12:19:17,496:INFO:LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-14 12:19:17,496:INFO:choose_better completed
2024-04-14 12:19:17,517:INFO:_master_model_container: 6
2024-04-14 12:19:17,518:INFO:_display_container: 5
2024-04-14 12:19:17,519:INFO:LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:19:17,519:INFO:tune_model() successfully completed......................................
2024-04-14 12:19:17,768:INFO:Initializing save_model()
2024-04-14 12:19:17,768:INFO:save_model(model=LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 12:19:17,768:INFO:Adding model into prep_pipe
2024-04-14 12:19:17,778:INFO:modelo_kobe.pkl saved in current working directory
2024-04-14 12:19:17,788:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3447,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-14 12:19:17,789:INFO:save_model() successfully completed......................................
2024-04-14 12:19:18,014:INFO:Initializing load_model()
2024-04-14 12:19:18,014:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-14 12:19:18,043:INFO:Initializing predict_model()
2024-04-14 12:19:18,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8DC8F8B0>)
2024-04-14 12:19:18,043:INFO:Checking exceptions
2024-04-14 12:19:18,043:INFO:Preloading libraries
2024-04-14 12:19:18,048:INFO:Set up data.
2024-04-14 12:19:18,059:INFO:Set up index.
2024-04-14 12:19:18,602:INFO:Initializing predict_model()
2024-04-14 12:19:18,602:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BA930FDD30>, estimator=LogisticRegression(C=2.29, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BA8DC8F8B0>)
2024-04-14 12:19:18,603:INFO:Checking exceptions
2024-04-14 12:19:18,603:INFO:Preloading libraries
2024-04-14 12:19:18,608:INFO:Set up data.
2024-04-14 12:19:18,620:INFO:Set up index.
2024-04-14 12:19:19,574:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-14 12:19:27,667:WARNING:C:\Users\gabri\AppData\Local\Temp\ipykernel_10688\241547523.py:133: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions('modelo_kobe')[-1].version

2024-04-14 12:20:10,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:20:10,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:20:10,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:20:10,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:20:13,213:INFO:PyCaret ClassificationExperiment
2024-04-14 12:20:13,214:INFO:Logging name: clf-default-name
2024-04-14 12:20:13,214:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 12:20:13,219:INFO:version 3.3.0
2024-04-14 12:20:13,219:INFO:Initializing setup()
2024-04-14 12:20:13,222:INFO:self.USI: 5772
2024-04-14 12:20:13,222:INFO:self._variable_keys: {'X_test', 'seed', 'y', 'n_jobs_param', 'exp_id', 'data', 'html_param', '_available_plots', 'USI', 'memory', 'target_param', 'is_multiclass', 'logging_param', 'fold_groups_param', 'gpu_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_name_log', 'X_train', 'y_train', 'fold_generator', 'log_plots_param', 'X', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', 'idx', 'y_test'}
2024-04-14 12:20:13,224:INFO:Checking environment
2024-04-14 12:20:13,225:INFO:python_version: 3.9.5
2024-04-14 12:20:13,226:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 12:20:13,227:INFO:machine: AMD64
2024-04-14 12:20:13,227:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 12:20:13,239:INFO:Memory: svmem(total=6312697856, available=773390336, percent=87.7, used=5539307520, free=773390336)
2024-04-14 12:20:13,240:INFO:Physical Core: 4
2024-04-14 12:20:13,241:INFO:Logical Core: 8
2024-04-14 12:20:13,242:INFO:Checking libraries
2024-04-14 12:20:13,242:INFO:System:
2024-04-14 12:20:13,242:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 12:20:13,244:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 12:20:13,245:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 12:20:13,245:INFO:PyCaret required dependencies:
2024-04-14 12:20:13,510:INFO:                 pip: 24.0
2024-04-14 12:20:13,510:INFO:          setuptools: 56.0.0
2024-04-14 12:20:13,510:INFO:             pycaret: 3.3.0
2024-04-14 12:20:13,510:INFO:             IPython: 8.6.0
2024-04-14 12:20:13,510:INFO:          ipywidgets: 8.1.2
2024-04-14 12:20:13,511:INFO:                tqdm: 4.66.2
2024-04-14 12:20:13,511:INFO:               numpy: 1.24.4
2024-04-14 12:20:13,511:INFO:              pandas: 2.1.4
2024-04-14 12:20:13,511:INFO:              jinja2: 3.1.2
2024-04-14 12:20:13,511:INFO:               scipy: 1.9.0
2024-04-14 12:20:13,511:INFO:              joblib: 1.3.2
2024-04-14 12:20:13,512:INFO:             sklearn: 1.4.1.post1
2024-04-14 12:20:13,512:INFO:                pyod: 1.1.3
2024-04-14 12:20:13,512:INFO:            imblearn: 0.12.2
2024-04-14 12:20:13,512:INFO:   category_encoders: 2.6.3
2024-04-14 12:20:13,512:INFO:            lightgbm: 4.3.0
2024-04-14 12:20:13,512:INFO:               numba: 0.59.1
2024-04-14 12:20:13,512:INFO:            requests: 2.31.0
2024-04-14 12:20:13,513:INFO:          matplotlib: 3.5.3
2024-04-14 12:20:13,513:INFO:          scikitplot: 0.3.7
2024-04-14 12:20:13,513:INFO:         yellowbrick: 1.5
2024-04-14 12:20:13,513:INFO:              plotly: 5.15.0
2024-04-14 12:20:13,513:INFO:    plotly-resampler: Not installed
2024-04-14 12:20:13,513:INFO:             kaleido: 0.2.1
2024-04-14 12:20:13,513:INFO:           schemdraw: 0.15
2024-04-14 12:20:13,513:INFO:         statsmodels: 0.14.1
2024-04-14 12:20:13,514:INFO:              sktime: 0.28.0
2024-04-14 12:20:13,514:INFO:               tbats: 1.1.3
2024-04-14 12:20:13,514:INFO:            pmdarima: 2.0.4
2024-04-14 12:20:13,514:INFO:              psutil: 5.9.4
2024-04-14 12:20:13,514:INFO:          markupsafe: 2.1.1
2024-04-14 12:20:13,514:INFO:             pickle5: Not installed
2024-04-14 12:20:13,514:INFO:         cloudpickle: 3.0.0
2024-04-14 12:20:13,514:INFO:         deprecation: 2.1.0
2024-04-14 12:20:13,514:INFO:              xxhash: 3.4.1
2024-04-14 12:20:13,515:INFO:           wurlitzer: Not installed
2024-04-14 12:20:13,515:INFO:PyCaret optional dependencies:
2024-04-14 12:20:13,560:INFO:                shap: 0.45.0
2024-04-14 12:20:13,561:INFO:           interpret: 0.6.0
2024-04-14 12:20:13,561:INFO:                umap: 0.5.6
2024-04-14 12:20:13,561:INFO:     ydata_profiling: 4.7.0
2024-04-14 12:20:13,561:INFO:  explainerdashboard: 0.4.7
2024-04-14 12:20:13,562:INFO:             autoviz: Not installed
2024-04-14 12:20:13,562:INFO:           fairlearn: 0.7.0
2024-04-14 12:20:13,562:INFO:          deepchecks: Not installed
2024-04-14 12:20:13,562:INFO:             xgboost: Not installed
2024-04-14 12:20:13,562:INFO:            catboost: Not installed
2024-04-14 12:20:13,562:INFO:              kmodes: Not installed
2024-04-14 12:20:13,562:INFO:             mlxtend: Not installed
2024-04-14 12:20:13,562:INFO:       statsforecast: Not installed
2024-04-14 12:20:13,562:INFO:        tune_sklearn: Not installed
2024-04-14 12:20:13,562:INFO:                 ray: Not installed
2024-04-14 12:20:13,562:INFO:            hyperopt: Not installed
2024-04-14 12:20:13,562:INFO:              optuna: Not installed
2024-04-14 12:20:13,562:INFO:               skopt: Not installed
2024-04-14 12:20:13,562:INFO:              mlflow: 2.11.3
2024-04-14 12:20:13,564:INFO:              gradio: Not installed
2024-04-14 12:20:13,564:INFO:             fastapi: Not installed
2024-04-14 12:20:13,564:INFO:             uvicorn: Not installed
2024-04-14 12:20:13,564:INFO:              m2cgen: Not installed
2024-04-14 12:20:13,564:INFO:           evidently: Not installed
2024-04-14 12:20:13,564:INFO:               fugue: Not installed
2024-04-14 12:20:13,564:INFO:           streamlit: 1.23.1
2024-04-14 12:20:13,565:INFO:             prophet: Not installed
2024-04-14 12:20:13,565:INFO:None
2024-04-14 12:20:13,565:INFO:Set up data.
2024-04-14 12:20:13,597:INFO:Set up folding strategy.
2024-04-14 12:20:13,598:INFO:Set up train/test split.
2024-04-14 12:20:13,598:INFO:Set up data.
2024-04-14 12:20:13,612:INFO:Set up index.
2024-04-14 12:20:13,612:INFO:Assigning column types.
2024-04-14 12:20:13,630:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 12:20:13,762:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:20:13,772:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:20:13,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:13,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:13,941:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:20:13,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:20:14,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,004:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 12:20:14,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:20:14,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,269:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:20:14,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,328:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 12:20:14,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:14,707:INFO:Preparing preprocessing pipeline...
2024-04-14 12:20:14,711:INFO:Set up simple imputation.
2024-04-14 12:20:14,712:INFO:Set up feature normalization.
2024-04-14 12:20:14,770:INFO:Finished creating preprocessing pipeline.
2024-04-14 12:20:14,782:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 12:20:14,782:INFO:Creating final display dataframe.
2024-04-14 12:20:14,995:INFO:Setup _display_container:                     Description             Value
0                    Session id              7507
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5772
2024-04-14 12:20:15,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:15,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:15,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:15,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:20:15,411:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 12:20:15,412:INFO:setup() successfully completed in 2.22s...............
2024-04-14 12:20:15,414:INFO:Initializing create_model()
2024-04-14 12:20:15,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:20:15,414:INFO:Checking exceptions
2024-04-14 12:20:15,532:INFO:Importing libraries
2024-04-14 12:20:15,535:INFO:Copying training dataset
2024-04-14 12:20:15,565:INFO:Defining folds
2024-04-14 12:20:15,565:INFO:Declaring metric variables
2024-04-14 12:20:15,580:INFO:Importing untrained model
2024-04-14 12:20:15,595:INFO:Logistic Regression Imported successfully
2024-04-14 12:20:15,629:INFO:Starting cross validation
2024-04-14 12:20:15,631:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:20:26,935:INFO:Calculating mean and std
2024-04-14 12:20:26,940:INFO:Creating metrics dataframe
2024-04-14 12:20:26,956:INFO:Finalizing model
2024-04-14 12:20:27,013:INFO:Uploading results into container
2024-04-14 12:20:27,015:INFO:Uploading model into container now
2024-04-14 12:20:27,034:INFO:_master_model_container: 1
2024-04-14 12:20:27,034:INFO:_display_container: 2
2024-04-14 12:20:27,035:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:20:27,035:INFO:create_model() successfully completed......................................
2024-04-14 12:20:27,162:INFO:Initializing create_model()
2024-04-14 12:20:27,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:20:27,162:INFO:Checking exceptions
2024-04-14 12:20:27,291:INFO:Importing libraries
2024-04-14 12:20:27,292:INFO:Copying training dataset
2024-04-14 12:20:27,315:INFO:Defining folds
2024-04-14 12:20:27,316:INFO:Declaring metric variables
2024-04-14 12:20:27,326:INFO:Importing untrained model
2024-04-14 12:20:27,338:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:20:27,376:INFO:Starting cross validation
2024-04-14 12:20:27,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:20:27,899:INFO:Calculating mean and std
2024-04-14 12:20:27,901:INFO:Creating metrics dataframe
2024-04-14 12:20:27,916:INFO:Finalizing model
2024-04-14 12:20:28,043:INFO:Uploading results into container
2024-04-14 12:20:28,046:INFO:Uploading model into container now
2024-04-14 12:20:28,067:INFO:_master_model_container: 2
2024-04-14 12:20:28,068:INFO:_display_container: 3
2024-04-14 12:20:28,069:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-14 12:20:28,069:INFO:create_model() successfully completed......................................
2024-04-14 12:20:28,236:INFO:Initializing predict_model()
2024-04-14 12:20:28,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000200AA26E280>)
2024-04-14 12:20:28,236:INFO:Checking exceptions
2024-04-14 12:20:28,236:INFO:Preloading libraries
2024-04-14 12:20:28,240:INFO:Set up data.
2024-04-14 12:20:28,247:INFO:Set up index.
2024-04-14 12:20:28,473:INFO:Initializing predict_model()
2024-04-14 12:20:28,473:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000200AA26E280>)
2024-04-14 12:20:28,473:INFO:Checking exceptions
2024-04-14 12:20:28,473:INFO:Preloading libraries
2024-04-14 12:20:28,478:INFO:Set up data.
2024-04-14 12:20:28,487:INFO:Set up index.
2024-04-14 12:20:45,644:INFO:Initializing predict_model()
2024-04-14 12:20:45,644:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000200AF505D30>)
2024-04-14 12:20:45,645:INFO:Checking exceptions
2024-04-14 12:20:45,645:INFO:Preloading libraries
2024-04-14 12:20:45,652:INFO:Set up data.
2024-04-14 12:20:45,659:INFO:Set up index.
2024-04-14 12:20:45,958:INFO:Initializing predict_model()
2024-04-14 12:20:45,958:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000200AF4AA8B0>)
2024-04-14 12:20:45,958:INFO:Checking exceptions
2024-04-14 12:20:45,958:INFO:Preloading libraries
2024-04-14 12:20:45,963:INFO:Set up data.
2024-04-14 12:20:45,970:INFO:Set up index.
2024-04-14 12:20:46,490:INFO:Initializing plot_model()
2024-04-14 12:20:46,491:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, system=True)
2024-04-14 12:20:46,491:INFO:Checking exceptions
2024-04-14 12:20:46,512:INFO:Preloading libraries
2024-04-14 12:20:46,513:INFO:Copying training dataset
2024-04-14 12:20:46,513:INFO:Plot type: auc
2024-04-14 12:20:46,703:INFO:Fitting Model
2024-04-14 12:20:46,706:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-14 12:20:46,707:INFO:Scoring test/hold-out set
2024-04-14 12:20:46,757:INFO:Saving 'AUC.png'
2024-04-14 12:20:47,262:INFO:Visual Rendered Successfully
2024-04-14 12:20:47,409:INFO:plot_model() successfully completed......................................
2024-04-14 12:20:47,421:INFO:Initializing plot_model()
2024-04-14 12:20:47,421:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, system=True)
2024-04-14 12:20:47,422:INFO:Checking exceptions
2024-04-14 12:20:47,437:INFO:Preloading libraries
2024-04-14 12:20:47,446:INFO:Copying training dataset
2024-04-14 12:20:47,447:INFO:Plot type: auc
2024-04-14 12:20:47,804:INFO:Fitting Model
2024-04-14 12:20:47,805:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 12:20:47,806:INFO:Scoring test/hold-out set
2024-04-14 12:20:47,861:INFO:Saving 'AUC.png'
2024-04-14 12:20:48,460:INFO:Visual Rendered Successfully
2024-04-14 12:20:48,630:INFO:plot_model() successfully completed......................................
2024-04-14 12:20:48,632:INFO:Initializing compare_models()
2024-04-14 12:20:48,633:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 12:20:48,633:INFO:Checking exceptions
2024-04-14 12:20:48,644:INFO:Preparing display monitor
2024-04-14 12:20:48,720:INFO:Initializing Logistic Regression
2024-04-14 12:20:48,720:INFO:Total runtime is 1.6649564107259113e-05 minutes
2024-04-14 12:20:48,733:INFO:SubProcess create_model() called ==================================
2024-04-14 12:20:48,733:INFO:Initializing create_model()
2024-04-14 12:20:48,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000200AF54F9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:20:48,734:INFO:Checking exceptions
2024-04-14 12:20:48,736:INFO:Importing libraries
2024-04-14 12:20:48,736:INFO:Copying training dataset
2024-04-14 12:20:48,756:INFO:Defining folds
2024-04-14 12:20:48,756:INFO:Declaring metric variables
2024-04-14 12:20:48,763:INFO:Importing untrained model
2024-04-14 12:20:48,778:INFO:Logistic Regression Imported successfully
2024-04-14 12:20:48,804:INFO:Starting cross validation
2024-04-14 12:20:48,806:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:20:49,141:INFO:Calculating mean and std
2024-04-14 12:20:49,142:INFO:Creating metrics dataframe
2024-04-14 12:20:49,147:INFO:Uploading results into container
2024-04-14 12:20:49,148:INFO:Uploading model into container now
2024-04-14 12:20:49,149:INFO:_master_model_container: 3
2024-04-14 12:20:49,150:INFO:_display_container: 4
2024-04-14 12:20:49,150:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:20:49,150:INFO:create_model() successfully completed......................................
2024-04-14 12:20:49,428:INFO:SubProcess create_model() end ==================================
2024-04-14 12:20:49,429:INFO:Creating metrics dataframe
2024-04-14 12:20:49,447:INFO:Initializing Decision Tree Classifier
2024-04-14 12:20:49,447:INFO:Total runtime is 0.012131130695343018 minutes
2024-04-14 12:20:49,456:INFO:SubProcess create_model() called ==================================
2024-04-14 12:20:49,457:INFO:Initializing create_model()
2024-04-14 12:20:49,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000200AF54F9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:20:49,458:INFO:Checking exceptions
2024-04-14 12:20:49,458:INFO:Importing libraries
2024-04-14 12:20:49,459:INFO:Copying training dataset
2024-04-14 12:20:49,477:INFO:Defining folds
2024-04-14 12:20:49,478:INFO:Declaring metric variables
2024-04-14 12:20:49,484:INFO:Importing untrained model
2024-04-14 12:20:49,494:INFO:Decision Tree Classifier Imported successfully
2024-04-14 12:20:49,512:INFO:Starting cross validation
2024-04-14 12:20:49,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:20:50,068:INFO:Calculating mean and std
2024-04-14 12:20:50,074:INFO:Creating metrics dataframe
2024-04-14 12:20:50,080:INFO:Uploading results into container
2024-04-14 12:20:50,083:INFO:Uploading model into container now
2024-04-14 12:20:50,084:INFO:_master_model_container: 4
2024-04-14 12:20:50,085:INFO:_display_container: 4
2024-04-14 12:20:50,086:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-14 12:20:50,087:INFO:create_model() successfully completed......................................
2024-04-14 12:20:50,272:INFO:SubProcess create_model() end ==================================
2024-04-14 12:20:50,273:INFO:Creating metrics dataframe
2024-04-14 12:20:50,305:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-14 12:20:50,324:INFO:Initializing create_model()
2024-04-14 12:20:50,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:20:50,324:INFO:Checking exceptions
2024-04-14 12:20:50,329:INFO:Importing libraries
2024-04-14 12:20:50,330:INFO:Copying training dataset
2024-04-14 12:20:50,360:INFO:Defining folds
2024-04-14 12:20:50,361:INFO:Declaring metric variables
2024-04-14 12:20:50,362:INFO:Importing untrained model
2024-04-14 12:20:50,362:INFO:Declaring custom model
2024-04-14 12:20:50,367:INFO:Logistic Regression Imported successfully
2024-04-14 12:20:50,369:INFO:Cross validation set to False
2024-04-14 12:20:50,369:INFO:Fitting Model
2024-04-14 12:20:50,432:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:20:50,432:INFO:create_model() successfully completed......................................
2024-04-14 12:20:50,684:INFO:_master_model_container: 4
2024-04-14 12:20:50,684:INFO:_display_container: 4
2024-04-14 12:20:50,685:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:20:50,685:INFO:compare_models() successfully completed......................................
2024-04-14 12:20:50,688:INFO:Initializing tune_model()
2024-04-14 12:20:50,688:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>)
2024-04-14 12:20:50,688:INFO:Checking exceptions
2024-04-14 12:20:50,913:INFO:Copying training dataset
2024-04-14 12:20:50,936:INFO:Checking base model
2024-04-14 12:20:50,938:INFO:Base model : Logistic Regression
2024-04-14 12:20:50,957:INFO:Declaring metric variables
2024-04-14 12:20:50,974:INFO:Defining Hyperparameters
2024-04-14 12:20:51,225:INFO:Tuning with n_jobs=-1
2024-04-14 12:20:51,225:INFO:Initializing RandomizedSearchCV
2024-04-14 12:20:53,944:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 4.947}
2024-04-14 12:20:53,948:INFO:Hyperparameter search completed
2024-04-14 12:20:53,949:INFO:SubProcess create_model() called ==================================
2024-04-14 12:20:53,951:INFO:Initializing create_model()
2024-04-14 12:20:53,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000200AF494970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 4.947})
2024-04-14 12:20:53,951:INFO:Checking exceptions
2024-04-14 12:20:53,952:INFO:Importing libraries
2024-04-14 12:20:53,952:INFO:Copying training dataset
2024-04-14 12:20:53,978:INFO:Defining folds
2024-04-14 12:20:53,979:INFO:Declaring metric variables
2024-04-14 12:20:53,988:INFO:Importing untrained model
2024-04-14 12:20:53,988:INFO:Declaring custom model
2024-04-14 12:20:53,999:INFO:Logistic Regression Imported successfully
2024-04-14 12:20:54,016:INFO:Starting cross validation
2024-04-14 12:20:54,018:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:20:54,481:INFO:Calculating mean and std
2024-04-14 12:20:54,486:INFO:Creating metrics dataframe
2024-04-14 12:20:54,502:INFO:Finalizing model
2024-04-14 12:20:54,612:INFO:Uploading results into container
2024-04-14 12:20:54,614:INFO:Uploading model into container now
2024-04-14 12:20:54,616:INFO:_master_model_container: 5
2024-04-14 12:20:54,616:INFO:_display_container: 5
2024-04-14 12:20:54,618:INFO:LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:20:54,618:INFO:create_model() successfully completed......................................
2024-04-14 12:20:54,856:INFO:SubProcess create_model() end ==================================
2024-04-14 12:20:54,857:INFO:choose_better activated
2024-04-14 12:20:54,879:INFO:SubProcess create_model() called ==================================
2024-04-14 12:20:54,884:INFO:Initializing create_model()
2024-04-14 12:20:54,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 12:20:54,884:INFO:Checking exceptions
2024-04-14 12:20:54,890:INFO:Importing libraries
2024-04-14 12:20:54,891:INFO:Copying training dataset
2024-04-14 12:20:54,912:INFO:Defining folds
2024-04-14 12:20:54,912:INFO:Declaring metric variables
2024-04-14 12:20:54,913:INFO:Importing untrained model
2024-04-14 12:20:54,913:INFO:Declaring custom model
2024-04-14 12:20:54,914:INFO:Logistic Regression Imported successfully
2024-04-14 12:20:54,915:INFO:Starting cross validation
2024-04-14 12:20:54,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 12:20:55,472:INFO:Calculating mean and std
2024-04-14 12:20:55,474:INFO:Creating metrics dataframe
2024-04-14 12:20:55,479:INFO:Finalizing model
2024-04-14 12:20:55,580:INFO:Uploading results into container
2024-04-14 12:20:55,581:INFO:Uploading model into container now
2024-04-14 12:20:55,583:INFO:_master_model_container: 6
2024-04-14 12:20:55,583:INFO:_display_container: 6
2024-04-14 12:20:55,584:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:20:55,584:INFO:create_model() successfully completed......................................
2024-04-14 12:20:55,893:INFO:SubProcess create_model() end ==================================
2024-04-14 12:20:55,894:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5222
2024-04-14 12:20:55,897:INFO:LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.546
2024-04-14 12:20:55,898:INFO:LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-14 12:20:55,899:INFO:choose_better completed
2024-04-14 12:20:55,936:INFO:_master_model_container: 6
2024-04-14 12:20:55,938:INFO:_display_container: 5
2024-04-14 12:20:55,940:INFO:LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 12:20:55,941:INFO:tune_model() successfully completed......................................
2024-04-14 12:20:56,279:INFO:Initializing save_model()
2024-04-14 12:20:56,279:INFO:save_model(model=LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 12:20:56,280:INFO:Adding model into prep_pipe
2024-04-14 12:20:56,312:INFO:modelo_kobe.pkl saved in current working directory
2024-04-14 12:20:56,329:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 LogisticRegression(C=4.947, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=7507, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-14 12:20:56,330:INFO:save_model() successfully completed......................................
2024-04-14 12:20:56,683:INFO:Initializing load_model()
2024-04-14 12:20:56,683:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-14 12:20:56,735:INFO:Initializing predict_model()
2024-04-14 12:20:56,735:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000200AF587B80>)
2024-04-14 12:20:56,735:INFO:Checking exceptions
2024-04-14 12:20:56,735:INFO:Preloading libraries
2024-04-14 12:20:56,745:INFO:Set up data.
2024-04-14 12:20:56,782:INFO:Set up index.
2024-04-14 12:20:57,400:INFO:Initializing predict_model()
2024-04-14 12:20:57,400:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000200AA8745B0>, estimator=LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000200AF587B80>)
2024-04-14 12:20:57,400:INFO:Checking exceptions
2024-04-14 12:20:57,400:INFO:Preloading libraries
2024-04-14 12:20:57,406:INFO:Set up data.
2024-04-14 12:20:57,419:INFO:Set up index.
2024-04-14 12:20:59,243:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-14 12:21:14,107:WARNING:C:\Users\gabri\AppData\Local\Temp\ipykernel_16012\241547523.py:133: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions('modelo_kobe')[-1].version

2024-04-14 12:25:37,458:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:25:37,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:25:37,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:25:37,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:28:38,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:28:38,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:28:38,345:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:28:38,345:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:29:24,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:29:24,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:29:24,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:29:24,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:32:28,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:32:28,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:32:28,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:32:28,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:32:34,216:INFO:PyCaret ClassificationExperiment
2024-04-14 12:32:34,216:INFO:Logging name: clf-default-name
2024-04-14 12:32:34,217:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 12:32:34,218:INFO:version 3.3.0
2024-04-14 12:32:34,218:INFO:Initializing setup()
2024-04-14 12:32:34,218:INFO:self.USI: 18f3
2024-04-14 12:32:34,218:INFO:self._variable_keys: {'_ml_usecase', 'n_jobs_param', 'fold_shuffle_param', 'fold_generator', '_available_plots', 'X', 'is_multiclass', 'logging_param', 'fix_imbalance', 'data', 'y', 'html_param', 'target_param', 'gpu_n_jobs_param', 'USI', 'exp_name_log', 'idx', 'memory', 'pipeline', 'exp_id', 'X_train', 'y_train', 'fold_groups_param', 'X_test', 'seed', 'y_test', 'log_plots_param', 'gpu_param'}
2024-04-14 12:32:34,219:INFO:Checking environment
2024-04-14 12:32:34,219:INFO:python_version: 3.9.5
2024-04-14 12:32:34,219:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 12:32:34,220:INFO:machine: AMD64
2024-04-14 12:32:34,262:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 12:32:34,270:INFO:Memory: svmem(total=6312697856, available=983937024, percent=84.4, used=5328760832, free=983937024)
2024-04-14 12:32:34,271:INFO:Physical Core: 4
2024-04-14 12:32:34,271:INFO:Logical Core: 8
2024-04-14 12:32:34,271:INFO:Checking libraries
2024-04-14 12:32:34,272:INFO:System:
2024-04-14 12:32:34,272:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 12:32:34,272:INFO:executable: C:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 12:32:34,272:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 12:32:34,272:INFO:PyCaret required dependencies:
2024-04-14 12:32:34,586:INFO:                 pip: 24.0
2024-04-14 12:32:34,586:INFO:          setuptools: 56.0.0
2024-04-14 12:32:34,586:INFO:             pycaret: 3.3.0
2024-04-14 12:32:34,586:INFO:             IPython: 8.6.0
2024-04-14 12:32:34,586:INFO:          ipywidgets: 8.1.2
2024-04-14 12:32:34,586:INFO:                tqdm: 4.66.2
2024-04-14 12:32:34,587:INFO:               numpy: 1.24.4
2024-04-14 12:32:34,587:INFO:              pandas: 2.1.4
2024-04-14 12:32:34,587:INFO:              jinja2: 3.1.2
2024-04-14 12:32:34,587:INFO:               scipy: 1.9.0
2024-04-14 12:32:34,587:INFO:              joblib: 1.3.2
2024-04-14 12:32:34,587:INFO:             sklearn: 1.4.1.post1
2024-04-14 12:32:34,587:INFO:                pyod: 1.1.3
2024-04-14 12:32:34,587:INFO:            imblearn: 0.12.2
2024-04-14 12:32:34,587:INFO:   category_encoders: 2.6.3
2024-04-14 12:32:34,587:INFO:            lightgbm: 4.3.0
2024-04-14 12:32:34,587:INFO:               numba: 0.59.1
2024-04-14 12:32:34,588:INFO:            requests: 2.31.0
2024-04-14 12:32:34,588:INFO:          matplotlib: 3.5.3
2024-04-14 12:32:34,588:INFO:          scikitplot: 0.3.7
2024-04-14 12:32:34,588:INFO:         yellowbrick: 1.5
2024-04-14 12:32:34,588:INFO:              plotly: 5.15.0
2024-04-14 12:32:34,588:INFO:    plotly-resampler: Not installed
2024-04-14 12:32:34,588:INFO:             kaleido: 0.2.1
2024-04-14 12:32:34,588:INFO:           schemdraw: 0.15
2024-04-14 12:32:34,588:INFO:         statsmodels: 0.14.1
2024-04-14 12:32:34,588:INFO:              sktime: 0.28.0
2024-04-14 12:32:34,588:INFO:               tbats: 1.1.3
2024-04-14 12:32:34,588:INFO:            pmdarima: 2.0.4
2024-04-14 12:32:34,588:INFO:              psutil: 5.9.4
2024-04-14 12:32:34,588:INFO:          markupsafe: 2.1.1
2024-04-14 12:32:34,589:INFO:             pickle5: Not installed
2024-04-14 12:32:34,589:INFO:         cloudpickle: 3.0.0
2024-04-14 12:32:34,589:INFO:         deprecation: 2.1.0
2024-04-14 12:32:34,589:INFO:              xxhash: 3.4.1
2024-04-14 12:32:34,589:INFO:           wurlitzer: Not installed
2024-04-14 12:32:34,589:INFO:PyCaret optional dependencies:
2024-04-14 12:32:34,614:INFO:                shap: 0.45.0
2024-04-14 12:32:34,615:INFO:           interpret: 0.6.0
2024-04-14 12:32:34,615:INFO:                umap: 0.5.6
2024-04-14 12:32:34,615:INFO:     ydata_profiling: 4.7.0
2024-04-14 12:32:34,615:INFO:  explainerdashboard: 0.4.7
2024-04-14 12:32:34,615:INFO:             autoviz: Not installed
2024-04-14 12:32:34,615:INFO:           fairlearn: 0.7.0
2024-04-14 12:32:34,615:INFO:          deepchecks: Not installed
2024-04-14 12:32:34,615:INFO:             xgboost: Not installed
2024-04-14 12:32:34,615:INFO:            catboost: Not installed
2024-04-14 12:32:34,615:INFO:              kmodes: Not installed
2024-04-14 12:32:34,615:INFO:             mlxtend: Not installed
2024-04-14 12:32:34,616:INFO:       statsforecast: Not installed
2024-04-14 12:32:34,616:INFO:        tune_sklearn: Not installed
2024-04-14 12:32:34,616:INFO:                 ray: Not installed
2024-04-14 12:32:34,616:INFO:            hyperopt: Not installed
2024-04-14 12:32:34,616:INFO:              optuna: Not installed
2024-04-14 12:32:34,616:INFO:               skopt: Not installed
2024-04-14 12:32:34,616:INFO:              mlflow: 2.11.3
2024-04-14 12:32:34,616:INFO:              gradio: Not installed
2024-04-14 12:32:34,616:INFO:             fastapi: Not installed
2024-04-14 12:32:34,616:INFO:             uvicorn: Not installed
2024-04-14 12:32:34,616:INFO:              m2cgen: Not installed
2024-04-14 12:32:34,617:INFO:           evidently: Not installed
2024-04-14 12:32:34,617:INFO:               fugue: Not installed
2024-04-14 12:32:34,617:INFO:           streamlit: 1.23.1
2024-04-14 12:32:34,617:INFO:             prophet: Not installed
2024-04-14 12:32:34,617:INFO:None
2024-04-14 12:32:34,617:INFO:Set up data.
2024-04-14 12:32:34,636:INFO:Set up folding strategy.
2024-04-14 12:32:34,636:INFO:Set up train/test split.
2024-04-14 12:32:34,652:INFO:Set up index.
2024-04-14 12:32:34,653:INFO:Assigning column types.
2024-04-14 12:32:34,664:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 12:32:34,759:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:32:34,767:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:32:34,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:34,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:34,944:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:32:34,945:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:32:34,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:34,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:34,993:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 12:32:35,068:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:32:35,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,180:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:32:35,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,227:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 12:32:35,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,468:INFO:Preparing preprocessing pipeline...
2024-04-14 12:32:35,536:INFO:Set up simple imputation.
2024-04-14 12:32:35,591:INFO:Finished creating preprocessing pipeline.
2024-04-14 12:32:35,599:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 12:32:35,599:INFO:Creating final display dataframe.
2024-04-14 12:32:35,725:INFO:Setup _display_container:                     Description             Value
0                    Session id              5083
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape         (5412, 7)
4        Transformed data shape         (5412, 7)
5   Transformed train set shape         (3788, 7)
6    Transformed test set shape         (1624, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              18f3
2024-04-14 12:32:35,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:35,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:36,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:36,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:32:36,079:WARNING:C:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 12:32:36,081:INFO:setup() successfully completed in 1.88s...............
2024-04-14 12:32:36,276:INFO:Initializing predict_model()
2024-04-14 12:32:36,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002505FAF8A60>, estimator=LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000250602A51F0>)
2024-04-14 12:32:36,285:INFO:Checking exceptions
2024-04-14 12:32:36,285:INFO:Preloading libraries
2024-04-14 12:32:36,286:INFO:Set up data.
2024-04-14 12:32:36,289:INFO:Set up index.
2024-04-14 12:34:56,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:34:56,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:34:56,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:34:56,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 12:34:57,619:INFO:PyCaret ClassificationExperiment
2024-04-14 12:34:57,620:INFO:Logging name: clf-default-name
2024-04-14 12:34:57,620:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 12:34:57,621:INFO:version 3.3.0
2024-04-14 12:34:57,621:INFO:Initializing setup()
2024-04-14 12:34:57,622:INFO:self.USI: b7c0
2024-04-14 12:34:57,622:INFO:self._variable_keys: {'memory', 'data', 'pipeline', 'X', 'USI', 'fix_imbalance', 'gpu_param', 'html_param', 'y_train', 'target_param', 'seed', 'n_jobs_param', 'fold_shuffle_param', 'y', '_ml_usecase', 'gpu_n_jobs_param', 'log_plots_param', 'X_train', '_available_plots', 'idx', 'y_test', 'is_multiclass', 'exp_name_log', 'fold_groups_param', 'fold_generator', 'exp_id', 'logging_param', 'X_test'}
2024-04-14 12:34:57,622:INFO:Checking environment
2024-04-14 12:34:57,622:INFO:python_version: 3.9.5
2024-04-14 12:34:57,623:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 12:34:57,623:INFO:machine: AMD64
2024-04-14 12:34:57,653:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 12:34:57,663:INFO:Memory: svmem(total=6312697856, available=869175296, percent=86.2, used=5443522560, free=869175296)
2024-04-14 12:34:57,663:INFO:Physical Core: 4
2024-04-14 12:34:57,664:INFO:Logical Core: 8
2024-04-14 12:34:57,664:INFO:Checking libraries
2024-04-14 12:34:57,664:INFO:System:
2024-04-14 12:34:57,665:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 12:34:57,665:INFO:executable: C:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 12:34:57,665:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 12:34:57,666:INFO:PyCaret required dependencies:
2024-04-14 12:34:57,819:INFO:                 pip: 24.0
2024-04-14 12:34:57,819:INFO:          setuptools: 56.0.0
2024-04-14 12:34:57,819:INFO:             pycaret: 3.3.0
2024-04-14 12:34:57,820:INFO:             IPython: 8.6.0
2024-04-14 12:34:57,820:INFO:          ipywidgets: 8.1.2
2024-04-14 12:34:57,820:INFO:                tqdm: 4.66.2
2024-04-14 12:34:57,820:INFO:               numpy: 1.24.4
2024-04-14 12:34:57,820:INFO:              pandas: 2.1.4
2024-04-14 12:34:57,821:INFO:              jinja2: 3.1.2
2024-04-14 12:34:57,821:INFO:               scipy: 1.9.0
2024-04-14 12:34:57,821:INFO:              joblib: 1.3.2
2024-04-14 12:34:57,821:INFO:             sklearn: 1.4.1.post1
2024-04-14 12:34:57,821:INFO:                pyod: 1.1.3
2024-04-14 12:34:57,822:INFO:            imblearn: 0.12.2
2024-04-14 12:34:57,822:INFO:   category_encoders: 2.6.3
2024-04-14 12:34:57,822:INFO:            lightgbm: 4.3.0
2024-04-14 12:34:57,822:INFO:               numba: 0.59.1
2024-04-14 12:34:57,822:INFO:            requests: 2.31.0
2024-04-14 12:34:57,823:INFO:          matplotlib: 3.5.3
2024-04-14 12:34:57,823:INFO:          scikitplot: 0.3.7
2024-04-14 12:34:57,823:INFO:         yellowbrick: 1.5
2024-04-14 12:34:57,823:INFO:              plotly: 5.15.0
2024-04-14 12:34:57,823:INFO:    plotly-resampler: Not installed
2024-04-14 12:34:57,823:INFO:             kaleido: 0.2.1
2024-04-14 12:34:57,823:INFO:           schemdraw: 0.15
2024-04-14 12:34:57,823:INFO:         statsmodels: 0.14.1
2024-04-14 12:34:57,823:INFO:              sktime: 0.28.0
2024-04-14 12:34:57,823:INFO:               tbats: 1.1.3
2024-04-14 12:34:57,823:INFO:            pmdarima: 2.0.4
2024-04-14 12:34:57,823:INFO:              psutil: 5.9.4
2024-04-14 12:34:57,823:INFO:          markupsafe: 2.1.1
2024-04-14 12:34:57,823:INFO:             pickle5: Not installed
2024-04-14 12:34:57,823:INFO:         cloudpickle: 3.0.0
2024-04-14 12:34:57,823:INFO:         deprecation: 2.1.0
2024-04-14 12:34:57,823:INFO:              xxhash: 3.4.1
2024-04-14 12:34:57,823:INFO:           wurlitzer: Not installed
2024-04-14 12:34:57,823:INFO:PyCaret optional dependencies:
2024-04-14 12:34:57,838:INFO:                shap: 0.45.0
2024-04-14 12:34:57,838:INFO:           interpret: 0.6.0
2024-04-14 12:34:57,838:INFO:                umap: 0.5.6
2024-04-14 12:34:57,838:INFO:     ydata_profiling: 4.7.0
2024-04-14 12:34:57,838:INFO:  explainerdashboard: 0.4.7
2024-04-14 12:34:57,838:INFO:             autoviz: Not installed
2024-04-14 12:34:57,838:INFO:           fairlearn: 0.7.0
2024-04-14 12:34:57,838:INFO:          deepchecks: Not installed
2024-04-14 12:34:57,838:INFO:             xgboost: Not installed
2024-04-14 12:34:57,839:INFO:            catboost: Not installed
2024-04-14 12:34:57,839:INFO:              kmodes: Not installed
2024-04-14 12:34:57,839:INFO:             mlxtend: Not installed
2024-04-14 12:34:57,839:INFO:       statsforecast: Not installed
2024-04-14 12:34:57,839:INFO:        tune_sklearn: Not installed
2024-04-14 12:34:57,839:INFO:                 ray: Not installed
2024-04-14 12:34:57,839:INFO:            hyperopt: Not installed
2024-04-14 12:34:57,839:INFO:              optuna: Not installed
2024-04-14 12:34:57,839:INFO:               skopt: Not installed
2024-04-14 12:34:57,839:INFO:              mlflow: 2.11.3
2024-04-14 12:34:57,839:INFO:              gradio: Not installed
2024-04-14 12:34:57,839:INFO:             fastapi: Not installed
2024-04-14 12:34:57,839:INFO:             uvicorn: Not installed
2024-04-14 12:34:57,839:INFO:              m2cgen: Not installed
2024-04-14 12:34:57,839:INFO:           evidently: Not installed
2024-04-14 12:34:57,839:INFO:               fugue: Not installed
2024-04-14 12:34:57,839:INFO:           streamlit: 1.23.1
2024-04-14 12:34:57,839:INFO:             prophet: Not installed
2024-04-14 12:34:57,840:INFO:None
2024-04-14 12:34:57,840:INFO:Set up data.
2024-04-14 12:34:57,854:INFO:Set up folding strategy.
2024-04-14 12:34:57,854:INFO:Set up train/test split.
2024-04-14 12:34:57,865:INFO:Set up index.
2024-04-14 12:34:57,865:INFO:Assigning column types.
2024-04-14 12:34:57,875:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 12:34:57,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:34:57,952:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:34:58,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,085:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 12:34:58,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:34:58,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,134:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 12:34:58,204:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:34:58,254:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,335:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 12:34:58,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,385:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 12:34:58,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,628:INFO:Preparing preprocessing pipeline...
2024-04-14 12:34:58,631:INFO:Set up simple imputation.
2024-04-14 12:34:58,665:INFO:Finished creating preprocessing pipeline.
2024-04-14 12:34:58,671:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 12:34:58,671:INFO:Creating final display dataframe.
2024-04-14 12:34:58,804:INFO:Setup _display_container:                     Description             Value
0                    Session id              4203
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape         (5412, 7)
4        Transformed data shape         (5412, 7)
5   Transformed train set shape         (3788, 7)
6    Transformed test set shape         (1624, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              b7c0
2024-04-14 12:34:58,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:58,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:59,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:59,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 12:34:59,106:WARNING:C:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 12:34:59,108:INFO:setup() successfully completed in 1.5s...............
2024-04-14 12:34:59,137:INFO:Initializing predict_model()
2024-04-14 12:34:59,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D7DF128A60>, estimator=LogisticRegression(C=4.947, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D7DF4911F0>)
2024-04-14 12:34:59,138:INFO:Checking exceptions
2024-04-14 12:34:59,138:INFO:Preloading libraries
2024-04-14 12:34:59,138:INFO:Set up data.
2024-04-14 12:34:59,145:INFO:Set up index.
2024-04-14 13:10:09,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:10:09,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:10:09,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:10:09,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:10:13,330:INFO:PyCaret ClassificationExperiment
2024-04-14 13:10:13,331:INFO:Logging name: clf-default-name
2024-04-14 13:10:13,331:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 13:10:13,331:INFO:version 3.3.0
2024-04-14 13:10:13,331:INFO:Initializing setup()
2024-04-14 13:10:13,331:INFO:self.USI: 40a4
2024-04-14 13:10:13,331:INFO:self._variable_keys: {'USI', 'seed', 'idx', 'exp_id', 'y', 'fold_generator', 'exp_name_log', 'fold_groups_param', 'gpu_n_jobs_param', 'logging_param', 'pipeline', '_ml_usecase', 'X_train', 'X_test', 'gpu_param', 'y_test', 'n_jobs_param', 'fold_shuffle_param', 'fix_imbalance', 'data', '_available_plots', 'X', 'target_param', 'y_train', 'memory', 'log_plots_param', 'is_multiclass', 'html_param'}
2024-04-14 13:10:13,332:INFO:Checking environment
2024-04-14 13:10:13,332:INFO:python_version: 3.9.5
2024-04-14 13:10:13,332:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 13:10:13,332:INFO:machine: AMD64
2024-04-14 13:10:13,332:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 13:10:13,346:INFO:Memory: svmem(total=6312697856, available=272834560, percent=95.7, used=6039863296, free=272834560)
2024-04-14 13:10:13,347:INFO:Physical Core: 4
2024-04-14 13:10:13,347:INFO:Logical Core: 8
2024-04-14 13:10:13,347:INFO:Checking libraries
2024-04-14 13:10:13,347:INFO:System:
2024-04-14 13:10:13,347:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 13:10:13,347:INFO:executable: c:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 13:10:13,348:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 13:10:13,348:INFO:PyCaret required dependencies:
2024-04-14 13:10:13,623:INFO:                 pip: 24.0
2024-04-14 13:10:13,624:INFO:          setuptools: 56.0.0
2024-04-14 13:10:13,624:INFO:             pycaret: 3.3.0
2024-04-14 13:10:13,624:INFO:             IPython: 8.6.0
2024-04-14 13:10:13,624:INFO:          ipywidgets: 8.1.2
2024-04-14 13:10:13,624:INFO:                tqdm: 4.66.2
2024-04-14 13:10:13,624:INFO:               numpy: 1.24.4
2024-04-14 13:10:13,624:INFO:              pandas: 2.1.4
2024-04-14 13:10:13,624:INFO:              jinja2: 3.1.2
2024-04-14 13:10:13,624:INFO:               scipy: 1.9.0
2024-04-14 13:10:13,625:INFO:              joblib: 1.3.2
2024-04-14 13:10:13,625:INFO:             sklearn: 1.4.1.post1
2024-04-14 13:10:13,625:INFO:                pyod: 1.1.3
2024-04-14 13:10:13,625:INFO:            imblearn: 0.12.2
2024-04-14 13:10:13,625:INFO:   category_encoders: 2.6.3
2024-04-14 13:10:13,625:INFO:            lightgbm: 4.3.0
2024-04-14 13:10:13,625:INFO:               numba: 0.59.1
2024-04-14 13:10:13,626:INFO:            requests: 2.31.0
2024-04-14 13:10:13,626:INFO:          matplotlib: 3.5.3
2024-04-14 13:10:13,626:INFO:          scikitplot: 0.3.7
2024-04-14 13:10:13,626:INFO:         yellowbrick: 1.5
2024-04-14 13:10:13,626:INFO:              plotly: 5.15.0
2024-04-14 13:10:13,626:INFO:    plotly-resampler: Not installed
2024-04-14 13:10:13,626:INFO:             kaleido: 0.2.1
2024-04-14 13:10:13,626:INFO:           schemdraw: 0.15
2024-04-14 13:10:13,626:INFO:         statsmodels: 0.14.1
2024-04-14 13:10:13,627:INFO:              sktime: 0.28.0
2024-04-14 13:10:13,627:INFO:               tbats: 1.1.3
2024-04-14 13:10:13,627:INFO:            pmdarima: 2.0.4
2024-04-14 13:10:13,627:INFO:              psutil: 5.9.4
2024-04-14 13:10:13,627:INFO:          markupsafe: 2.1.1
2024-04-14 13:10:13,627:INFO:             pickle5: Not installed
2024-04-14 13:10:13,627:INFO:         cloudpickle: 3.0.0
2024-04-14 13:10:13,628:INFO:         deprecation: 2.1.0
2024-04-14 13:10:13,628:INFO:              xxhash: 3.4.1
2024-04-14 13:10:13,628:INFO:           wurlitzer: Not installed
2024-04-14 13:10:13,628:INFO:PyCaret optional dependencies:
2024-04-14 13:10:13,660:INFO:                shap: 0.45.0
2024-04-14 13:10:13,660:INFO:           interpret: 0.6.0
2024-04-14 13:10:13,660:INFO:                umap: 0.5.6
2024-04-14 13:10:13,661:INFO:     ydata_profiling: 4.7.0
2024-04-14 13:10:13,661:INFO:  explainerdashboard: 0.4.7
2024-04-14 13:10:13,661:INFO:             autoviz: Not installed
2024-04-14 13:10:13,661:INFO:           fairlearn: 0.7.0
2024-04-14 13:10:13,661:INFO:          deepchecks: Not installed
2024-04-14 13:10:13,661:INFO:             xgboost: Not installed
2024-04-14 13:10:13,661:INFO:            catboost: Not installed
2024-04-14 13:10:13,661:INFO:              kmodes: Not installed
2024-04-14 13:10:13,661:INFO:             mlxtend: Not installed
2024-04-14 13:10:13,662:INFO:       statsforecast: Not installed
2024-04-14 13:10:13,662:INFO:        tune_sklearn: Not installed
2024-04-14 13:10:13,662:INFO:                 ray: Not installed
2024-04-14 13:10:13,662:INFO:            hyperopt: Not installed
2024-04-14 13:10:13,662:INFO:              optuna: Not installed
2024-04-14 13:10:13,662:INFO:               skopt: Not installed
2024-04-14 13:10:13,662:INFO:              mlflow: 2.11.3
2024-04-14 13:10:13,662:INFO:              gradio: Not installed
2024-04-14 13:10:13,662:INFO:             fastapi: Not installed
2024-04-14 13:10:13,662:INFO:             uvicorn: Not installed
2024-04-14 13:10:13,662:INFO:              m2cgen: Not installed
2024-04-14 13:10:13,662:INFO:           evidently: Not installed
2024-04-14 13:10:13,662:INFO:               fugue: Not installed
2024-04-14 13:10:13,662:INFO:           streamlit: 1.23.1
2024-04-14 13:10:13,662:INFO:             prophet: Not installed
2024-04-14 13:10:13,662:INFO:None
2024-04-14 13:10:13,664:INFO:Set up data.
2024-04-14 13:10:13,697:INFO:Set up folding strategy.
2024-04-14 13:10:13,697:INFO:Set up train/test split.
2024-04-14 13:10:13,698:INFO:Set up data.
2024-04-14 13:10:13,713:INFO:Set up index.
2024-04-14 13:10:13,714:INFO:Assigning column types.
2024-04-14 13:10:13,738:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 13:10:13,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 13:10:13,877:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:10:13,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:13,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 13:10:14,122:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:10:14,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,195:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 13:10:14,349:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:10:14,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:10:14,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,661:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 13:10:14,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:14,985:INFO:Preparing preprocessing pipeline...
2024-04-14 13:10:14,988:INFO:Set up simple imputation.
2024-04-14 13:10:14,989:INFO:Set up feature normalization.
2024-04-14 13:10:15,058:INFO:Finished creating preprocessing pipeline.
2024-04-14 13:10:15,069:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 13:10:15,070:INFO:Creating final display dataframe.
2024-04-14 13:10:15,272:INFO:Setup _display_container:                     Description             Value
0                    Session id              8797
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              40a4
2024-04-14 13:10:15,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:15,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:15,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:15,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:10:15,862:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 13:10:15,865:INFO:setup() successfully completed in 2.56s...............
2024-04-14 13:10:15,865:INFO:Initializing create_model()
2024-04-14 13:10:15,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 13:10:15,865:INFO:Checking exceptions
2024-04-14 13:10:15,979:INFO:Importing libraries
2024-04-14 13:10:15,979:INFO:Copying training dataset
2024-04-14 13:10:16,008:INFO:Defining folds
2024-04-14 13:10:16,008:INFO:Declaring metric variables
2024-04-14 13:10:16,024:INFO:Importing untrained model
2024-04-14 13:10:16,037:INFO:Logistic Regression Imported successfully
2024-04-14 13:10:16,071:INFO:Starting cross validation
2024-04-14 13:10:16,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 13:10:31,348:INFO:Calculating mean and std
2024-04-14 13:10:31,352:INFO:Creating metrics dataframe
2024-04-14 13:10:31,368:INFO:Finalizing model
2024-04-14 13:10:31,437:INFO:Uploading results into container
2024-04-14 13:10:31,439:INFO:Uploading model into container now
2024-04-14 13:10:31,459:INFO:_master_model_container: 1
2024-04-14 13:10:31,459:INFO:_display_container: 2
2024-04-14 13:10:31,460:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 13:10:31,461:INFO:create_model() successfully completed......................................
2024-04-14 13:10:31,716:INFO:Initializing create_model()
2024-04-14 13:10:31,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 13:10:31,716:INFO:Checking exceptions
2024-04-14 13:10:31,783:INFO:Importing libraries
2024-04-14 13:10:31,783:INFO:Copying training dataset
2024-04-14 13:10:31,816:INFO:Defining folds
2024-04-14 13:10:31,816:INFO:Declaring metric variables
2024-04-14 13:10:31,826:INFO:Importing untrained model
2024-04-14 13:10:31,841:INFO:Decision Tree Classifier Imported successfully
2024-04-14 13:10:31,870:INFO:Starting cross validation
2024-04-14 13:10:31,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 13:10:32,424:INFO:Calculating mean and std
2024-04-14 13:10:32,425:INFO:Creating metrics dataframe
2024-04-14 13:10:32,437:INFO:Finalizing model
2024-04-14 13:10:32,567:INFO:Uploading results into container
2024-04-14 13:10:32,568:INFO:Uploading model into container now
2024-04-14 13:10:32,587:INFO:_master_model_container: 2
2024-04-14 13:10:32,587:INFO:_display_container: 3
2024-04-14 13:10:32,588:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8797, splitter='best')
2024-04-14 13:10:32,588:INFO:create_model() successfully completed......................................
2024-04-14 13:10:32,722:INFO:Initializing predict_model()
2024-04-14 13:10:32,723:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002732A5F9A60>)
2024-04-14 13:10:32,723:INFO:Checking exceptions
2024-04-14 13:10:32,723:INFO:Preloading libraries
2024-04-14 13:10:32,726:INFO:Set up data.
2024-04-14 13:10:32,732:INFO:Set up index.
2024-04-14 13:10:32,929:INFO:Initializing predict_model()
2024-04-14 13:10:32,929:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8797, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002732A5F9A60>)
2024-04-14 13:10:32,929:INFO:Checking exceptions
2024-04-14 13:10:32,929:INFO:Preloading libraries
2024-04-14 13:10:32,932:INFO:Set up data.
2024-04-14 13:10:32,939:INFO:Set up index.
2024-04-14 13:10:49,422:INFO:Initializing predict_model()
2024-04-14 13:10:49,423:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8797, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002732F545AF0>)
2024-04-14 13:10:49,423:INFO:Checking exceptions
2024-04-14 13:10:49,423:INFO:Preloading libraries
2024-04-14 13:10:49,430:INFO:Set up data.
2024-04-14 13:10:49,437:INFO:Set up index.
2024-04-14 13:10:49,749:INFO:Initializing predict_model()
2024-04-14 13:10:49,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002732F4EE670>)
2024-04-14 13:10:49,749:INFO:Checking exceptions
2024-04-14 13:10:49,749:INFO:Preloading libraries
2024-04-14 13:10:49,754:INFO:Set up data.
2024-04-14 13:10:49,761:INFO:Set up index.
2024-04-14 13:10:50,496:INFO:Initializing plot_model()
2024-04-14 13:10:50,496:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, system=True)
2024-04-14 13:10:50,497:INFO:Checking exceptions
2024-04-14 13:10:50,530:INFO:Preloading libraries
2024-04-14 13:10:50,531:INFO:Copying training dataset
2024-04-14 13:10:50,531:INFO:Plot type: auc
2024-04-14 13:10:50,805:INFO:Fitting Model
2024-04-14 13:10:50,809:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-14 13:10:50,810:INFO:Scoring test/hold-out set
2024-04-14 13:10:50,856:INFO:Saving 'AUC.png'
2024-04-14 13:10:52,247:INFO:Visual Rendered Successfully
2024-04-14 13:10:52,455:INFO:plot_model() successfully completed......................................
2024-04-14 13:10:52,459:INFO:Initializing plot_model()
2024-04-14 13:10:52,459:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8797, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, system=True)
2024-04-14 13:10:52,460:INFO:Checking exceptions
2024-04-14 13:10:52,474:INFO:Preloading libraries
2024-04-14 13:10:52,476:INFO:Copying training dataset
2024-04-14 13:10:52,477:INFO:Plot type: auc
2024-04-14 13:10:52,708:INFO:Fitting Model
2024-04-14 13:10:52,710:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 13:10:52,711:INFO:Scoring test/hold-out set
2024-04-14 13:10:52,750:INFO:Saving 'AUC.png'
2024-04-14 13:10:53,216:INFO:Visual Rendered Successfully
2024-04-14 13:10:53,403:INFO:plot_model() successfully completed......................................
2024-04-14 13:10:53,408:INFO:Initializing compare_models()
2024-04-14 13:10:53,408:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-14 13:10:53,408:INFO:Checking exceptions
2024-04-14 13:10:53,427:INFO:Preparing display monitor
2024-04-14 13:10:53,636:INFO:Initializing Logistic Regression
2024-04-14 13:10:53,636:INFO:Total runtime is 0.0 minutes
2024-04-14 13:10:53,652:INFO:SubProcess create_model() called ==================================
2024-04-14 13:10:53,655:INFO:Initializing create_model()
2024-04-14 13:10:53,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002732F572F40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 13:10:53,656:INFO:Checking exceptions
2024-04-14 13:10:53,656:INFO:Importing libraries
2024-04-14 13:10:53,656:INFO:Copying training dataset
2024-04-14 13:10:53,682:INFO:Defining folds
2024-04-14 13:10:53,682:INFO:Declaring metric variables
2024-04-14 13:10:53,697:INFO:Importing untrained model
2024-04-14 13:10:53,712:INFO:Logistic Regression Imported successfully
2024-04-14 13:10:53,742:INFO:Starting cross validation
2024-04-14 13:10:53,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 13:10:54,110:INFO:Calculating mean and std
2024-04-14 13:10:54,112:INFO:Creating metrics dataframe
2024-04-14 13:10:54,118:INFO:Uploading results into container
2024-04-14 13:10:54,122:INFO:Uploading model into container now
2024-04-14 13:10:54,123:INFO:_master_model_container: 3
2024-04-14 13:10:54,123:INFO:_display_container: 4
2024-04-14 13:10:54,125:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 13:10:54,125:INFO:create_model() successfully completed......................................
2024-04-14 13:10:54,356:INFO:SubProcess create_model() end ==================================
2024-04-14 13:10:54,356:INFO:Creating metrics dataframe
2024-04-14 13:10:54,397:INFO:Initializing Decision Tree Classifier
2024-04-14 13:10:54,397:INFO:Total runtime is 0.01269385814666748 minutes
2024-04-14 13:10:54,412:INFO:SubProcess create_model() called ==================================
2024-04-14 13:10:54,413:INFO:Initializing create_model()
2024-04-14 13:10:54,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002732F572F40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 13:10:54,414:INFO:Checking exceptions
2024-04-14 13:10:54,414:INFO:Importing libraries
2024-04-14 13:10:54,415:INFO:Copying training dataset
2024-04-14 13:10:54,451:INFO:Defining folds
2024-04-14 13:10:54,451:INFO:Declaring metric variables
2024-04-14 13:10:54,467:INFO:Importing untrained model
2024-04-14 13:10:54,485:INFO:Decision Tree Classifier Imported successfully
2024-04-14 13:10:54,512:INFO:Starting cross validation
2024-04-14 13:10:54,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 13:10:55,088:INFO:Calculating mean and std
2024-04-14 13:10:55,094:INFO:Creating metrics dataframe
2024-04-14 13:10:55,103:INFO:Uploading results into container
2024-04-14 13:10:55,104:INFO:Uploading model into container now
2024-04-14 13:10:55,105:INFO:_master_model_container: 4
2024-04-14 13:10:55,106:INFO:_display_container: 4
2024-04-14 13:10:55,106:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8797, splitter='best')
2024-04-14 13:10:55,107:INFO:create_model() successfully completed......................................
2024-04-14 13:10:55,344:INFO:SubProcess create_model() end ==================================
2024-04-14 13:10:55,344:INFO:Creating metrics dataframe
2024-04-14 13:10:55,384:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-14 13:10:55,417:INFO:Initializing create_model()
2024-04-14 13:10:55,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 13:10:55,417:INFO:Checking exceptions
2024-04-14 13:10:55,422:INFO:Importing libraries
2024-04-14 13:10:55,422:INFO:Copying training dataset
2024-04-14 13:10:55,450:INFO:Defining folds
2024-04-14 13:10:55,451:INFO:Declaring metric variables
2024-04-14 13:10:55,451:INFO:Importing untrained model
2024-04-14 13:10:55,452:INFO:Declaring custom model
2024-04-14 13:10:55,455:INFO:Logistic Regression Imported successfully
2024-04-14 13:10:55,458:INFO:Cross validation set to False
2024-04-14 13:10:55,458:INFO:Fitting Model
2024-04-14 13:10:55,517:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 13:10:55,517:INFO:create_model() successfully completed......................................
2024-04-14 13:10:55,823:INFO:_master_model_container: 4
2024-04-14 13:10:55,824:INFO:_display_container: 4
2024-04-14 13:10:55,824:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 13:10:55,825:INFO:compare_models() successfully completed......................................
2024-04-14 13:10:55,827:INFO:Initializing tune_model()
2024-04-14 13:10:55,827:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>)
2024-04-14 13:10:55,827:INFO:Checking exceptions
2024-04-14 13:10:55,931:INFO:Copying training dataset
2024-04-14 13:10:55,955:INFO:Checking base model
2024-04-14 13:10:55,956:INFO:Base model : Logistic Regression
2024-04-14 13:10:55,965:INFO:Declaring metric variables
2024-04-14 13:10:55,981:INFO:Defining Hyperparameters
2024-04-14 13:10:56,203:INFO:Tuning with n_jobs=-1
2024-04-14 13:10:56,204:INFO:Initializing RandomizedSearchCV
2024-04-14 13:10:58,288:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 1.301}
2024-04-14 13:10:58,292:INFO:Hyperparameter search completed
2024-04-14 13:10:58,292:INFO:SubProcess create_model() called ==================================
2024-04-14 13:10:58,293:INFO:Initializing create_model()
2024-04-14 13:10:58,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002732F591DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 1.301})
2024-04-14 13:10:58,294:INFO:Checking exceptions
2024-04-14 13:10:58,294:INFO:Importing libraries
2024-04-14 13:10:58,296:INFO:Copying training dataset
2024-04-14 13:10:58,320:INFO:Defining folds
2024-04-14 13:10:58,321:INFO:Declaring metric variables
2024-04-14 13:10:58,329:INFO:Importing untrained model
2024-04-14 13:10:58,330:INFO:Declaring custom model
2024-04-14 13:10:58,339:INFO:Logistic Regression Imported successfully
2024-04-14 13:10:58,356:INFO:Starting cross validation
2024-04-14 13:10:58,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 13:10:58,797:INFO:Calculating mean and std
2024-04-14 13:10:58,802:INFO:Creating metrics dataframe
2024-04-14 13:10:58,817:INFO:Finalizing model
2024-04-14 13:10:58,893:INFO:Uploading results into container
2024-04-14 13:10:58,895:INFO:Uploading model into container now
2024-04-14 13:10:58,896:INFO:_master_model_container: 5
2024-04-14 13:10:58,897:INFO:_display_container: 5
2024-04-14 13:10:58,899:INFO:LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 13:10:58,899:INFO:create_model() successfully completed......................................
2024-04-14 13:10:59,047:INFO:SubProcess create_model() end ==================================
2024-04-14 13:10:59,047:INFO:choose_better activated
2024-04-14 13:10:59,054:INFO:SubProcess create_model() called ==================================
2024-04-14 13:10:59,056:INFO:Initializing create_model()
2024-04-14 13:10:59,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 13:10:59,056:INFO:Checking exceptions
2024-04-14 13:10:59,061:INFO:Importing libraries
2024-04-14 13:10:59,061:INFO:Copying training dataset
2024-04-14 13:10:59,077:INFO:Defining folds
2024-04-14 13:10:59,077:INFO:Declaring metric variables
2024-04-14 13:10:59,077:INFO:Importing untrained model
2024-04-14 13:10:59,078:INFO:Declaring custom model
2024-04-14 13:10:59,079:INFO:Logistic Regression Imported successfully
2024-04-14 13:10:59,080:INFO:Starting cross validation
2024-04-14 13:10:59,081:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 13:10:59,434:INFO:Calculating mean and std
2024-04-14 13:10:59,437:INFO:Creating metrics dataframe
2024-04-14 13:10:59,444:INFO:Finalizing model
2024-04-14 13:10:59,505:INFO:Uploading results into container
2024-04-14 13:10:59,508:INFO:Uploading model into container now
2024-04-14 13:10:59,510:INFO:_master_model_container: 6
2024-04-14 13:10:59,510:INFO:_display_container: 6
2024-04-14 13:10:59,511:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 13:10:59,511:INFO:create_model() successfully completed......................................
2024-04-14 13:10:59,687:INFO:SubProcess create_model() end ==================================
2024-04-14 13:10:59,690:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5234
2024-04-14 13:10:59,691:INFO:LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5476
2024-04-14 13:10:59,692:INFO:LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-14 13:10:59,692:INFO:choose_better completed
2024-04-14 13:10:59,717:INFO:_master_model_container: 6
2024-04-14 13:10:59,717:INFO:_display_container: 5
2024-04-14 13:10:59,718:INFO:LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 13:10:59,719:INFO:tune_model() successfully completed......................................
2024-04-14 13:10:59,933:INFO:Initializing save_model()
2024-04-14 13:10:59,934:INFO:save_model(model=LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 13:10:59,934:INFO:Adding model into prep_pipe
2024-04-14 13:10:59,945:INFO:modelo_kobe.pkl saved in current working directory
2024-04-14 13:10:59,964:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 LogisticRegression(C=1.301, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=8797, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-14 13:10:59,964:INFO:save_model() successfully completed......................................
2024-04-14 13:11:00,185:INFO:Initializing load_model()
2024-04-14 13:11:00,186:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-14 13:11:00,220:INFO:Initializing predict_model()
2024-04-14 13:11:00,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002732F545940>)
2024-04-14 13:11:00,221:INFO:Checking exceptions
2024-04-14 13:11:00,221:INFO:Preloading libraries
2024-04-14 13:11:00,229:INFO:Set up data.
2024-04-14 13:11:00,242:INFO:Set up index.
2024-04-14 13:11:00,709:INFO:Initializing predict_model()
2024-04-14 13:11:00,709:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002732A6CF6D0>, estimator=LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002732F545940>)
2024-04-14 13:11:00,709:INFO:Checking exceptions
2024-04-14 13:11:00,709:INFO:Preloading libraries
2024-04-14 13:11:00,714:INFO:Set up data.
2024-04-14 13:11:00,731:INFO:Set up index.
2024-04-14 13:11:01,754:WARNING:c:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-14 13:11:13,664:WARNING:C:\Users\gabri\AppData\Local\Temp\ipykernel_13948\241547523.py:133: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions('modelo_kobe')[-1].version

2024-04-14 13:18:10,326:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:18:10,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:18:10,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:18:10,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 13:18:12,824:INFO:PyCaret ClassificationExperiment
2024-04-14 13:18:12,824:INFO:Logging name: clf-default-name
2024-04-14 13:18:12,826:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 13:18:12,827:INFO:version 3.3.0
2024-04-14 13:18:12,827:INFO:Initializing setup()
2024-04-14 13:18:12,828:INFO:self.USI: dea3
2024-04-14 13:18:12,828:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'log_plots_param', 'data', 'gpu_n_jobs_param', 'gpu_param', 'USI', 'idx', '_ml_usecase', 'exp_id', '_available_plots', 'target_param', 'y_test', 'X', 'y_train', 'n_jobs_param', 'fold_generator', 'exp_name_log', 'html_param', 'is_multiclass', 'pipeline', 'memory', 'y', 'X_train', 'fix_imbalance', 'X_test', 'fold_shuffle_param', 'seed'}
2024-04-14 13:18:12,829:INFO:Checking environment
2024-04-14 13:18:12,830:INFO:python_version: 3.9.5
2024-04-14 13:18:12,831:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2024-04-14 13:18:12,832:INFO:machine: AMD64
2024-04-14 13:18:12,860:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-14 13:18:12,869:INFO:Memory: svmem(total=6312697856, available=348270592, percent=94.5, used=5964427264, free=348270592)
2024-04-14 13:18:12,870:INFO:Physical Core: 4
2024-04-14 13:18:12,870:INFO:Logical Core: 8
2024-04-14 13:18:12,870:INFO:Checking libraries
2024-04-14 13:18:12,871:INFO:System:
2024-04-14 13:18:12,871:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2024-04-14 13:18:12,871:INFO:executable: C:\Users\gabri\AppData\Local\Programs\Python\Python39\python.exe
2024-04-14 13:18:12,871:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-14 13:18:12,871:INFO:PyCaret required dependencies:
2024-04-14 13:18:13,101:INFO:                 pip: 24.0
2024-04-14 13:18:13,101:INFO:          setuptools: 56.0.0
2024-04-14 13:18:13,101:INFO:             pycaret: 3.3.0
2024-04-14 13:18:13,101:INFO:             IPython: 8.6.0
2024-04-14 13:18:13,101:INFO:          ipywidgets: 8.1.2
2024-04-14 13:18:13,101:INFO:                tqdm: 4.66.2
2024-04-14 13:18:13,102:INFO:               numpy: 1.24.4
2024-04-14 13:18:13,102:INFO:              pandas: 2.1.4
2024-04-14 13:18:13,102:INFO:              jinja2: 3.1.2
2024-04-14 13:18:13,102:INFO:               scipy: 1.9.0
2024-04-14 13:18:13,102:INFO:              joblib: 1.3.2
2024-04-14 13:18:13,102:INFO:             sklearn: 1.4.1.post1
2024-04-14 13:18:13,102:INFO:                pyod: 1.1.3
2024-04-14 13:18:13,102:INFO:            imblearn: 0.12.2
2024-04-14 13:18:13,102:INFO:   category_encoders: 2.6.3
2024-04-14 13:18:13,102:INFO:            lightgbm: 4.3.0
2024-04-14 13:18:13,103:INFO:               numba: 0.59.1
2024-04-14 13:18:13,103:INFO:            requests: 2.31.0
2024-04-14 13:18:13,103:INFO:          matplotlib: 3.5.3
2024-04-14 13:18:13,103:INFO:          scikitplot: 0.3.7
2024-04-14 13:18:13,103:INFO:         yellowbrick: 1.5
2024-04-14 13:18:13,103:INFO:              plotly: 5.15.0
2024-04-14 13:18:13,103:INFO:    plotly-resampler: Not installed
2024-04-14 13:18:13,103:INFO:             kaleido: 0.2.1
2024-04-14 13:18:13,103:INFO:           schemdraw: 0.15
2024-04-14 13:18:13,103:INFO:         statsmodels: 0.14.1
2024-04-14 13:18:13,103:INFO:              sktime: 0.28.0
2024-04-14 13:18:13,104:INFO:               tbats: 1.1.3
2024-04-14 13:18:13,104:INFO:            pmdarima: 2.0.4
2024-04-14 13:18:13,104:INFO:              psutil: 5.9.4
2024-04-14 13:18:13,104:INFO:          markupsafe: 2.1.1
2024-04-14 13:18:13,104:INFO:             pickle5: Not installed
2024-04-14 13:18:13,104:INFO:         cloudpickle: 3.0.0
2024-04-14 13:18:13,104:INFO:         deprecation: 2.1.0
2024-04-14 13:18:13,104:INFO:              xxhash: 3.4.1
2024-04-14 13:18:13,104:INFO:           wurlitzer: Not installed
2024-04-14 13:18:13,104:INFO:PyCaret optional dependencies:
2024-04-14 13:18:13,125:INFO:                shap: 0.45.0
2024-04-14 13:18:13,125:INFO:           interpret: 0.6.0
2024-04-14 13:18:13,125:INFO:                umap: 0.5.6
2024-04-14 13:18:13,125:INFO:     ydata_profiling: 4.7.0
2024-04-14 13:18:13,125:INFO:  explainerdashboard: 0.4.7
2024-04-14 13:18:13,126:INFO:             autoviz: Not installed
2024-04-14 13:18:13,126:INFO:           fairlearn: 0.7.0
2024-04-14 13:18:13,126:INFO:          deepchecks: Not installed
2024-04-14 13:18:13,126:INFO:             xgboost: Not installed
2024-04-14 13:18:13,126:INFO:            catboost: Not installed
2024-04-14 13:18:13,126:INFO:              kmodes: Not installed
2024-04-14 13:18:13,126:INFO:             mlxtend: Not installed
2024-04-14 13:18:13,126:INFO:       statsforecast: Not installed
2024-04-14 13:18:13,126:INFO:        tune_sklearn: Not installed
2024-04-14 13:18:13,126:INFO:                 ray: Not installed
2024-04-14 13:18:13,126:INFO:            hyperopt: Not installed
2024-04-14 13:18:13,127:INFO:              optuna: Not installed
2024-04-14 13:18:13,127:INFO:               skopt: Not installed
2024-04-14 13:18:13,127:INFO:              mlflow: 2.11.3
2024-04-14 13:18:13,127:INFO:              gradio: Not installed
2024-04-14 13:18:13,127:INFO:             fastapi: Not installed
2024-04-14 13:18:13,127:INFO:             uvicorn: Not installed
2024-04-14 13:18:13,127:INFO:              m2cgen: Not installed
2024-04-14 13:18:13,127:INFO:           evidently: Not installed
2024-04-14 13:18:13,127:INFO:               fugue: Not installed
2024-04-14 13:18:13,127:INFO:           streamlit: 1.23.1
2024-04-14 13:18:13,127:INFO:             prophet: Not installed
2024-04-14 13:18:13,128:INFO:None
2024-04-14 13:18:13,128:INFO:Set up data.
2024-04-14 13:18:13,144:INFO:Set up folding strategy.
2024-04-14 13:18:13,144:INFO:Set up train/test split.
2024-04-14 13:18:13,162:INFO:Set up index.
2024-04-14 13:18:13,162:INFO:Assigning column types.
2024-04-14 13:18:13,170:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 13:18:13,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 13:18:13,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:18:13,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,430:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 13:18:13,431:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:18:13,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,485:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 13:18:13,603:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:18:13,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,872:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 13:18:13,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:13,944:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 13:18:14,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:14,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:14,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:14,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:14,285:INFO:Preparing preprocessing pipeline...
2024-04-14 13:18:14,290:INFO:Set up simple imputation.
2024-04-14 13:18:14,327:INFO:Finished creating preprocessing pipeline.
2024-04-14 13:18:14,334:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\gabri\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 13:18:14,334:INFO:Creating final display dataframe.
2024-04-14 13:18:14,454:INFO:Setup _display_container:                     Description             Value
0                    Session id              8910
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape         (5412, 7)
4        Transformed data shape         (5412, 7)
5   Transformed train set shape         (3788, 7)
6    Transformed test set shape         (1624, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              dea3
2024-04-14 13:18:14,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:14,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:15,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:15,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 13:18:15,007:WARNING:C:\Users\gabri\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 13:18:15,010:INFO:setup() successfully completed in 2.2s...............
2024-04-14 13:18:15,041:INFO:Initializing predict_model()
2024-04-14 13:18:15,041:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213ADE08A60>, estimator=LogisticRegression(C=1.301, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000213AE1701F0>)
2024-04-14 13:18:15,041:INFO:Checking exceptions
2024-04-14 13:18:15,041:INFO:Preloading libraries
2024-04-14 13:18:15,041:INFO:Set up data.
2024-04-14 13:18:15,048:INFO:Set up index.
